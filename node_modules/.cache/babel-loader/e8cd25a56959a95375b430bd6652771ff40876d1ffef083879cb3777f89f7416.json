{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["/Users/fabienpicard/Projects/astro-website/node_modules/datocms-plugin-sdk/src/types.ts"],"sourcesContent":["import type { SchemaTypes } from '@datocms/cma-client';\nimport type { BlockNodeTypeWithCustomStyle } from 'datocms-structured-text-utils';\n\ntype Account = SchemaTypes.Account;\ntype Organization = SchemaTypes.Organization;\ntype Field = SchemaTypes.Field;\ntype Fieldset = SchemaTypes.Fieldset;\ntype Item = SchemaTypes.Item;\ntype ItemType = SchemaTypes.ItemType;\ntype Plugin = SchemaTypes.Plugin;\ntype Role = SchemaTypes.Role;\ntype Site = SchemaTypes.Site;\ntype SsoUser = SchemaTypes.SsoUser;\ntype Upload = SchemaTypes.Upload;\ntype User = SchemaTypes.User;\n\nexport type Icon =\n  | AwesomeFontIconIdentifier\n  | { type: 'svg'; viewBox: string; content: string };\n\nexport type ItemListLocationQuery = {\n  locale?: string;\n  filter?: {\n    query?: string;\n    fields?: Record<string, unknown>;\n  };\n};\n\nexport type ItemPresentationInfo = {\n  /** The title to present the record */\n  title: string;\n  /** An image representative of the record */\n  imageUrl?: string;\n  /**\n   * If different plugins implement the `buildItemPresentationInfo` hook, the\n   * one with the lowest `rank` will be used. If you want to specify an explicit\n   * value for `rank`, make sure to offer a way for final users to customize it\n   * inside the plugin's settings form, otherwise the hardcoded value you choose\n   * might clash with the one of another plugin!\n   */\n  rank?: number;\n};\n\nexport type InitialLocationQueryForItemSelector = {\n  locationQuery: ItemListLocationQuery;\n  /**\n   * If different plugins implement the `initialLocationQueryForItemSelector`\n   * hook, the one with the lowest `rank` will be used. If you want to specify\n   * an explicit value for `rank`, make sure to offer a way for final users to\n   * customize it inside the plugin's settings form, otherwise the hardcoded\n   * value you choose might clash with the one of another plugin!\n   */\n  rank?: number;\n};\n\n/** A tab to be displayed in the top-bar of the UI */\nexport type MainNavigationTab = {\n  /** Label to be shown. Must be unique. */\n  label: string;\n  /**\n   * Icon to be shown alongside the label. Can be a FontAwesome icon name (ie.\n   * `\"address-book\"`) or a custom SVG definition. To maintain visual\n   * consistency with the rest of the interface, try to use FontAwesome icons\n   * whenever possible.\n   */\n  icon: Icon;\n  /** ID of the page linked to the tab */\n  pointsTo: {\n    pageId: string;\n  };\n  /**\n   * Expresses where you want to place the tab in the top-bar. If not specified,\n   * the tab will be placed after the standard tabs provided by DatoCMS itself.\n   */\n  placement?: [\n    'before' | 'after',\n    'content' | 'media' | 'schema' | 'configuration' | 'cdaPlayground',\n  ];\n  /**\n   * If different plugins specify the same `placement` for their tabs, they will\n   * be displayed by ascending `rank`. If you want to specify an explicit value\n   * for `rank`, make sure to offer a way for final users to customize it inside\n   * the plugin's settings form, otherwise the hardcoded value you choose might\n   * clash with the one of another plugin!\n   */\n  rank?: number;\n};\n\n/** An item contained in a Settings Area group */\nexport type SettingsAreaSidebarItem = {\n  /** Label to be shown. Must be unique. */\n  label: string;\n  /**\n   * Icon to be shown alongside the label. Can be a FontAwesome icon name (ie.\n   * `\"address-book\"`) or a custom SVG definition. To maintain visual\n   * consistency with the rest of the interface, try to use FontAwesome icons\n   * whenever possible.\n   */\n  icon: Icon;\n  /** ID of the page linked to the item */\n  pointsTo: {\n    pageId: string;\n  };\n};\n\n/**\n * The sidebar in the Settings Area presents a number of pages grouped by topic.\n * This object represents a new group to be added in the sideebar to the\n * standard ones DatoCMS provides.\n */\nexport type SettingsAreaSidebarItemGroup = {\n  /** Label to be shown. Must be unique. */\n  label: string;\n  /** The list of items it contains * */\n  items: SettingsAreaSidebarItem[];\n  /**\n   * Expresses where you want the group to be placed inside the sidebar. If not\n   * specified, the item will be placed after the standard items provided by\n   * DatoCMS itself.\n   */\n  placement?: ['before' | 'after', 'properties' | 'permissions'];\n  /**\n   * If different plugins specify the same `placement` for their sections, they\n   * will be displayed by ascending `rank`. If you want to specify an explicit\n   * value for `rank`, make sure to offer a way for final users to customize it\n   * inside the plugin's settings form, otherwise the hardcoded value you choose\n   * might clash with the one of another plugin!\n   */\n  rank?: number;\n};\n\n/**\n * The sidebar in the Content Area presents a number of user-defined menu-items.\n * This object represents a new item to be added in the sidebar.\n */\nexport type ContentAreaSidebarItem = {\n  /** Label to be shown. Must be unique. */\n  label: string;\n  /**\n   * Icon to be shown alongside the label. Can be a FontAwesome icon name (ie.\n   * `\"address-book\"`) or a custom SVG definition. To maintain visual\n   * consistency with the rest of the interface, try to use FontAwesome icons\n   * whenever possible.\n   */\n  icon: Icon;\n  /** ID of the page linked to the item */\n  pointsTo: {\n    pageId: string;\n  };\n  /**\n   * Expresses where you want the item to be placed inside the sidebar. If not\n   * specified, the item will be placed after the standard items provided by\n   * DatoCMS itself.\n   */\n  placement?: ['before' | 'after', 'menuItems' | 'seoPreferences'];\n  /**\n   * If different plugins specify the same `placement` for their panels, they\n   * will be displayed by ascending `rank`. If you want to specify an explicit\n   * value for `rank`, make sure to offer a way for final users to customize it\n   * inside the plugin's settings form, otherwise the hardcoded value you choose\n   * might clash with the one of another plugin!\n   */\n  rank?: number;\n};\n\nexport type FieldExtensionType = 'editor' | 'addon';\n\nexport type FieldType =\n  | 'boolean'\n  | 'color'\n  | 'date_time'\n  | 'date'\n  | 'file'\n  | 'float'\n  | 'gallery'\n  | 'integer'\n  | 'json'\n  | 'lat_lon'\n  | 'link'\n  | 'links'\n  | 'rich_text'\n  | 'seo'\n  | 'slug'\n  | 'string'\n  | 'structured_text'\n  | 'text'\n  | 'video';\n\n/**\n * Field extensions extend the basic functionality of DatoCMS when it comes to\n * presenting record's fields to the final user. Depending on the extension type\n * (`editor` or `addon`) they will be shown in different places of the\n * interface.\n */\nexport type ManualFieldExtension = {\n  /**\n   * ID of field extension. Will be the first argument for the\n   * `renderFieldExtension` function\n   */\n  id: string;\n  /** Name to be shown when editing fields */\n  name: string;\n  /**\n   * Type of field extension. An `editor` extension replaces the default field\n   * editor that DatoCMS provides, while an `addon` extension is placed\n   * underneath the field editor to provide additional info/behaviour. You can\n   * setup multiple field addons for every field.\n   */\n  type: FieldExtensionType;\n  /**\n   * For `editor` extensions: moves the field to the sidebar of the record\n   * editing page, mimicking a sidebar panel\n   */\n  asSidebarPanel?: boolean | { startOpen: boolean };\n  /**\n   * The type of fields that the field extension in compatible with. You can use\n   * the shortcut `all` to target all types of fields\n   */\n  fieldTypes: 'all' | FieldType[];\n  /**\n   * Whether this field extension needs some configuration options before being\n   * installed in a field or not. Will trigger the\n   * `renderManualFieldExtensionConfigScreen` and\n   * `validateManualFieldExtensionParameters` methods\n   */\n  configurable?: boolean | { initialHeight: number };\n  /**\n   * The initial height to set for the iframe that will render the field\n   * extension\n   */\n  initialHeight?: number;\n};\n\nexport type ItemFormSidebarPanelPlacement = [\n  'before' | 'after',\n  'info' | 'publishedVersion' | 'schedule' | 'links' | 'history',\n];\n\n/** A sidebar panel to be shown inside the record's editing page */\nexport type ItemFormSidebarPanel = {\n  /**\n   * ID of the panel. Will be the first argument for the\n   * `renderItemFormSidebarPanel` function\n   */\n  id: string;\n  /** Label to be shown on the collapsible sidebar panel handle */\n  label: string;\n  /**\n   * An arbitrary configuration object that will be passed as the `parameters`\n   * property of the second argument of the `renderItemFormSidebarPanel`\n   * function\n   */\n  parameters?: Record<string, unknown>;\n  /** Whether the sidebar panel will start open or collapsed */\n  startOpen?: boolean;\n  /**\n   * Expresses where you want the item to be placed inside the sidebar. If not\n   * specified, the item will be placed after the standard panels provided by\n   * DatoCMS itself.\n   */\n  placement?: ItemFormSidebarPanelPlacement;\n  /**\n   * If multiple sidebar panels specify the same `placement`, they will be\n   * sorted by ascending `rank`. If you want to specify an explicit value for\n   * `rank`, make sure to offer a way for final users to customize it inside the\n   * plugin's settings form, otherwise the hardcoded value you choose might\n   * clash with the one of another plugin!\n   */\n  rank?: number;\n  /** The initial height to set for the iframe that will render the sidebar panel */\n  initialHeight?: number;\n};\n\n/** A sidebar to be shown inside the record's editing page */\nexport type ItemFormSidebar = {\n  /**\n   * ID of the sidebar. Will be the first argument for the\n   * `renderItemFormSidebar` function\n   */\n  id: string;\n  /** Label to be shown on the collapsible sidebar handle */\n  label: string;\n  /**\n   * An arbitrary configuration object that will be passed as the `parameters`\n   * property of the second argument of the `renderItemFormSidebar` function\n   */\n  parameters?: Record<string, unknown>;\n  /**\n   * If multiple sidebars specify the same `placement`, they will be sorted by\n   * ascending `rank`. If you want to specify an explicit value for `rank`, make\n   * sure to offer a way for final users to customize it inside the plugin's\n   * settings form, otherwise the hardcoded value you choose might clash with\n   * the one of another plugin!\n   */\n  rank?: number;\n  /** The preferred width for the sidebar */\n  preferredWidth?: number;\n};\n\n/** An outlet to be shown at the top of a record's editing page */\nexport type ItemFormOutlet = {\n  /**\n   * ID of the outlet. Will be the first argument for the `renderItemFormOutlet`\n   * function\n   */\n  id: string;\n  /**\n   * Multiple outlets will be sorted by ascending `rank`. If you want to specify\n   * an explicit value for `rank`, make sure to offer a way for final users to\n   * customize it inside the plugin's settings form, otherwise the hardcoded\n   * value you choose might clash with the one of another plugin!\n   */\n  rank?: number;\n  /** The initial height to set for the iframe that will render the outlet */\n  initialHeight?: number;\n};\n\n/** A field editor/sidebar forced on a field */\nexport type EditorOverride = {\n  /**\n   * ID of field extension. Will be the first argument for the\n   * `renderFieldExtension` function\n   */\n  id: string;\n  /**\n   * Moves the field to the sidebar of the record editing page, mimicking a\n   * sidebar panel\n   */\n  asSidebarPanel?:\n    | boolean\n    | { startOpen?: boolean; placement?: ItemFormSidebarPanelPlacement };\n  /**\n   * An arbitrary configuration object that will be passed as the `parameters`\n   * property of the second argument of the `renderFieldExtension` function\n   */\n  parameters?: Record<string, unknown>;\n  /**\n   * If multiple plugins override a field, the one with the lowest `rank` will\n   * win. If you want to specify an explicit value for `rank`, make sure to\n   * offer a way for final users to customize it inside the plugin's settings\n   * form, otherwise the hardcoded value you choose might clash with the one of\n   * another plugin!\n   */\n  rank?: number;\n  /**\n   * The initial height to set for the iframe that will render the field\n   * extension\n   */\n  initialHeight?: number;\n};\n\n/** A field addon extension forced on a field */\nexport type AddonOverride = {\n  /**\n   * ID of field extension. Will be the first argument for the\n   * `renderFieldExtension` function\n   */\n  id: string;\n  /**\n   * An arbitrary configuration object that will be passed as the `parameters`\n   * property of the second argument of the `renderFieldExtension` function\n   */\n  parameters?: Record<string, unknown>;\n  /**\n   * If multiple addons are present for a field, they will be sorted by\n   * ascending `rank`. If you want to specify an explicit value for `rank`, make\n   * sure to offer a way for final users to customize it inside the plugin's\n   * settings form, otherwise the hardcoded value you choose might clash with\n   * the one of another plugin!\n   */\n  rank?: number;\n  /**\n   * The initial height to set for the iframe that will render the field\n   * extension\n   */\n  initialHeight?: number;\n};\n\nexport type StructuredTextCustomMarkPlacement = [\n  'before' | 'after',\n  'strong' | 'emphasis' | 'underline' | 'code' | 'highlight' | 'strikethrough',\n];\n\n/** An object expressing a custom mark for a Structured Text field */\nexport type StructuredTextCustomMark = {\n  /** ID of mark */\n  id: string;\n  /** Label representing the custom mark */\n  label: string;\n  /**\n   * Icon to be shown alongside the label. Can be a FontAwesome icon name (ie.\n   * `\"address-book\"`) or a custom SVG definition. To maintain visual\n   * consistency with the rest of the interface, try to use FontAwesome icons\n   * whenever possible\n   */\n  icon: Icon;\n  /**\n   * Expresses where you want the custom mark button to be placed inside the\n   * toolbar. If not specified, the item will be placed after the standard marks\n   * provided by DatoCMS itself.\n   */\n  placement?: StructuredTextCustomMarkPlacement;\n  /**\n   * If multiple custom marks specify the same `placement` for their toolbar\n   * button, they will be sorted by ascending `rank`. If you want to specify an\n   * explicit value for `rank`, make sure to offer a way for final users to\n   * customize it inside the plugin's settings form, otherwise the hardcoded\n   * value you choose might clash with the one of another plugin!\n   */\n  rank?: number;\n  /**\n   * Keyboard shortcut associated with the custom mark, expressed using the\n   * https://github.com/ianstormtaylor/is-hotkey syntax (ie. `mod+shift+x`)\n   */\n  keyboardShortcut?: string;\n  /** How the custom mark will be styled inside the editor */\n  appliedStyle: React.CSSProperties;\n};\n\n/** An object expressing a custom block style for a Structured Text field */\nexport type StructuredTextCustomBlockStyle = {\n  /** ID of custom block style */\n  id: string;\n  /** The block node that can apply this style */\n  node: BlockNodeTypeWithCustomStyle;\n  /** ID of custom block style */\n  label: string;\n  /** How the block will be styled inside the editor to represent the style */\n  appliedStyle: React.CSSProperties;\n  /**\n   * Custom styles for a block node will be sorted by ascending `rank`. If you\n   * want to specify an explicit value for `rank`, make sure to offer a way for\n   * final users to customize it inside the plugin's settings form, otherwise\n   * the hardcoded value you choose might clash with the one of another plugin!\n   */\n  rank?: number;\n};\n\n/**\n * An object expressing some field extensions you want to force on a particular\n * field\n */\nexport type FieldExtensionOverride = {\n  /** Force a field editor/sidebar extension on a field */\n  editor?: EditorOverride;\n  /** One or more field sidebar extensions to forcefully add to a field */\n  addons?: AddonOverride[];\n};\n\n/** An object containing the theme colors for the current DatoCMS project */\nexport type Theme = {\n  primaryColor: string;\n  accentColor: string;\n  semiTransparentAccentColor: string;\n  lightColor: string;\n  darkColor: string;\n};\n\n/** Focal point of an image asset */\nexport type FocalPoint = {\n  /** Horizontal position expressed as float between 0 and 1 */\n  x: number;\n  /** Vertical position expressed as float between 0 and 1 */\n  y: number;\n};\n\n/** The structure contained in a \"single asset\" field */\nexport type FileFieldValue = {\n  /** ID of the asset */\n  // eslint-disable-next-line camelcase\n  upload_id: string;\n  /** Alternate text for the asset */\n  alt: string | null;\n  /** Title for the asset */\n  title: string | null;\n  /** Focal point of an asset */\n  // eslint-disable-next-line camelcase\n  focal_point: FocalPoint | null;\n  /** Object with arbitrary metadata related to the asset */\n  // eslint-disable-next-line camelcase\n  custom_data: Record<string, string>;\n};\n\n/** A modal to present to the user */\nexport type Modal = {\n  /** ID of the modal. Will be the first argument for the `renderModal` function */\n  id: string;\n  /** Title for the modal. Ignored by `fullWidth` modals */\n  title?: string;\n  /** Whether to present a close button for the modal or not */\n  closeDisabled?: boolean;\n  /** Width of the modal. Can be a number, or one of the predefined sizes */\n  width?: 's' | 'm' | 'l' | 'xl' | 'fullWidth' | number;\n  /**\n   * An arbitrary configuration object that will be passed as the `parameters`\n   * property of the second argument of the `renderModal` function\n   */\n  parameters?: Record<string, unknown>;\n  /** The initial height to set for the iframe that will render the modal content */\n  initialHeight?: number;\n};\n\n/** An additional asset source */\nexport type AssetSource = {\n  /**\n   * ID of the asset source. Will be the first argument for the\n   * `renderAssetSource` function\n   */\n  id: string;\n  /** Name of the asset that will be shown to the user */\n  name: string;\n  /**\n   * Icon to be shown alongside the name. Can be a FontAwesome icon name (ie.\n   * `\"address-book\"`) or a custom SVG definition. To maintain visual\n   * consistency with the rest of the interface, try to use FontAwesome icons\n   * whenever possible.\n   */\n  icon: Icon;\n  /**\n   * Configuration options for the modal that will be opened to select a media\n   * file from this source\n   */\n  modal?: {\n    /** Width of the modal. Can be a number, or one of the predefined sizes */\n    width?: 's' | 'm' | 'l' | 'xl' | number;\n    /**\n     * The initial height to set for the iframe that will render the modal\n     * content\n     */\n    initialHeight?: number;\n  };\n};\n\n/** A toast notification to present to the user */\nexport type Toast<CtaValue = unknown> = {\n  /** Message of the notification */\n  message: string;\n  /** Type of notification. Will present the toast in a different color accent. */\n  type: 'notice' | 'alert' | 'warning';\n  /** An optional button to show inside the toast */\n  cta?: {\n    /** Label for the button */\n    label: string;\n    /**\n     * The value to be returned by the `customToast` promise if the button is\n     * clicked by the user\n     */\n    value: CtaValue;\n  };\n  /** Whether the toast is to be automatically closed if the user changes page */\n  dismissOnPageChange?: boolean;\n  /**\n   * Whether the toast is to be automatically closed after some time (`true`\n   * will use the default DatoCMS time interval)\n   */\n  dismissAfterTimeout?: boolean | number;\n};\n\n/** A choice presented in a `openConfirm` panel */\nexport type ConfirmChoice = {\n  /** The label to be shown for the choice */\n  label: string;\n  /**\n   * The value to be returned by the `openConfirm` promise if the button is\n   * clicked by the user\n   */\n  value: unknown;\n  /**\n   * The intent of the button. Will present the button in a different color\n   * accent.\n   */\n  intent?: 'positive' | 'negative';\n};\n\n/** Options for the `openConfirm` function */\nexport type ConfirmOptions = {\n  /** The title to be shown inside the confirmation panel */\n  title: string;\n  /** The main message to be shown inside the confirmation panel */\n  content: string;\n  /** The different options the user can choose from */\n  choices: ConfirmChoice[];\n  /** The cancel option to present to the user */\n  cancel: ConfirmChoice;\n};\n\n/** Generic properties available in all the hooks */\nexport type CommonProperties = {\n  /** The current DatoCMS project */\n  site: Site;\n  /** The ID of the current environment */\n  environment: string;\n  /** All the models of the current DatoCMS project, indexed by ID */\n  itemTypes: Partial<Record<string, ItemType>>;\n  /**\n   * The current DatoCMS user. It can either be the owner or one of the\n   * collaborators (regular or SSO).\n   */\n  currentUser: User | SsoUser | Account | Organization;\n  /** The role for the current DatoCMS user */\n  currentRole: Role;\n  /**\n   * The access token to perform API calls on behalf of the current user. Only\n   * available if `currentUserAccessToken` additional permission is granted\n   */\n  currentUserAccessToken: string | undefined;\n  /** The current plugin */\n  plugin: Plugin;\n  /**\n   * UI preferences of the current user (right now, only the preferred locale is\n   * available)\n   */\n  ui: {\n    /** Preferred locale */\n    locale: string;\n  };\n};\n\nexport type InitAdditionalProperties = {\n  mode: 'init';\n};\n\nexport type InitProperties = CommonProperties & InitAdditionalProperties;\n\nexport type InitMethods = {\n  getSettings: () => Promise<InitProperties>;\n};\n\nexport type InitPropertiesAndMethods = InitMethods & InitProperties;\n\n/** Additional properties available in all `renderXXX` hooks */\nexport type RenderAdditionalProperties = {\n  /**\n   * All the fields currently loaded for the current DatoCMS project, indexed by\n   * ID. It will always contain the current model fields and all the fields of\n   * the blocks it might contain via Modular Content/Structured Text fields. If\n   * some fields you need are not present, use the `loadItemTypeFields` function\n   * to load them.\n   */\n  fields: Partial<Record<string, Field>>;\n  /**\n   * All the fieldsets currently loaded for the current DatoCMS project, indexed\n   * by ID. It will always contain the current model fields and all the fields\n   * of the blocks it might contain via Modular Content/Structured Text fields.\n   * If some fields you need are not present, use the `loadItemTypeFieldsets`\n   * function to load them.\n   */\n  fieldsets: Partial<Record<string, Fieldset>>;\n  /** An object containing the theme colors for the current DatoCMS project */\n  theme: Theme;\n  /**\n   * All the regular users currently loaded for the current DatoCMS project,\n   * indexed by ID. It will always contain the current user. If some users you\n   * need are not present, use the `loadUsers` function to load them.\n   */\n  users: Partial<Record<string, User>>;\n  /**\n   * All the SSO users currently loaded for the current DatoCMS project, indexed\n   * by ID. It will always contain the current user. If some users you need are\n   * not present, use the `loadSsoUsers` function to load them.\n   */\n  ssoUsers: Partial<Record<string, SsoUser>>;\n  /**\n   * The account that is the project owner\n   *\n   * @deprecated Please use `.owner` instead, as the project owner can also be\n   *   an organization\n   */\n  account: Account | undefined;\n  /** The account that is the project owner */\n  owner: Account | Organization;\n  /** The padding in px that must be applied to the body */\n  bodyPadding: [number, number, number, number];\n};\n\nexport type RenderProperties = CommonProperties & RenderAdditionalProperties;\n\nexport type FieldAppearanceChange =\n  | {\n      operation: 'removeEditor';\n    }\n  | {\n      operation: 'updateEditor';\n      newFieldExtensionId?: string;\n      newParameters?: Record<string, unknown>;\n    }\n  | {\n      operation: 'setEditor';\n      fieldExtensionId: string;\n      parameters: Record<string, unknown>;\n    }\n  | {\n      operation: 'removeAddon';\n      index: number;\n    }\n  | {\n      operation: 'updateAddon';\n      index: number;\n      newFieldExtensionId?: string;\n      newParameters?: Record<string, unknown>;\n    }\n  | {\n      operation: 'insertAddon';\n      index: number;\n      fieldExtensionId: string;\n      parameters: Record<string, unknown>;\n    };\n\n/**\n * These methods can be used to update both plugin parameters and manual field\n * extensions configuration.\n */\nexport type UpdateParametersMethods = {\n  /**\n   * Updates the plugin parameters.\n   *\n   * Always check `ctx.currentRole.meta.final_permissions.can_edit_schema`\n   * before calling this, as the user might not have the permission to perform\n   * the operation.\n   *\n   * @example\n   *\n   * ```js\n   * await ctx.updatePluginParameters({ debugMode: true });\n   * await ctx.notice('Plugin parameters successfully updated!');\n   * ```\n   */\n  updatePluginParameters: (params: Record<string, unknown>) => Promise<void>;\n  /**\n   * Performs changes in the appearance of a field. You can install/remove a\n   * manual field extension, or tweak their parameters. If multiple changes are\n   * passed, they will be applied sequencially.\n   *\n   * Always check `ctx.currentRole.meta.final_permissions.can_edit_schema`\n   * before calling this, as the user might not have the permission to perform\n   * the operation.\n   *\n   * @example\n   *\n   * ```js\n   * const fields = await ctx.loadFieldsUsingPlugin();\n   *\n   * if (fields.length === 0) {\n   *   ctx.alert('No field is using this plugin as a manual extension!');\n   *   return;\n   * }\n   *\n   * for (const field of fields) {\n   *   const { appearance } = field.attributes;\n   *   const operations = [];\n   *\n   *   if (appearance.editor === ctx.plugin.id) {\n   *     operations.push({\n   *       operation: 'updateEditor',\n   *       newParameters: {\n   *         ...appearance.parameters,\n   *         foo: 'bar',\n   *       },\n   *     });\n   *   }\n   *\n   *   appearance.addons.forEach((addon, i) => {\n   *     if (addon.id !== ctx.plugin.id) {\n   *       return;\n   *     }\n   *\n   *     operations.push({\n   *       operation: 'updateAddon',\n   *       index: i,\n   *       newParameters: { ...addon.parameters, foo: 'bar' },\n   *     });\n   *   });\n   *\n   *   await ctx.updateFieldAppearance(field.id, operations);\n   *   ctx.notice(`Successfully edited field ${field.attributes.api_key}`);\n   * }\n   * ```\n   */\n  updateFieldAppearance: (\n    fieldId: string,\n    changes: FieldAppearanceChange[],\n  ) => Promise<void>;\n};\n\n/**\n * These methods can be used to asyncronously load additional information your\n * plugin needs to work\n */\nexport type LoadDataMethods = {\n  /**\n   * Loads all the fields for a specific model (or block). Fields will be\n   * returned and will also be available in the the `fields` property.\n   *\n   * @example\n   *\n   * ```js\n   * const itemTypeId = prompt('Please insert a model ID:');\n   *\n   * const fields = await ctx.loadItemTypeFields(itemTypeId);\n   *\n   * ctx.notice(\n   *   `Success! ${fields\n   *     .map((field) => field.attributes.api_key)\n   *     .join(', ')}`,\n   * );\n   * ```\n   */\n  loadItemTypeFields: (itemTypeId: string) => Promise<Field[]>;\n  /**\n   * Loads all the fieldsets for a specific model (or block). Fieldsets will be\n   * returned and will also be available in the the `fieldsets` property.\n   *\n   * @example\n   *\n   * ```js\n   * const itemTypeId = prompt('Please insert a model ID:');\n   *\n   * const fieldsets = await ctx.loadItemTypeFieldsets(itemTypeId);\n   *\n   * ctx.notice(\n   *   `Success! ${fieldsets\n   *     .map((fieldset) => fieldset.attributes.title)\n   *     .join(', ')}`,\n   * );\n   * ```\n   */\n  loadItemTypeFieldsets: (itemTypeId: string) => Promise<Fieldset[]>;\n  /**\n   * Loads all the fields in the project that are currently using the plugin for\n   * one of its manual field extensions.\n   *\n   * @example\n   *\n   * ```js\n   * const fields = await ctx.loadFieldsUsingPlugin();\n   *\n   * ctx.notice(\n   *   `Success! ${fields\n   *     .map((field) => field.attributes.api_key)\n   *     .join(', ')}`,\n   * );\n   * ```\n   */\n  loadFieldsUsingPlugin: () => Promise<Field[]>;\n  /**\n   * Loads all regular users. Users will be returned and will also be available\n   * in the the `users` property.\n   *\n   * @example\n   *\n   * ```js\n   * const users = await ctx.loadUsers();\n   *\n   * ctx.notice(`Success! ${users.map((user) => user.id).join(', ')}`);\n   * ```\n   */\n  loadUsers: () => Promise<User[]>;\n  /**\n   * Loads all SSO users. Users will be returned and will also be available in\n   * the the `ssoUsers` property.\n   *\n   * @example\n   *\n   * ```js\n   * const users = await ctx.loadSsoUsers();\n   *\n   * ctx.notice(`Success! ${users.map((user) => user.id).join(', ')}`);\n   * ```\n   */\n  loadSsoUsers: () => Promise<SsoUser[]>;\n};\n\n/**\n * These methods let you open the standard DatoCMS dialogs needed to interact\n * with records\n */\nexport type ItemDialogMethods = {\n  /**\n   * Opens a dialog for creating a new record. It returns a promise resolved\n   * with the newly created record or `null` if the user closes the dialog\n   * without creating anything.\n   *\n   * @example\n   *\n   * ```js\n   * const itemTypeId = prompt('Please insert a model ID:');\n   *\n   * const item = await ctx.createNewItem(itemTypeId);\n   *\n   * if (item) {\n   *   ctx.notice(`Success! ${item.id}`);\n   * } else {\n   *   ctx.alert('Closed!');\n   * }\n   * ```\n   */\n  createNewItem: (itemTypeId: string) => Promise<Item | null>;\n  /**\n   * Opens a dialog for selecting one (or multiple) record(s) from a list of\n   * existing records of type `itemTypeId`. It returns a promise resolved with\n   * the selected record(s), or `null` if the user closes the dialog without\n   * choosing any record.\n   *\n   * @example\n   *\n   * ```js\n   * const itemTypeId = prompt('Please insert a model ID:');\n   *\n   * const items = await ctx.selectItem(itemTypeId, { multiple: true });\n   *\n   * if (items) {\n   *   ctx.notice(`Success! ${items.map((i) => i.id).join(', ')}`);\n   * } else {\n   *   ctx.alert('Closed!');\n   * }\n   * ```\n   */\n  selectItem: {\n    (\n      itemTypeId: string,\n      options: { multiple: true; initialLocationQuery?: ItemListLocationQuery },\n    ): Promise<Item[] | null>;\n    (\n      itemTypeId: string,\n      options?: {\n        multiple: false;\n        initialLocationQuery?: ItemListLocationQuery;\n      },\n    ): Promise<Item | null>;\n  };\n  /**\n   * Opens a dialog for editing an existing record. It returns a promise\n   * resolved with the edited record, or `null` if the user closes the dialog\n   * without persisting any change.\n   *\n   * @example\n   *\n   * ```js\n   * const itemId = prompt('Please insert a record ID:');\n   *\n   * const item = await ctx.editItem(itemId);\n   *\n   * if (item) {\n   *   ctx.notice(`Success! ${item.id}`);\n   * } else {\n   *   ctx.alert('Closed!');\n   * }\n   * ```\n   */\n  editItem: (itemId: string) => Promise<Item | null>;\n};\n\n/**\n * These methods can be used to show UI-consistent toast notifications to the\n * end-user\n */\nexport type ToastMethods = {\n  /**\n   * Triggers an \"error\" toast displaying the selected message\n   *\n   * @example\n   *\n   * ```js\n   * const message = prompt(\n   *   'Please insert a message:',\n   *   'This is an alert message!',\n   * );\n   *\n   * await ctx.alert(message);\n   * ```\n   */\n  alert: (message: string) => Promise<void>;\n  /**\n   * Triggers a \"success\" toast displaying the selected message\n   *\n   * @example\n   *\n   * ```js\n   * const message = prompt(\n   *   'Please insert a message:',\n   *   'This is a notice message!',\n   * );\n   *\n   * await ctx.notice(message);\n   * ```\n   */\n  notice: (message: string) => Promise<void>;\n  /**\n   * Triggers a custom toast displaying the selected message (and optionally a\n   * CTA)\n   *\n   * @example\n   *\n   * ```js\n   * const result = await ctx.customToast({\n   *   type: 'warning',\n   *   message: 'Just a sample warning notification!',\n   *   dismissOnPageChange: true,\n   *   dismissAfterTimeout: 5000,\n   *   cta: {\n   *     label: 'Execute call-to-action',\n   *     value: 'cta',\n   *   },\n   * });\n   *\n   * if (result === 'cta') {\n   *   ctx.notice(`Clicked CTA!`);\n   * }\n   * ```\n   */\n  customToast: <CtaValue = unknown>(\n    toast: Toast<CtaValue>,\n  ) => Promise<CtaValue | null>;\n};\n\n/**\n * These methods let you open the standard DatoCMS dialogs needed to interact\n * with Media Area assets\n */\nexport type UploadDialogMethods = {\n  /**\n   * Opens a dialog for selecting one (or multiple) existing asset(s). It\n   * returns a promise resolved with the selected asset(s), or `null` if the\n   * user closes the dialog without selecting any upload.\n   *\n   * @example\n   *\n   * ```js\n   * const item = await ctx.selectUpload({ multiple: false });\n   *\n   * if (item) {\n   *   ctx.notice(`Success! ${item.id}`);\n   * } else {\n   *   ctx.alert('Closed!');\n   * }\n   * ```\n   */\n  selectUpload: {\n    (options: { multiple: true }): Promise<Upload[] | null>;\n    (options?: { multiple: false }): Promise<Upload | null>;\n  };\n\n  /**\n   * Opens a dialog for editing a Media Area asset. It returns a promise\n   * resolved with:\n   *\n   * - The updated asset, if the user persists some changes to the asset itself\n   * - `null`, if the user closes the dialog without persisting any change\n   * - An asset structure with an additional `deleted` property set to true, if\n   *   the user deletes the asset\n   *\n   * @example\n   *\n   * ```js\n   * const uploadId = prompt('Please insert an asset ID:');\n   *\n   * const item = await ctx.editUpload(uploadId);\n   *\n   * if (item) {\n   *   ctx.notice(`Success! ${item.id}`);\n   * } else {\n   *   ctx.alert('Closed!');\n   * }\n   * ```\n   */\n  editUpload: (\n    uploadId: string,\n  ) => Promise<(Upload & { deleted?: true }) | null>;\n  /**\n   * Opens a dialog for editing a \"single asset\" field structure. It returns a\n   * promise resolved with the updated structure, or `null` if the user closes\n   * the dialog without persisting any change.\n   *\n   * @example\n   *\n   * ```js\n   * const uploadId = prompt('Please insert an asset ID:');\n   *\n   * const result = await ctx.editUploadMetadata({\n   *   upload_id: uploadId,\n   *   alt: null,\n   *   title: null,\n   *   custom_data: {},\n   *   focal_point: null,\n   * });\n   *\n   * if (result) {\n   *   ctx.notice(`Success! ${JSON.stringify(result)}`);\n   * } else {\n   *   ctx.alert('Closed!');\n   * }\n   * ```\n   */\n  editUploadMetadata: (\n    /** The \"single asset\" field structure */\n    fileFieldValue: FileFieldValue,\n    /** Shows metadata information for a specific locale */\n    locale?: string,\n  ) => Promise<FileFieldValue | null>;\n};\n\n/** These methods can be used to open custom dialogs/confirmation panels */\nexport type CustomDialogMethods = {\n  /**\n   * Opens a custom modal. Returns a promise resolved with what the modal itself\n   * returns calling the `resolve()` function\n   *\n   * @example\n   *\n   * ```js\n   * const result = await ctx.openModal({\n   *   id: 'regular',\n   *   title: 'Custom title!',\n   *   width: 'l',\n   *   parameters: { foo: 'bar' },\n   * });\n   *\n   * if (result) {\n   *   ctx.notice(`Success! ${JSON.stringify(result)}`);\n   * } else {\n   *   ctx.alert('Closed!');\n   * }\n   * ```\n   */\n  openModal: (modal: Modal) => Promise<unknown>;\n  /**\n   * Opens a UI-consistent confirmation dialog. Returns a promise resolved with\n   * the value of the choice made by the user\n   *\n   * @example\n   *\n   * ```js\n   * const result = await ctx.openConfirm({\n   *   title: 'Custom title',\n   *   content:\n   *     'Lorem Ipsum is simply dummy text of the printing and typesetting industry',\n   *   choices: [\n   *     {\n   *       label: 'Positive',\n   *       value: 'positive',\n   *       intent: 'positive',\n   *     },\n   *     {\n   *       label: 'Negative',\n   *       value: 'negative',\n   *       intent: 'negative',\n   *     },\n   *   ],\n   *   cancel: {\n   *     label: 'Cancel',\n   *     value: false,\n   *   },\n   * });\n   *\n   * if (result) {\n   *   ctx.notice(`Success! ${result}`);\n   * } else {\n   *   ctx.alert('Cancelled!');\n   * }\n   * ```\n   */\n  openConfirm: (options: ConfirmOptions) => Promise<unknown>;\n};\n\n/** These methods can be used to take the user to different pages */\nexport type NavigateMethods = {\n  /**\n   * Moves the user to another URL internal to the backend\n   *\n   * @example\n   *\n   * ```js\n   * await ctx.navigateTo('/');\n   * ```\n   */\n  navigateTo: (path: string) => Promise<void>;\n};\n\n/** These methods can be used to set various properties of the containing iframe */\nexport type IframeMethods = {\n  /** Sets the height for the iframe */\n  setHeight: (number: number) => Promise<void>;\n};\n\nexport type RenderMethods = LoadDataMethods &\n  UpdateParametersMethods &\n  ToastMethods &\n  ItemDialogMethods &\n  UploadDialogMethods &\n  CustomDialogMethods &\n  NavigateMethods;\n\n/**\n * These information describe the current state of the form that's being shown\n * to the end-user to edit a record\n */\nexport type ItemFormAdditionalProperties = {\n  /** The currently active locale for the record */\n  locale: string;\n  /**\n   * If an already persisted record is being edited, returns the full record\n   * entity\n   */\n  item: Item | null;\n  /** The model for the record being edited */\n  itemType: ItemType;\n  /** The complete internal form state */\n  formValues: Record<string, unknown>;\n  /** The current status of the record being edited */\n  itemStatus: 'new' | 'draft' | 'updated' | 'published';\n  /** Whether the form is currently submitting itself or not */\n  isSubmitting: boolean;\n  /** Whether the form has some non-persisted changes or not */\n  isFormDirty: boolean;\n  /** Current number of blocks present in form state */\n  blocksAnalysis: {\n    usage: {\n      /** Total number of blocks present in form state */\n      total: number;\n      /** Total number of blocks present in non-localized fields */\n      nonLocalized: number;\n      /** Total number of blocks present in localized fields, per locale */\n      perLocale: Record<string, number>;\n    };\n    /** Maximum number of blocks per item */\n    maximumPerItem: number;\n  };\n};\n\nexport type ItemFormProperties = RenderProperties &\n  ItemFormAdditionalProperties;\n\n/**\n * These methods can be used to interact with the form that's being shown to the\n * end-user to edit a record\n */\nexport type ItemFormAdditionalMethods = {\n  /**\n   * Hides/shows a specific field in the form. Please be aware that when a field\n   * is hidden, the field editor for that field will be removed from the DOM\n   * itself, including any associated plugins. When it is shown again, its\n   * plugins will be reinitialized.\n   *\n   * @example\n   *\n   * ```js\n   * const fieldPath = prompt(\n   *   'Please insert the path of a field in the form',\n   *   ctx.fieldPath,\n   * );\n   *\n   * await ctx.toggleField(fieldPath, true);\n   * ```\n   */\n  toggleField: (path: string, show: boolean) => Promise<void>;\n  /**\n   * Disables/re-enables a specific field in the form\n   *\n   * @example\n   *\n   * ```js\n   * const fieldPath = prompt(\n   *   'Please insert the path of a field in the form',\n   *   ctx.fieldPath,\n   * );\n   *\n   * await ctx.disableField(fieldPath, true);\n   * ```\n   */\n  disableField: (path: string, disable: boolean) => Promise<void>;\n  /**\n   * Smoothly navigates to a specific field in the form. If the field is\n   * localized it will switch language tab and then navigate to the chosen\n   * field.\n   *\n   * @example\n   *\n   * ```js\n   * const fieldPath = prompt(\n   *   'Please insert the path of a field in the form',\n   *   ctx.fieldPath,\n   * );\n   *\n   * await ctx.scrollToField(fieldPath);\n   * ```\n   */\n  scrollToField: (path: string, locale?: string) => Promise<void>;\n  /**\n   * Changes a specific path of the `formValues` object\n   *\n   * @example\n   *\n   * ```js\n   * const fieldPath = prompt(\n   *   'Please insert the path of a field in the form',\n   *   ctx.fieldPath,\n   * );\n   *\n   * await ctx.setFieldValue(fieldPath, 'new value');\n   * ```\n   */\n  setFieldValue: (path: string, value: unknown) => Promise<void>;\n  /**\n   * Takes the internal form state, and transforms it into an Item entity\n   * compatible with DatoCMS API.\n   *\n   * When `skipUnchangedFields`, only the fields that changed value will be\n   * serialized.\n   *\n   * If the required nested blocks are still not loaded, this method will return\n   * `undefined`.\n   *\n   * @example\n   *\n   * ```js\n   * await ctx.formValuesToItem(ctx.formValues, false);\n   * ```\n   */\n  formValuesToItem: (\n    formValues: Record<string, unknown>,\n    skipUnchangedFields?: boolean,\n  ) => Promise<Omit<Item, 'id' | 'meta'> | undefined>;\n  /**\n   * Takes an Item entity, and converts it into the internal form state\n   *\n   * @example\n   *\n   * ```js\n   * await ctx.itemToFormValues(ctx.item);\n   * ```\n   */\n  itemToFormValues: (\n    item: Omit<Item, 'id' | 'meta'>,\n  ) => Promise<Record<string, unknown>>;\n  /**\n   * Triggers a submit form for current record\n   *\n   * @example\n   *\n   * ```js\n   * await ctx.saveCurrentItem();\n   * ```\n   */\n  saveCurrentItem: (showToast?: boolean) => Promise<void>;\n};\n\nexport type ItemFormMethods = RenderMethods &\n  IframeMethods &\n  ItemFormAdditionalMethods;\n\n/** Information regarding the specific sidebar panel that you need to render */\nexport type RenderSidebarPanelAdditionalProperties = {\n  mode: 'renderItemFormSidebarPanel';\n  /** The ID of the sidebar panel that needs to be rendered */\n  sidebarPaneId: string;\n  /**\n   * The arbitrary `parameters` of the panel declared in the\n   * `itemFormSidebarPanels` function\n   */\n  parameters: Record<string, unknown>;\n};\n\nexport type RenderSidebarPanelProperties = ItemFormProperties &\n  RenderSidebarPanelAdditionalProperties;\n\nexport type RenderSidebarPanelAdditionalMethods = {\n  getSettings: () => Promise<RenderSidebarPanelProperties>;\n};\n\nexport type RenderSidebarPanelMethods = ItemFormMethods &\n  RenderSidebarPanelAdditionalMethods;\n\nexport type RenderSidebarPanelPropertiesAndMethods = RenderSidebarPanelMethods &\n  RenderSidebarPanelProperties;\n\n/** Information regarding the specific sidebar panel that you need to render */\nexport type RenderSidebarAdditionalProperties = {\n  mode: 'renderItemFormSidebar';\n  /** The ID of the sidebar that needs to be rendered */\n  sidebarId: string;\n  /**\n   * The arbitrary `parameters` of the declared in the `itemFormSidebars`\n   * function\n   */\n  parameters: Record<string, unknown>;\n};\n\nexport type RenderSidebarProperties = ItemFormProperties &\n  RenderSidebarAdditionalProperties;\n\nexport type RenderSidebarAdditionalMethods = {\n  getSettings: () => Promise<RenderSidebarProperties>;\n};\n\nexport type RenderSidebarMethods = ItemFormMethods &\n  RenderSidebarAdditionalMethods;\n\nexport type RenderSidebarPropertiesAndMethods = RenderSidebarMethods &\n  RenderSidebarProperties;\n\n/** Information regarding the specific outlet that you need to render */\nexport type RenderItemFormOutletAdditionalProperties = {\n  mode: 'renderItemFormOutlet';\n  /** The ID of the outlet that needs to be rendered */\n  itemFormOutletId: string;\n};\n\nexport type RenderItemFormOutletProperties = ItemFormProperties &\n  RenderItemFormOutletAdditionalProperties;\n\nexport type RenderItemFormOutletAdditionalMethods = {\n  getSettings: () => Promise<RenderItemFormOutletProperties>;\n};\n\nexport type RenderItemFormOutletMethods = ItemFormMethods &\n  RenderItemFormOutletAdditionalMethods;\n\nexport type RenderItemFormOutletPropertiesAndMethods =\n  RenderItemFormOutletMethods & RenderItemFormOutletProperties;\n\n/**\n * Information regarding the state of a specific field where you need to render\n * the field extension\n */\nexport type RenderFieldExtensionAdditionalProperties = {\n  mode: 'renderFieldExtension';\n  /** The ID of the field extension that needs to be rendered */\n  fieldExtensionId: string;\n  /** The arbitrary `parameters` of the field extension */\n  parameters: Record<string, unknown>;\n  /** Whether the field is currently disabled or not */\n  disabled: boolean;\n  /**\n   * The path in the `formValues` object where to find the current value for the\n   * field\n   */\n  fieldPath: string;\n  /** The field where the field extension is installed to */\n  field: Field;\n  /**\n   * If the field extension is installed in a field of a block, returns the top\n   * level Modular Content/Structured Text field containing the block itself\n   */\n  parentField: Field | undefined;\n  /**\n   * If the field extension is installed in a field of a block, returns the ID\n   * of the block — or `undefined` if the block is still not persisted — and the\n   * block model.\n   */\n  block: undefined | { id: string | undefined; blockModel: ItemType };\n};\n\nexport type RenderFieldExtensionProperties = ItemFormProperties &\n  RenderFieldExtensionAdditionalProperties;\n\nexport type RenderFieldExtensionAdditionalMethods = {\n  getSettings: () => Promise<RenderFieldExtensionProperties>;\n};\n\nexport type RenderFieldExtensionMethods = ItemFormMethods &\n  RenderFieldExtensionAdditionalMethods;\n\nexport type RenderFieldExtensionPropertiesAndMethods =\n  RenderFieldExtensionMethods & RenderFieldExtensionProperties;\n\n/** Information regarding the specific custom modal that you need to render */\nexport type RenderModalAdditionalProperties = {\n  mode: 'renderModal';\n  /** The ID of the modal that needs to be rendered */\n  modalId: string;\n  /**\n   * The arbitrary `parameters` of the modal declared in the `openModal`\n   * function\n   */\n  parameters: Record<string, unknown>;\n};\n\nexport type RenderModalProperties = RenderProperties &\n  RenderModalAdditionalProperties;\n\n/** These methods can be used to close the modal */\nexport type RenderModalAdditionalMethods = {\n  getSettings: () => Promise<RenderModalProperties>;\n  /**\n   * A function to be called by the plugin to close the modal. The `openModal`\n   * call will be resolved with the passed return value\n   *\n   * @example\n   *\n   * ```js\n   * const returnValue = prompt(\n   *   'Please specify the value to return to the caller:',\n   *   'success',\n   * );\n   *\n   * await ctx.resolve(returnValue);\n   * ```\n   */\n  resolve: (returnValue: unknown) => Promise<void>;\n};\n\nexport type RenderModalMethods = RenderMethods &\n  IframeMethods &\n  RenderModalAdditionalMethods;\n\nexport type RenderModalPropertiesAndMethods = RenderModalMethods &\n  RenderModalProperties;\n\n/**\n * Information regarding the specific asset source browser that you need to\n * render\n */\nexport type RenderAssetSourceAdditionalProperties = {\n  mode: 'renderAssetSource';\n  /** The ID of the assetSource that needs to be rendered */\n  assetSourceId: string;\n};\n\nexport type RenderAssetSourceProperties = RenderProperties &\n  RenderAssetSourceAdditionalProperties;\n\nexport type NewUploadResourceAsUrl = {\n  /**\n   * URL for the resource. The URL must respond with a\n   * `Access-Control-Allow-Origin` header — for instance `*`, which will allow\n   * all hosts — allowing the image to be read by DatoCMS\n   */\n  url: string;\n  /** Any additional headers to pass when making the request to the URL */\n  headers?: Record<string, string>;\n  /**\n   * Optional filename to be used to generate the final DatoCMS URL. If not\n   * passed, the URL will be used\n   */\n  filename?: string;\n};\n\nexport type NewUploadResourceAsBase64 = {\n  /**\n   * Base64 encoded data URI for the resource.\n   *\n   * Format:\n   *\n   * `data:[<mime type>][;charset=<charset>];base64,<encoded data>`\n   */\n  base64: string;\n  /** Filename to be used to generate the final DatoCMS URL */\n  filename: string;\n};\n\nexport type NewUpload = {\n  /** The actual resource that will be uploaded */\n  resource: NewUploadResourceAsUrl | NewUploadResourceAsBase64;\n  /** Copyright to apply to the asset */\n  copyright?: string;\n  /** Author to apply to the asset */\n  author?: string;\n  /** Notes to apply to the asset */\n  notes?: string;\n  /** Tags to apply to the asset */\n  tags?: string[];\n  /**\n   * An hash containing, for each locale of the project, the default metadata to\n   * apply to the asset\n   */\n  default_field_metadata?: {\n    [k: string]: {\n      /** Alternate text for the asset */\n      alt: string | null;\n      /** Title for the asset */\n      title: string | null;\n      /** Object with arbitrary metadata */\n      custom_data: {\n        [k: string]: unknown;\n      };\n      /** Focal point (only for image assets) */\n      focal_point?: {\n        /** Horizontal position expressed as float between 0 and 1 */\n        x: number;\n        /** Vertical position expressed as float between 0 and 1 */\n        y: number;\n      } | null;\n    };\n  };\n};\n\n/** Use these methods to confirm */\nexport type RenderAssetSourceAdditionalMethods = {\n  getSettings: () => Promise<RenderAssetSourceProperties>;\n  /**\n   * Function to be called when the user selects the asset: it will trigger the\n   * creation of a new `Upload` that will be added in the Media Area.\n   *\n   * @example\n   *\n   * ```js\n   * await ctx.select({\n   *   resource: {\n   *     url: 'https://images.unsplash.com/photo-1416339306562-f3d12fefd36f',\n   *     filename: 'man-drinking-coffee.jpg',\n   *   },\n   *   copyright: 'Royalty free (Unsplash)',\n   *   author: 'Jeff Sheldon',\n   *   notes: 'A man drinking a coffee',\n   *   tags: ['man', 'coffee'],\n   * });\n   * ```\n   */\n  select: (newUpload: NewUpload) => void;\n};\n\nexport type RenderAssetSourceMethods = RenderMethods &\n  IframeMethods &\n  RenderAssetSourceAdditionalMethods;\n\nexport type RenderAssetSourcePropertiesAndMethods = RenderAssetSourceMethods &\n  RenderAssetSourceProperties;\n\n/** Information regarding the specific page that you need to render */\nexport type RenderPageAdditionalProperties = {\n  mode: 'renderPage';\n  /** The ID of the page that needs to be rendered */\n  pageId: string;\n};\n\nexport type RenderPageProperties = RenderProperties &\n  RenderPageAdditionalProperties;\n\nexport type RenderPageAdditionalMethods = {\n  getSettings: () => Promise<RenderPageProperties>;\n};\n\nexport type RenderPageMethods = RenderMethods & RenderPageAdditionalMethods;\n\nexport type RenderPagePropertiesAndMethods = RenderPageMethods &\n  RenderPageProperties;\n\nexport type PendingField = {\n  id?: string;\n  type: 'field';\n  attributes: {\n    api_key: Field['attributes']['api_key'];\n    appearance: Field['attributes']['appearance'];\n    default_value: Field['attributes']['default_value'];\n    field_type: Field['attributes']['field_type'];\n    hint: Field['attributes']['hint'];\n    label: Field['attributes']['label'];\n    localized: Field['attributes']['localized'];\n    validators: Field['attributes']['validators'];\n  };\n};\n\n/**\n * Information regarding the specific form that you need to render to let the\n * end-user edit the configuration object of a field extension\n */\nexport type RenderManualFieldExtensionConfigScreenAdditionalProperties = {\n  mode: 'renderManualFieldExtensionConfigScreen';\n  /**\n   * The ID of the field extension for which we need to render the parameters\n   * form\n   */\n  fieldExtensionId: string;\n  /**\n   * The current value of the parameters (you can change the value with the\n   * `setParameters` function)\n   */\n  parameters: Record<string, unknown>;\n  /**\n   * The current validation errors for the parameters (you can set them\n   * implementing the `validateManualFieldExtensionParameters` function)\n   */\n  errors: Record<string, unknown>;\n\n  /** The field entity that is being edited in the form */\n  pendingField: PendingField;\n\n  /** The model for the field being edited */\n  itemType: ItemType;\n};\n\nexport type RenderManualFieldExtensionConfigScreenProperties =\n  RenderProperties & RenderManualFieldExtensionConfigScreenAdditionalProperties;\n\n/**\n * These methods can be used to update the configuration object of a specific\n * field extension\n */\nexport type RenderManualFieldExtensionConfigScreenAdditionalMethods = {\n  getSettings: () => Promise<RenderManualFieldExtensionConfigScreenProperties>;\n  /**\n   * Sets a new value for the parameters\n   *\n   * @example\n   *\n   * ```js\n   * await ctx.setParameters({ color: '#ff0000' });\n   * ```\n   */\n  setParameters: (params: Record<string, unknown>) => Promise<void>;\n};\n\nexport type RenderManualFieldExtensionConfigScreenMethods = RenderMethods &\n  IframeMethods &\n  RenderManualFieldExtensionConfigScreenAdditionalMethods;\n\nexport type RenderManualFieldExtensionConfigScreenPropertiesAndMethods =\n  RenderManualFieldExtensionConfigScreenMethods &\n    RenderManualFieldExtensionConfigScreenProperties;\n\nexport type RenderConfigScreenAdditionalProperties = {\n  mode: 'renderConfigScreen';\n};\n\nexport type RenderConfigScreenProperties = RenderProperties &\n  RenderConfigScreenAdditionalProperties;\n\n/** These methods can be used to update the configuration object of your plugin */\nexport type RenderConfigScreenAdditionalMethods = {\n  getSettings: () => Promise<RenderConfigScreenProperties>;\n};\n\nexport type RenderConfigScreenMethods = RenderMethods &\n  IframeMethods &\n  RenderConfigScreenAdditionalMethods;\n\nexport type RenderConfigScreenPropertiesAndMethods = RenderConfigScreenMethods &\n  RenderConfigScreenProperties;\n\nexport type OnBootAdditionalProperties = {\n  mode: 'onBoot';\n};\n\nexport type OnBootProperties = RenderProperties & OnBootAdditionalProperties;\n\nexport type OnBootAdditionalMethods = {\n  getSettings: () => Promise<OnBootProperties>;\n};\n\nexport type OnBootMethods = RenderMethods & OnBootAdditionalMethods;\n\nexport type OnBootPropertiesAndMethods = OnBootMethods & OnBootProperties;\n\nexport type AwesomeFontIconIdentifier =\n  | '0'\n  | '00'\n  | '1'\n  | '100'\n  | '2'\n  | '3'\n  | '360-degrees'\n  | '4'\n  | '5'\n  | '6'\n  | '7'\n  | '8'\n  | '9'\n  | 'a'\n  | 'abacus'\n  | 'accent-grave'\n  | 'acorn'\n  | 'ad'\n  | 'add'\n  | 'address-book'\n  | 'address-card'\n  | 'adjust'\n  | 'air-conditioner'\n  | 'air-freshener'\n  | 'airplay'\n  | 'alarm-clock'\n  | 'alarm-exclamation'\n  | 'alarm-plus'\n  | 'alarm-snooze'\n  | 'album-circle-plus'\n  | 'album-circle-user'\n  | 'album-collection-circle-plus'\n  | 'album-collection-circle-user'\n  | 'album-collection'\n  | 'album'\n  | 'alicorn'\n  | 'alien-8bit'\n  | 'alien-monster'\n  | 'alien'\n  | 'align-center'\n  | 'align-justify'\n  | 'align-left'\n  | 'align-right'\n  | 'align-slash'\n  | 'allergies'\n  | 'alt'\n  | 'ambulance'\n  | 'american-sign-language-interpreting'\n  | 'amp-guitar'\n  | 'ampersand'\n  | 'analytics'\n  | 'anchor-circle-check'\n  | 'anchor-circle-exclamation'\n  | 'anchor-circle-xmark'\n  | 'anchor-lock'\n  | 'anchor'\n  | 'angel'\n  | 'angle-90'\n  | 'angle-double-down'\n  | 'angle-double-left'\n  | 'angle-double-right'\n  | 'angle-double-up'\n  | 'angle-down'\n  | 'angle-left'\n  | 'angle-right'\n  | 'angle-up'\n  | 'angle'\n  | 'angles-down'\n  | 'angles-left'\n  | 'angles-right'\n  | 'angles-up'\n  | 'angry'\n  | 'ankh'\n  | 'apartment'\n  | 'aperture'\n  | 'apostrophe'\n  | 'apple-alt'\n  | 'apple-core'\n  | 'apple-crate'\n  | 'apple-whole'\n  | 'archive'\n  | 'archway'\n  | 'area-chart'\n  | 'arrow-alt-circle-down'\n  | 'arrow-alt-circle-left'\n  | 'arrow-alt-circle-right'\n  | 'arrow-alt-circle-up'\n  | 'arrow-alt-down'\n  | 'arrow-alt-from-bottom'\n  | 'arrow-alt-from-left'\n  | 'arrow-alt-from-right'\n  | 'arrow-alt-from-top'\n  | 'arrow-alt-left'\n  | 'arrow-alt-right'\n  | 'arrow-alt-square-down'\n  | 'arrow-alt-square-left'\n  | 'arrow-alt-square-right'\n  | 'arrow-alt-square-up'\n  | 'arrow-alt-to-bottom'\n  | 'arrow-alt-to-left'\n  | 'arrow-alt-to-right'\n  | 'arrow-alt-to-top'\n  | 'arrow-alt-up'\n  | 'arrow-circle-down'\n  | 'arrow-circle-left'\n  | 'arrow-circle-right'\n  | 'arrow-circle-up'\n  | 'arrow-down-1-9'\n  | 'arrow-down-9-1'\n  | 'arrow-down-a-z'\n  | 'arrow-down-arrow-up'\n  | 'arrow-down-big-small'\n  | 'arrow-down-from-dotted-line'\n  | 'arrow-down-from-line'\n  | 'arrow-down-left-and-arrow-up-right-to-center'\n  | 'arrow-down-left'\n  | 'arrow-down-long'\n  | 'arrow-down-right'\n  | 'arrow-down-short-wide'\n  | 'arrow-down-small-big'\n  | 'arrow-down-square-triangle'\n  | 'arrow-down-to-arc'\n  | 'arrow-down-to-bracket'\n  | 'arrow-down-to-dotted-line'\n  | 'arrow-down-to-line'\n  | 'arrow-down-to-square'\n  | 'arrow-down-triangle-square'\n  | 'arrow-down-up-across-line'\n  | 'arrow-down-up-lock'\n  | 'arrow-down-wide-short'\n  | 'arrow-down-z-a'\n  | 'arrow-down'\n  | 'arrow-from-bottom'\n  | 'arrow-from-left'\n  | 'arrow-from-right'\n  | 'arrow-from-top'\n  | 'arrow-left-from-line'\n  | 'arrow-left-long-to-line'\n  | 'arrow-left-long'\n  | 'arrow-left-rotate'\n  | 'arrow-left-to-line'\n  | 'arrow-left'\n  | 'arrow-pointer'\n  | 'arrow-progress'\n  | 'arrow-right-arrow-left'\n  | 'arrow-right-from-arc'\n  | 'arrow-right-from-bracket'\n  | 'arrow-right-from-file'\n  | 'arrow-right-from-line'\n  | 'arrow-right-long-to-line'\n  | 'arrow-right-long'\n  | 'arrow-right-rotate'\n  | 'arrow-right-to-arc'\n  | 'arrow-right-to-bracket'\n  | 'arrow-right-to-city'\n  | 'arrow-right-to-file'\n  | 'arrow-right-to-line'\n  | 'arrow-right'\n  | 'arrow-rotate-back'\n  | 'arrow-rotate-backward'\n  | 'arrow-rotate-forward'\n  | 'arrow-rotate-left'\n  | 'arrow-rotate-right'\n  | 'arrow-square-down'\n  | 'arrow-square-left'\n  | 'arrow-square-right'\n  | 'arrow-square-up'\n  | 'arrow-to-bottom'\n  | 'arrow-to-left'\n  | 'arrow-to-right'\n  | 'arrow-to-top'\n  | 'arrow-trend-down'\n  | 'arrow-trend-up'\n  | 'arrow-turn-down-left'\n  | 'arrow-turn-down-right'\n  | 'arrow-turn-down'\n  | 'arrow-turn-right'\n  | 'arrow-turn-up'\n  | 'arrow-up-1-9'\n  | 'arrow-up-9-1'\n  | 'arrow-up-a-z'\n  | 'arrow-up-arrow-down'\n  | 'arrow-up-big-small'\n  | 'arrow-up-from-arc'\n  | 'arrow-up-from-bracket'\n  | 'arrow-up-from-dotted-line'\n  | 'arrow-up-from-ground-water'\n  | 'arrow-up-from-line'\n  | 'arrow-up-from-square'\n  | 'arrow-up-from-water-pump'\n  | 'arrow-up-left-from-circle'\n  | 'arrow-up-left'\n  | 'arrow-up-long'\n  | 'arrow-up-right-and-arrow-down-left-from-center'\n  | 'arrow-up-right-dots'\n  | 'arrow-up-right-from-square'\n  | 'arrow-up-right'\n  | 'arrow-up-short-wide'\n  | 'arrow-up-small-big'\n  | 'arrow-up-square-triangle'\n  | 'arrow-up-to-dotted-line'\n  | 'arrow-up-to-line'\n  | 'arrow-up-triangle-square'\n  | 'arrow-up-wide-short'\n  | 'arrow-up-z-a'\n  | 'arrow-up'\n  | 'arrows-alt-h'\n  | 'arrows-alt-v'\n  | 'arrows-alt'\n  | 'arrows-cross'\n  | 'arrows-down-to-line'\n  | 'arrows-down-to-people'\n  | 'arrows-from-dotted-line'\n  | 'arrows-from-line'\n  | 'arrows-h'\n  | 'arrows-left-right-to-line'\n  | 'arrows-left-right'\n  | 'arrows-maximize'\n  | 'arrows-minimize'\n  | 'arrows-repeat-1'\n  | 'arrows-repeat'\n  | 'arrows-retweet'\n  | 'arrows-rotate'\n  | 'arrows-spin'\n  | 'arrows-split-up-and-left'\n  | 'arrows-to-circle'\n  | 'arrows-to-dot'\n  | 'arrows-to-dotted-line'\n  | 'arrows-to-eye'\n  | 'arrows-to-line'\n  | 'arrows-turn-right'\n  | 'arrows-turn-to-dots'\n  | 'arrows-up-down-left-right'\n  | 'arrows-up-down'\n  | 'arrows-up-to-line'\n  | 'arrows-v'\n  | 'arrows'\n  | 'asl-interpreting'\n  | 'assistive-listening-systems'\n  | 'asterisk'\n  | 'at'\n  | 'atlas'\n  | 'atom-alt'\n  | 'atom-simple'\n  | 'atom'\n  | 'audio-description-slash'\n  | 'audio-description'\n  | 'austral-sign'\n  | 'automobile'\n  | 'avocado'\n  | 'award-simple'\n  | 'award'\n  | 'axe-battle'\n  | 'axe'\n  | 'b'\n  | 'baby-carriage'\n  | 'baby'\n  | 'backpack'\n  | 'backspace'\n  | 'backward-fast'\n  | 'backward-step'\n  | 'backward'\n  | 'bacon'\n  | 'bacteria'\n  | 'bacterium'\n  | 'badge-check'\n  | 'badge-dollar'\n  | 'badge-percent'\n  | 'badge-sheriff'\n  | 'badge'\n  | 'badger-honey'\n  | 'badminton'\n  | 'bag-seedling'\n  | 'bag-shopping'\n  | 'bagel'\n  | 'bags-shopping'\n  | 'baguette'\n  | 'bahai'\n  | 'baht-sign'\n  | 'balance-scale-left'\n  | 'balance-scale-right'\n  | 'balance-scale'\n  | 'ball-pile'\n  | 'balloon'\n  | 'balloons'\n  | 'ballot-check'\n  | 'ballot'\n  | 'ban-bug'\n  | 'ban-parking'\n  | 'ban-smoking'\n  | 'ban'\n  | 'banana'\n  | 'band-aid'\n  | 'bandage'\n  | 'bangladeshi-taka-sign'\n  | 'banjo'\n  | 'bank'\n  | 'bar-chart'\n  | 'barcode-alt'\n  | 'barcode-read'\n  | 'barcode-scan'\n  | 'barcode'\n  | 'barn-silo'\n  | 'bars-filter'\n  | 'bars-progress'\n  | 'bars-sort'\n  | 'bars-staggered'\n  | 'bars'\n  | 'baseball-ball'\n  | 'baseball-bat-ball'\n  | 'baseball'\n  | 'basket-shopping-simple'\n  | 'basket-shopping'\n  | 'basketball-ball'\n  | 'basketball-hoop'\n  | 'basketball'\n  | 'bat'\n  | 'bath'\n  | 'bathtub'\n  | 'battery-0'\n  | 'battery-1'\n  | 'battery-2'\n  | 'battery-3'\n  | 'battery-4'\n  | 'battery-5'\n  | 'battery-bolt'\n  | 'battery-car'\n  | 'battery-empty'\n  | 'battery-exclamation'\n  | 'battery-full'\n  | 'battery-half'\n  | 'battery-low'\n  | 'battery-quarter'\n  | 'battery-slash'\n  | 'battery-three-quarters'\n  | 'battery'\n  | 'bed-alt'\n  | 'bed-bunk'\n  | 'bed-empty'\n  | 'bed-front'\n  | 'bed-pulse'\n  | 'bed'\n  | 'bee'\n  | 'beer-foam'\n  | 'beer-mug-empty'\n  | 'beer-mug'\n  | 'beer'\n  | 'bell-concierge'\n  | 'bell-exclamation'\n  | 'bell-on'\n  | 'bell-plus'\n  | 'bell-school-slash'\n  | 'bell-school'\n  | 'bell-slash'\n  | 'bell'\n  | 'bells'\n  | 'bench-tree'\n  | 'betamax'\n  | 'bezier-curve'\n  | 'bible'\n  | 'bicycle'\n  | 'biking-mountain'\n  | 'biking'\n  | 'billboard'\n  | 'bin-bottles-recycle'\n  | 'bin-bottles'\n  | 'bin-recycle'\n  | 'binary-circle-check'\n  | 'binary-lock'\n  | 'binary-slash'\n  | 'binary'\n  | 'binoculars'\n  | 'biohazard'\n  | 'bird'\n  | 'birthday-cake'\n  | 'bitcoin-sign'\n  | 'blackboard'\n  | 'blanket-fire'\n  | 'blanket'\n  | 'blender-phone'\n  | 'blender'\n  | 'blind'\n  | 'blinds-open'\n  | 'blinds-raised'\n  | 'blinds'\n  | 'block-brick-fire'\n  | 'block-brick'\n  | 'block-question'\n  | 'block-quote'\n  | 'block'\n  | 'blog'\n  | 'blueberries'\n  | 'bluetooth'\n  | 'bold'\n  | 'bolt-auto'\n  | 'bolt-lightning'\n  | 'bolt-slash'\n  | 'bolt'\n  | 'bomb'\n  | 'bone-break'\n  | 'bone'\n  | 'bong'\n  | 'book-alt'\n  | 'book-arrow-right'\n  | 'book-arrow-up'\n  | 'book-atlas'\n  | 'book-bible'\n  | 'book-blank'\n  | 'book-bookmark'\n  | 'book-circle-arrow-right'\n  | 'book-circle-arrow-up'\n  | 'book-circle'\n  | 'book-copy'\n  | 'book-dead'\n  | 'book-font'\n  | 'book-heart'\n  | 'book-journal-whills'\n  | 'book-law'\n  | 'book-medical'\n  | 'book-open-alt'\n  | 'book-open-cover'\n  | 'book-open-reader'\n  | 'book-open'\n  | 'book-quran'\n  | 'book-reader'\n  | 'book-section'\n  | 'book-skull'\n  | 'book-sparkles'\n  | 'book-spells'\n  | 'book-tanakh'\n  | 'book-user'\n  | 'book'\n  | 'bookmark-circle'\n  | 'bookmark-slash'\n  | 'bookmark'\n  | 'books-medical'\n  | 'books'\n  | 'boombox'\n  | 'boot-heeled'\n  | 'boot'\n  | 'booth-curtain'\n  | 'border-all'\n  | 'border-bottom-right'\n  | 'border-bottom'\n  | 'border-center-h'\n  | 'border-center-v'\n  | 'border-inner'\n  | 'border-left'\n  | 'border-none'\n  | 'border-outer'\n  | 'border-right'\n  | 'border-style-alt'\n  | 'border-style'\n  | 'border-top-left'\n  | 'border-top'\n  | 'bore-hole'\n  | 'bottle-droplet'\n  | 'bottle-water'\n  | 'bow-arrow'\n  | 'bowl-chopsticks-noodles'\n  | 'bowl-chopsticks'\n  | 'bowl-food'\n  | 'bowl-hot'\n  | 'bowl-rice'\n  | 'bowl-salad'\n  | 'bowl-scoop'\n  | 'bowl-scoops'\n  | 'bowl-shaved-ice'\n  | 'bowl-soft-serve'\n  | 'bowl-spoon'\n  | 'bowling-ball-pin'\n  | 'bowling-ball'\n  | 'bowling-pins'\n  | 'box-alt'\n  | 'box-archive'\n  | 'box-ballot'\n  | 'box-check'\n  | 'box-circle-check'\n  | 'box-dollar'\n  | 'box-fragile'\n  | 'box-full'\n  | 'box-heart'\n  | 'box-open-full'\n  | 'box-open'\n  | 'box-taped'\n  | 'box-tissue'\n  | 'box-up'\n  | 'box-usd'\n  | 'box'\n  | 'boxes-alt'\n  | 'boxes-packing'\n  | 'boxes-stacked'\n  | 'boxes'\n  | 'boxing-glove'\n  | 'bracket-curly-left'\n  | 'bracket-curly-right'\n  | 'bracket-curly'\n  | 'bracket-left'\n  | 'bracket-round-right'\n  | 'bracket-round'\n  | 'bracket-square-right'\n  | 'bracket-square'\n  | 'bracket'\n  | 'brackets-curly'\n  | 'brackets-round'\n  | 'brackets-square'\n  | 'brackets'\n  | 'braille'\n  | 'brain-arrow-curved-right'\n  | 'brain-circuit'\n  | 'brain'\n  | 'brake-warning'\n  | 'brazilian-real-sign'\n  | 'bread-loaf'\n  | 'bread-slice-butter'\n  | 'bread-slice'\n  | 'bridge-circle-check'\n  | 'bridge-circle-exclamation'\n  | 'bridge-circle-xmark'\n  | 'bridge-lock'\n  | 'bridge-suspension'\n  | 'bridge-water'\n  | 'bridge'\n  | 'briefcase-arrow-right'\n  | 'briefcase-blank'\n  | 'briefcase-clock'\n  | 'briefcase-medical'\n  | 'briefcase'\n  | 'brightness-low'\n  | 'brightness'\n  | 'bring-forward'\n  | 'bring-front'\n  | 'broadcast-tower'\n  | 'broccoli'\n  | 'broom-ball'\n  | 'broom-wide'\n  | 'broom'\n  | 'browser'\n  | 'browsers'\n  | 'brush'\n  | 'bucket'\n  | 'bug-slash'\n  | 'bug'\n  | 'bugs'\n  | 'building-circle-arrow-right'\n  | 'building-circle-check'\n  | 'building-circle-exclamation'\n  | 'building-circle-xmark'\n  | 'building-columns'\n  | 'building-flag'\n  | 'building-lock'\n  | 'building-ngo'\n  | 'building-shield'\n  | 'building-un'\n  | 'building-user'\n  | 'building-wheat'\n  | 'building'\n  | 'buildings'\n  | 'bullhorn'\n  | 'bullseye-arrow'\n  | 'bullseye-pointer'\n  | 'bullseye'\n  | 'buoy-mooring'\n  | 'buoy'\n  | 'burger-cheese'\n  | 'burger-fries'\n  | 'burger-glass'\n  | 'burger-lettuce'\n  | 'burger-soda'\n  | 'burger'\n  | 'burn'\n  | 'burrito'\n  | 'burst'\n  | 'bus-alt'\n  | 'bus-school'\n  | 'bus-simple'\n  | 'bus'\n  | 'business-front'\n  | 'business-time'\n  | 'butter'\n  | 'c'\n  | 'cab'\n  | 'cabin'\n  | 'cabinet-filing'\n  | 'cable-car'\n  | 'cactus'\n  | 'cake-candles'\n  | 'cake-slice'\n  | 'cake'\n  | 'calculator-alt'\n  | 'calculator-simple'\n  | 'calculator'\n  | 'calendar-alt'\n  | 'calendar-arrow-down'\n  | 'calendar-arrow-up'\n  | 'calendar-check'\n  | 'calendar-circle-exclamation'\n  | 'calendar-circle-minus'\n  | 'calendar-circle-plus'\n  | 'calendar-circle-user'\n  | 'calendar-circle'\n  | 'calendar-clock'\n  | 'calendar-day'\n  | 'calendar-days'\n  | 'calendar-download'\n  | 'calendar-edit'\n  | 'calendar-exclamation'\n  | 'calendar-heart'\n  | 'calendar-image'\n  | 'calendar-lines-pen'\n  | 'calendar-lines'\n  | 'calendar-minus'\n  | 'calendar-note'\n  | 'calendar-pen'\n  | 'calendar-plus'\n  | 'calendar-range'\n  | 'calendar-star'\n  | 'calendar-time'\n  | 'calendar-times'\n  | 'calendar-upload'\n  | 'calendar-users'\n  | 'calendar-week'\n  | 'calendar-xmark'\n  | 'calendar'\n  | 'calendars'\n  | 'camcorder'\n  | 'camera-alt'\n  | 'camera-cctv'\n  | 'camera-circle'\n  | 'camera-home'\n  | 'camera-movie'\n  | 'camera-polaroid'\n  | 'camera-retro'\n  | 'camera-rotate'\n  | 'camera-security'\n  | 'camera-slash'\n  | 'camera-viewfinder'\n  | 'camera-web-slash'\n  | 'camera-web'\n  | 'camera'\n  | 'campfire'\n  | 'campground'\n  | 'can-food'\n  | 'cancel'\n  | 'candle-holder'\n  | 'candy-bar'\n  | 'candy-cane'\n  | 'candy-corn'\n  | 'candy'\n  | 'cannabis'\n  | 'capsules'\n  | 'car-alt'\n  | 'car-battery'\n  | 'car-bolt'\n  | 'car-building'\n  | 'car-bump'\n  | 'car-burst'\n  | 'car-bus'\n  | 'car-circle-bolt'\n  | 'car-crash'\n  | 'car-garage'\n  | 'car-mechanic'\n  | 'car-mirrors'\n  | 'car-on'\n  | 'car-rear'\n  | 'car-side-bolt'\n  | 'car-side'\n  | 'car-tilt'\n  | 'car-tunnel'\n  | 'car-wash'\n  | 'car-wrench'\n  | 'car'\n  | 'caravan-alt'\n  | 'caravan-simple'\n  | 'caravan'\n  | 'card-club'\n  | 'card-diamond'\n  | 'card-heart'\n  | 'card-spade'\n  | 'cards-blank'\n  | 'cards'\n  | 'caret-circle-down'\n  | 'caret-circle-left'\n  | 'caret-circle-right'\n  | 'caret-circle-up'\n  | 'caret-down'\n  | 'caret-left'\n  | 'caret-right'\n  | 'caret-square-down'\n  | 'caret-square-left'\n  | 'caret-square-right'\n  | 'caret-square-up'\n  | 'caret-up'\n  | 'carriage-baby'\n  | 'carrot'\n  | 'cars'\n  | 'cart-arrow-down'\n  | 'cart-arrow-up'\n  | 'cart-circle-arrow-down'\n  | 'cart-circle-arrow-up'\n  | 'cart-circle-check'\n  | 'cart-circle-exclamation'\n  | 'cart-circle-plus'\n  | 'cart-circle-xmark'\n  | 'cart-flatbed-boxes'\n  | 'cart-flatbed-empty'\n  | 'cart-flatbed-suitcase'\n  | 'cart-flatbed'\n  | 'cart-minus'\n  | 'cart-plus'\n  | 'cart-shopping-fast'\n  | 'cart-shopping'\n  | 'cart-xmark'\n  | 'cash-register'\n  | 'cassette-betamax'\n  | 'cassette-tape'\n  | 'cassette-vhs'\n  | 'castle'\n  | 'cat-space'\n  | 'cat'\n  | 'cauldron'\n  | 'cctv'\n  | 'cedi-sign'\n  | 'cent-sign'\n  | 'certificate'\n  | 'chain-broken'\n  | 'chain-horizontal-slash'\n  | 'chain-horizontal'\n  | 'chain-slash'\n  | 'chain'\n  | 'chair-office'\n  | 'chair'\n  | 'chalkboard-teacher'\n  | 'chalkboard-user'\n  | 'chalkboard'\n  | 'champagne-glass'\n  | 'champagne-glasses'\n  | 'charging-station'\n  | 'chart-area'\n  | 'chart-bar'\n  | 'chart-bullet'\n  | 'chart-candlestick'\n  | 'chart-column'\n  | 'chart-gantt'\n  | 'chart-line-down'\n  | 'chart-line-up-down'\n  | 'chart-line-up'\n  | 'chart-line'\n  | 'chart-mixed-up-circle-currency'\n  | 'chart-mixed-up-circle-dollar'\n  | 'chart-mixed'\n  | 'chart-network'\n  | 'chart-pie-alt'\n  | 'chart-pie-simple-circle-currency'\n  | 'chart-pie-simple-circle-dollar'\n  | 'chart-pie-simple'\n  | 'chart-pie'\n  | 'chart-pyramid'\n  | 'chart-radar'\n  | 'chart-scatter-3d'\n  | 'chart-scatter-bubble'\n  | 'chart-scatter'\n  | 'chart-simple-horizontal'\n  | 'chart-simple'\n  | 'chart-tree-map'\n  | 'chart-user'\n  | 'chart-waterfall'\n  | 'check-circle'\n  | 'check-double'\n  | 'check-square'\n  | 'check-to-slot'\n  | 'check'\n  | 'cheese-swiss'\n  | 'cheese'\n  | 'cheeseburger'\n  | 'cherries'\n  | 'chess-bishop-alt'\n  | 'chess-bishop-piece'\n  | 'chess-bishop'\n  | 'chess-board'\n  | 'chess-clock-alt'\n  | 'chess-clock-flip'\n  | 'chess-clock'\n  | 'chess-king-alt'\n  | 'chess-king-piece'\n  | 'chess-king'\n  | 'chess-knight-alt'\n  | 'chess-knight-piece'\n  | 'chess-knight'\n  | 'chess-pawn-alt'\n  | 'chess-pawn-piece'\n  | 'chess-pawn'\n  | 'chess-queen-alt'\n  | 'chess-queen-piece'\n  | 'chess-queen'\n  | 'chess-rook-alt'\n  | 'chess-rook-piece'\n  | 'chess-rook'\n  | 'chess'\n  | 'chestnut'\n  | 'chevron-circle-down'\n  | 'chevron-circle-left'\n  | 'chevron-circle-right'\n  | 'chevron-circle-up'\n  | 'chevron-double-down'\n  | 'chevron-double-left'\n  | 'chevron-double-right'\n  | 'chevron-double-up'\n  | 'chevron-down'\n  | 'chevron-left'\n  | 'chevron-right'\n  | 'chevron-square-down'\n  | 'chevron-square-left'\n  | 'chevron-square-right'\n  | 'chevron-square-up'\n  | 'chevron-up'\n  | 'chevrons-down'\n  | 'chevrons-left'\n  | 'chevrons-right'\n  | 'chevrons-up'\n  | 'chf-sign'\n  | 'child-combatant'\n  | 'child-dress'\n  | 'child-reaching'\n  | 'child-rifle'\n  | 'child'\n  | 'children'\n  | 'chimney'\n  | 'chocolate-bar'\n  | 'chopsticks'\n  | 'church'\n  | 'circle-0'\n  | 'circle-1'\n  | 'circle-2'\n  | 'circle-3'\n  | 'circle-4'\n  | 'circle-5'\n  | 'circle-6'\n  | 'circle-7'\n  | 'circle-8'\n  | 'circle-9'\n  | 'circle-a'\n  | 'circle-ampersand'\n  | 'circle-arrow-down-left'\n  | 'circle-arrow-down-right'\n  | 'circle-arrow-down'\n  | 'circle-arrow-left'\n  | 'circle-arrow-right'\n  | 'circle-arrow-up-left'\n  | 'circle-arrow-up-right'\n  | 'circle-arrow-up'\n  | 'circle-b'\n  | 'circle-bolt'\n  | 'circle-book-open'\n  | 'circle-bookmark'\n  | 'circle-c'\n  | 'circle-calendar'\n  | 'circle-camera'\n  | 'circle-caret-down'\n  | 'circle-caret-left'\n  | 'circle-caret-right'\n  | 'circle-caret-up'\n  | 'circle-check'\n  | 'circle-chevron-down'\n  | 'circle-chevron-left'\n  | 'circle-chevron-right'\n  | 'circle-chevron-up'\n  | 'circle-d'\n  | 'circle-dashed'\n  | 'circle-divide'\n  | 'circle-dollar-to-slot'\n  | 'circle-dollar'\n  | 'circle-dot'\n  | 'circle-down-left'\n  | 'circle-down-right'\n  | 'circle-down'\n  | 'circle-e'\n  | 'circle-ellipsis-vertical'\n  | 'circle-ellipsis'\n  | 'circle-envelope'\n  | 'circle-euro'\n  | 'circle-exclamation-check'\n  | 'circle-exclamation'\n  | 'circle-f'\n  | 'circle-g'\n  | 'circle-h'\n  | 'circle-half-stroke'\n  | 'circle-half'\n  | 'circle-heart'\n  | 'circle-i'\n  | 'circle-info'\n  | 'circle-j'\n  | 'circle-k'\n  | 'circle-l'\n  | 'circle-left'\n  | 'circle-location-arrow'\n  | 'circle-m'\n  | 'circle-microphone-lines'\n  | 'circle-microphone'\n  | 'circle-minus'\n  | 'circle-n'\n  | 'circle-nodes'\n  | 'circle-notch'\n  | 'circle-o'\n  | 'circle-p'\n  | 'circle-parking'\n  | 'circle-pause'\n  | 'circle-phone-flip'\n  | 'circle-phone-hangup'\n  | 'circle-phone'\n  | 'circle-play'\n  | 'circle-plus'\n  | 'circle-q'\n  | 'circle-quarter-stroke'\n  | 'circle-quarter'\n  | 'circle-quarters'\n  | 'circle-question'\n  | 'circle-r'\n  | 'circle-radiation'\n  | 'circle-right'\n  | 'circle-s'\n  | 'circle-small'\n  | 'circle-sort-down'\n  | 'circle-sort-up'\n  | 'circle-sort'\n  | 'circle-star'\n  | 'circle-sterling'\n  | 'circle-stop'\n  | 'circle-t'\n  | 'circle-three-quarters-stroke'\n  | 'circle-three-quarters'\n  | 'circle-trash'\n  | 'circle-u'\n  | 'circle-up-left'\n  | 'circle-up-right'\n  | 'circle-up'\n  | 'circle-user'\n  | 'circle-v'\n  | 'circle-video'\n  | 'circle-w'\n  | 'circle-waveform-lines'\n  | 'circle-x'\n  | 'circle-xmark'\n  | 'circle-y'\n  | 'circle-yen'\n  | 'circle-z'\n  | 'circle'\n  | 'circles-overlap'\n  | 'citrus-slice'\n  | 'citrus'\n  | 'city'\n  | 'clapperboard-play'\n  | 'clapperboard'\n  | 'clarinet'\n  | 'claw-marks'\n  | 'clinic-medical'\n  | 'clipboard-check'\n  | 'clipboard-list-check'\n  | 'clipboard-list'\n  | 'clipboard-medical'\n  | 'clipboard-prescription'\n  | 'clipboard-question'\n  | 'clipboard-user'\n  | 'clipboard'\n  | 'clock-desk'\n  | 'clock-eight-thirty'\n  | 'clock-eight'\n  | 'clock-eleven-thirty'\n  | 'clock-eleven'\n  | 'clock-five-thirty'\n  | 'clock-five'\n  | 'clock-four-thirty'\n  | 'clock-four'\n  | 'clock-nine-thirty'\n  | 'clock-nine'\n  | 'clock-one-thirty'\n  | 'clock-one'\n  | 'clock-rotate-left'\n  | 'clock-seven-thirty'\n  | 'clock-seven'\n  | 'clock-six-thirty'\n  | 'clock-six'\n  | 'clock-ten-thirty'\n  | 'clock-ten'\n  | 'clock-three-thirty'\n  | 'clock-three'\n  | 'clock-twelve-thirty'\n  | 'clock-twelve'\n  | 'clock-two-thirty'\n  | 'clock-two'\n  | 'clock'\n  | 'clone'\n  | 'close'\n  | 'closed-captioning-slash'\n  | 'closed-captioning'\n  | 'clothes-hanger'\n  | 'cloud-arrow-down'\n  | 'cloud-arrow-up'\n  | 'cloud-binary'\n  | 'cloud-bolt-moon'\n  | 'cloud-bolt-sun'\n  | 'cloud-bolt'\n  | 'cloud-check'\n  | 'cloud-download-alt'\n  | 'cloud-download'\n  | 'cloud-drizzle'\n  | 'cloud-exclamation'\n  | 'cloud-fog'\n  | 'cloud-hail-mixed'\n  | 'cloud-hail'\n  | 'cloud-meatball'\n  | 'cloud-minus'\n  | 'cloud-moon-rain'\n  | 'cloud-moon'\n  | 'cloud-music'\n  | 'cloud-plus'\n  | 'cloud-question'\n  | 'cloud-rain'\n  | 'cloud-rainbow'\n  | 'cloud-showers-heavy'\n  | 'cloud-showers-water'\n  | 'cloud-showers'\n  | 'cloud-slash'\n  | 'cloud-sleet'\n  | 'cloud-snow'\n  | 'cloud-sun-rain'\n  | 'cloud-sun'\n  | 'cloud-upload-alt'\n  | 'cloud-upload'\n  | 'cloud-word'\n  | 'cloud-xmark'\n  | 'cloud'\n  | 'clouds-moon'\n  | 'clouds-sun'\n  | 'clouds'\n  | 'clover'\n  | 'club'\n  | 'cny'\n  | 'cocktail'\n  | 'coconut'\n  | 'code-branch'\n  | 'code-commit'\n  | 'code-compare'\n  | 'code-fork'\n  | 'code-merge'\n  | 'code-pull-request-closed'\n  | 'code-pull-request-draft'\n  | 'code-pull-request'\n  | 'code-simple'\n  | 'code'\n  | 'coffee-bean'\n  | 'coffee-beans'\n  | 'coffee-pot'\n  | 'coffee-togo'\n  | 'coffee'\n  | 'coffin-cross'\n  | 'coffin'\n  | 'cog'\n  | 'cogs'\n  | 'coin-blank'\n  | 'coin-front'\n  | 'coin-vertical'\n  | 'coin'\n  | 'coins'\n  | 'colon-sign'\n  | 'colon'\n  | 'columns-3'\n  | 'columns'\n  | 'comet'\n  | 'comma'\n  | 'command'\n  | 'comment-alt-arrow-down'\n  | 'comment-alt-arrow-up'\n  | 'comment-alt-captions'\n  | 'comment-alt-check'\n  | 'comment-alt-dollar'\n  | 'comment-alt-dots'\n  | 'comment-alt-edit'\n  | 'comment-alt-exclamation'\n  | 'comment-alt-image'\n  | 'comment-alt-lines'\n  | 'comment-alt-medical'\n  | 'comment-alt-minus'\n  | 'comment-alt-music'\n  | 'comment-alt-plus'\n  | 'comment-alt-quote'\n  | 'comment-alt-slash'\n  | 'comment-alt-smile'\n  | 'comment-alt-text'\n  | 'comment-alt-times'\n  | 'comment-alt'\n  | 'comment-arrow-down'\n  | 'comment-arrow-up-right'\n  | 'comment-arrow-up'\n  | 'comment-captions'\n  | 'comment-check'\n  | 'comment-code'\n  | 'comment-dollar'\n  | 'comment-dots'\n  | 'comment-edit'\n  | 'comment-exclamation'\n  | 'comment-heart'\n  | 'comment-image'\n  | 'comment-lines'\n  | 'comment-medical'\n  | 'comment-middle-alt'\n  | 'comment-middle-top-alt'\n  | 'comment-middle-top'\n  | 'comment-middle'\n  | 'comment-minus'\n  | 'comment-music'\n  | 'comment-pen'\n  | 'comment-plus'\n  | 'comment-question'\n  | 'comment-quote'\n  | 'comment-slash'\n  | 'comment-smile'\n  | 'comment-sms'\n  | 'comment-text'\n  | 'comment-times'\n  | 'comment-xmark'\n  | 'comment'\n  | 'commenting'\n  | 'comments-alt-dollar'\n  | 'comments-alt'\n  | 'comments-dollar'\n  | 'comments-question-check'\n  | 'comments-question'\n  | 'comments'\n  | 'compact-disc'\n  | 'compass-drafting'\n  | 'compass-slash'\n  | 'compass'\n  | 'compress-alt'\n  | 'compress-arrows-alt'\n  | 'compress-arrows'\n  | 'compress-wide'\n  | 'compress'\n  | 'computer-classic'\n  | 'computer-mouse-scrollwheel'\n  | 'computer-mouse'\n  | 'computer-speaker'\n  | 'computer'\n  | 'concierge-bell'\n  | 'construction'\n  | 'contact-book'\n  | 'contact-card'\n  | 'container-storage'\n  | 'conveyor-belt-alt'\n  | 'conveyor-belt-arm'\n  | 'conveyor-belt-boxes'\n  | 'conveyor-belt-empty'\n  | 'conveyor-belt'\n  | 'cookie-bite'\n  | 'cookie'\n  | 'copy'\n  | 'copyright'\n  | 'corn'\n  | 'corner'\n  | 'couch-small'\n  | 'couch'\n  | 'cow'\n  | 'cowbell-circle-plus'\n  | 'cowbell-more'\n  | 'cowbell'\n  | 'crab'\n  | 'crate-apple'\n  | 'crate-empty'\n  | 'credit-card-alt'\n  | 'credit-card-blank'\n  | 'credit-card-front'\n  | 'credit-card'\n  | 'creemee'\n  | 'cricket-bat-ball'\n  | 'cricket'\n  | 'croissant'\n  | 'crop-alt'\n  | 'crop-simple'\n  | 'crop'\n  | 'cross'\n  | 'crosshairs-simple'\n  | 'crosshairs'\n  | 'crow'\n  | 'crown'\n  | 'crutch'\n  | 'crutches'\n  | 'cruzeiro-sign'\n  | 'crystal-ball'\n  | 'cube'\n  | 'cubes-stacked'\n  | 'cubes'\n  | 'cucumber'\n  | 'cup-straw-swoosh'\n  | 'cup-straw'\n  | 'cup-togo'\n  | 'cupcake'\n  | 'curling-stone'\n  | 'curling'\n  | 'custard'\n  | 'cut'\n  | 'cutlery'\n  | 'd'\n  | 'dagger'\n  | 'dash'\n  | 'dashboard'\n  | 'database'\n  | 'deaf'\n  | 'deafness'\n  | 'debug'\n  | 'dedent'\n  | 'deer-rudolph'\n  | 'deer'\n  | 'delete-left'\n  | 'delete-right'\n  | 'democrat'\n  | 'desktop-alt'\n  | 'desktop-arrow-down'\n  | 'desktop-code'\n  | 'desktop-medical'\n  | 'desktop-slash'\n  | 'desktop'\n  | 'dewpoint'\n  | 'dharmachakra'\n  | 'diagnoses'\n  | 'diagram-cells'\n  | 'diagram-lean-canvas'\n  | 'diagram-nested'\n  | 'diagram-next'\n  | 'diagram-predecessor'\n  | 'diagram-previous'\n  | 'diagram-project'\n  | 'diagram-sankey'\n  | 'diagram-subtask'\n  | 'diagram-successor'\n  | 'diagram-venn'\n  | 'dial-high'\n  | 'dial-low'\n  | 'dial-max'\n  | 'dial-med-high'\n  | 'dial-med-low'\n  | 'dial-med'\n  | 'dial-min'\n  | 'dial-off'\n  | 'dial'\n  | 'diamond-exclamation'\n  | 'diamond-half-stroke'\n  | 'diamond-half'\n  | 'diamond-turn-right'\n  | 'diamond'\n  | 'dice-d10'\n  | 'dice-d12'\n  | 'dice-d20'\n  | 'dice-d4'\n  | 'dice-d6'\n  | 'dice-d8'\n  | 'dice-five'\n  | 'dice-four'\n  | 'dice-one'\n  | 'dice-six'\n  | 'dice-three'\n  | 'dice-two'\n  | 'dice'\n  | 'digging'\n  | 'digital-tachograph'\n  | 'dinosaur'\n  | 'diploma'\n  | 'directions'\n  | 'disc-drive'\n  | 'disease'\n  | 'display-arrow-down'\n  | 'display-chart-up-circle-currency'\n  | 'display-chart-up-circle-dollar'\n  | 'display-chart-up'\n  | 'display-code'\n  | 'display-medical'\n  | 'display-slash'\n  | 'display'\n  | 'distribute-spacing-horizontal'\n  | 'distribute-spacing-vertical'\n  | 'ditto'\n  | 'divide'\n  | 'dizzy'\n  | 'dna'\n  | 'do-not-enter'\n  | 'dog-leashed'\n  | 'dog'\n  | 'dollar-circle'\n  | 'dollar-sign'\n  | 'dollar-square'\n  | 'dollar'\n  | 'dolly-box'\n  | 'dolly-empty'\n  | 'dolly-flatbed-alt'\n  | 'dolly-flatbed-empty'\n  | 'dolly-flatbed'\n  | 'dolly'\n  | 'dolphin'\n  | 'donate'\n  | 'dong-sign'\n  | 'donut'\n  | 'door-closed'\n  | 'door-open'\n  | 'dot-circle'\n  | 'doughnut'\n  | 'dove'\n  | 'down-from-dotted-line'\n  | 'down-from-line'\n  | 'down-left-and-up-right-to-center'\n  | 'down-left'\n  | 'down-long'\n  | 'down-right'\n  | 'down-to-bracket'\n  | 'down-to-dotted-line'\n  | 'down-to-line'\n  | 'down'\n  | 'download'\n  | 'drafting-compass'\n  | 'dragon'\n  | 'draw-circle'\n  | 'draw-polygon'\n  | 'draw-square'\n  | 'dreidel'\n  | 'drivers-license'\n  | 'drone-alt'\n  | 'drone-front'\n  | 'drone'\n  | 'droplet-degree'\n  | 'droplet-percent'\n  | 'droplet-slash'\n  | 'droplet'\n  | 'drum-steelpan'\n  | 'drum'\n  | 'drumstick-bite'\n  | 'drumstick'\n  | 'dryer-alt'\n  | 'dryer-heat'\n  | 'dryer'\n  | 'duck'\n  | 'dumbbell'\n  | 'dumpster-fire'\n  | 'dumpster'\n  | 'dungeon'\n  | 'e'\n  | 'ear-deaf'\n  | 'ear-listen'\n  | 'ear-muffs'\n  | 'ear'\n  | 'earth-africa'\n  | 'earth-america'\n  | 'earth-americas'\n  | 'earth-asia'\n  | 'earth-europe'\n  | 'earth-oceania'\n  | 'earth'\n  | 'eclipse-alt'\n  | 'eclipse'\n  | 'edit'\n  | 'egg-fried'\n  | 'egg'\n  | 'eggplant'\n  | 'eject'\n  | 'elephant'\n  | 'elevator'\n  | 'ellipsis-h-alt'\n  | 'ellipsis-h'\n  | 'ellipsis-stroke-vertical'\n  | 'ellipsis-stroke'\n  | 'ellipsis-v-alt'\n  | 'ellipsis-v'\n  | 'ellipsis-vertical'\n  | 'ellipsis'\n  | 'empty-set'\n  | 'engine-exclamation'\n  | 'engine-warning'\n  | 'engine'\n  | 'envelope-badge'\n  | 'envelope-circle-check'\n  | 'envelope-circle'\n  | 'envelope-dot'\n  | 'envelope-open-dollar'\n  | 'envelope-open-text'\n  | 'envelope-open'\n  | 'envelope-square'\n  | 'envelope'\n  | 'envelopes-bulk'\n  | 'envelopes'\n  | 'equals'\n  | 'eraser'\n  | 'escalator'\n  | 'ethernet'\n  | 'eur'\n  | 'euro-sign'\n  | 'euro'\n  | 'exchange-alt'\n  | 'exchange'\n  | 'exclamation-circle'\n  | 'exclamation-square'\n  | 'exclamation-triangle'\n  | 'exclamation'\n  | 'expand-alt'\n  | 'expand-arrows-alt'\n  | 'expand-arrows'\n  | 'expand-wide'\n  | 'expand'\n  | 'exploding-head'\n  | 'explosion'\n  | 'external-link-alt'\n  | 'external-link-square-alt'\n  | 'external-link-square'\n  | 'external-link'\n  | 'eye-dropper-empty'\n  | 'eye-dropper-full'\n  | 'eye-dropper-half'\n  | 'eye-dropper'\n  | 'eye-evil'\n  | 'eye-low-vision'\n  | 'eye-slash'\n  | 'eye'\n  | 'eyedropper'\n  | 'eyes'\n  | 'f'\n  | 'face-angry-horns'\n  | 'face-angry'\n  | 'face-anguished'\n  | 'face-anxious-sweat'\n  | 'face-astonished'\n  | 'face-awesome'\n  | 'face-beam-hand-over-mouth'\n  | 'face-clouds'\n  | 'face-confounded'\n  | 'face-confused'\n  | 'face-cowboy-hat'\n  | 'face-diagonal-mouth'\n  | 'face-disappointed'\n  | 'face-disguise'\n  | 'face-dizzy'\n  | 'face-dotted'\n  | 'face-downcast-sweat'\n  | 'face-drooling'\n  | 'face-exhaling'\n  | 'face-explode'\n  | 'face-expressionless'\n  | 'face-eyes-xmarks'\n  | 'face-fearful'\n  | 'face-flushed'\n  | 'face-frown-open'\n  | 'face-frown-slight'\n  | 'face-frown'\n  | 'face-glasses'\n  | 'face-grimace'\n  | 'face-grin-beam-sweat'\n  | 'face-grin-beam'\n  | 'face-grin-hearts'\n  | 'face-grin-squint-tears'\n  | 'face-grin-squint'\n  | 'face-grin-stars'\n  | 'face-grin-tears'\n  | 'face-grin-tongue-squint'\n  | 'face-grin-tongue-wink'\n  | 'face-grin-tongue'\n  | 'face-grin-wide'\n  | 'face-grin-wink'\n  | 'face-grin'\n  | 'face-hand-over-mouth'\n  | 'face-hand-peeking'\n  | 'face-hand-yawn'\n  | 'face-head-bandage'\n  | 'face-holding-back-tears'\n  | 'face-hushed'\n  | 'face-icicles'\n  | 'face-kiss-beam'\n  | 'face-kiss-closed-eyes'\n  | 'face-kiss-wink-heart'\n  | 'face-kiss'\n  | 'face-laugh-beam'\n  | 'face-laugh-squint'\n  | 'face-laugh-wink'\n  | 'face-laugh'\n  | 'face-lying'\n  | 'face-mask'\n  | 'face-meh-blank'\n  | 'face-meh'\n  | 'face-melting'\n  | 'face-monocle'\n  | 'face-nauseated'\n  | 'face-nose-steam'\n  | 'face-party'\n  | 'face-pensive'\n  | 'face-persevering'\n  | 'face-pleading'\n  | 'face-pouting'\n  | 'face-raised-eyebrow'\n  | 'face-relieved'\n  | 'face-rolling-eyes'\n  | 'face-sad-cry'\n  | 'face-sad-sweat'\n  | 'face-sad-tear'\n  | 'face-saluting'\n  | 'face-scream'\n  | 'face-shush'\n  | 'face-sleeping'\n  | 'face-sleepy'\n  | 'face-smile-beam'\n  | 'face-smile-halo'\n  | 'face-smile-hearts'\n  | 'face-smile-horns'\n  | 'face-smile-plus'\n  | 'face-smile-relaxed'\n  | 'face-smile-tear'\n  | 'face-smile-tongue'\n  | 'face-smile-upside-down'\n  | 'face-smile-wink'\n  | 'face-smile'\n  | 'face-smiling-hands'\n  | 'face-smirking'\n  | 'face-spiral-eyes'\n  | 'face-sunglasses'\n  | 'face-surprise'\n  | 'face-swear'\n  | 'face-thermometer'\n  | 'face-thinking'\n  | 'face-tired'\n  | 'face-tissue'\n  | 'face-tongue-money'\n  | 'face-tongue-sweat'\n  | 'face-unamused'\n  | 'face-viewfinder'\n  | 'face-vomit'\n  | 'face-weary'\n  | 'face-woozy'\n  | 'face-worried'\n  | 'face-zany'\n  | 'face-zipper'\n  | 'falafel'\n  | 'family-dress'\n  | 'family-pants'\n  | 'family'\n  | 'fan-table'\n  | 'fan'\n  | 'farm'\n  | 'fast-backward'\n  | 'fast-forward'\n  | 'faucet-drip'\n  | 'faucet'\n  | 'fax'\n  | 'feather-alt'\n  | 'feather-pointed'\n  | 'feather'\n  | 'feed'\n  | 'female'\n  | 'fence'\n  | 'ferris-wheel'\n  | 'ferry'\n  | 'field-hockey-stick-ball'\n  | 'field-hockey'\n  | 'fighter-jet'\n  | 'file-alt'\n  | 'file-archive'\n  | 'file-arrow-down'\n  | 'file-arrow-up'\n  | 'file-audio'\n  | 'file-award'\n  | 'file-binary'\n  | 'file-caret-down'\n  | 'file-caret-up'\n  | 'file-certificate'\n  | 'file-chart-column'\n  | 'file-chart-line'\n  | 'file-chart-pie'\n  | 'file-check'\n  | 'file-circle-check'\n  | 'file-circle-exclamation'\n  | 'file-circle-info'\n  | 'file-circle-minus'\n  | 'file-circle-plus'\n  | 'file-circle-question'\n  | 'file-circle-xmark'\n  | 'file-clipboard'\n  | 'file-code'\n  | 'file-contract'\n  | 'file-csv'\n  | 'file-dashed-line'\n  | 'file-doc'\n  | 'file-download'\n  | 'file-edit'\n  | 'file-excel'\n  | 'file-exclamation'\n  | 'file-export'\n  | 'file-heart'\n  | 'file-image'\n  | 'file-import'\n  | 'file-invoice-dollar'\n  | 'file-invoice'\n  | 'file-lines'\n  | 'file-lock'\n  | 'file-magnifying-glass'\n  | 'file-medical-alt'\n  | 'file-medical'\n  | 'file-minus'\n  | 'file-music'\n  | 'file-pdf'\n  | 'file-pen'\n  | 'file-plus-minus'\n  | 'file-plus'\n  | 'file-powerpoint'\n  | 'file-prescription'\n  | 'file-search'\n  | 'file-shield'\n  | 'file-signature'\n  | 'file-slash'\n  | 'file-spreadsheet'\n  | 'file-text'\n  | 'file-times'\n  | 'file-upload'\n  | 'file-user'\n  | 'file-video'\n  | 'file-waveform'\n  | 'file-word'\n  | 'file-xmark'\n  | 'file-zip'\n  | 'file-zipper'\n  | 'file'\n  | 'files-medical'\n  | 'files'\n  | 'fill-drip'\n  | 'fill'\n  | 'film-alt'\n  | 'film-canister'\n  | 'film-cannister'\n  | 'film-simple'\n  | 'film-slash'\n  | 'film'\n  | 'films'\n  | 'filter-circle-dollar'\n  | 'filter-circle-xmark'\n  | 'filter-list'\n  | 'filter-slash'\n  | 'filter'\n  | 'filters'\n  | 'fingerprint'\n  | 'fire-alt'\n  | 'fire-burner'\n  | 'fire-extinguisher'\n  | 'fire-flame-curved'\n  | 'fire-flame-simple'\n  | 'fire-flame'\n  | 'fire-hydrant'\n  | 'fire-smoke'\n  | 'fire'\n  | 'fireplace'\n  | 'firewall'\n  | 'first-aid'\n  | 'fish-bones'\n  | 'fish-cooked'\n  | 'fish-fins'\n  | 'fish'\n  | 'fishing-rod'\n  | 'fist-raised'\n  | 'flag-alt'\n  | 'flag-checkered'\n  | 'flag-pennant'\n  | 'flag-swallowtail'\n  | 'flag-usa'\n  | 'flag'\n  | 'flame'\n  | 'flashlight'\n  | 'flask-gear'\n  | 'flask-poison'\n  | 'flask-potion'\n  | 'flask-round-poison'\n  | 'flask-round-potion'\n  | 'flask-vial'\n  | 'flask'\n  | 'flatbread-stuffed'\n  | 'flatbread'\n  | 'floppy-disk-circle-arrow-right'\n  | 'floppy-disk-circle-xmark'\n  | 'floppy-disk-pen'\n  | 'floppy-disk-times'\n  | 'floppy-disk'\n  | 'floppy-disks'\n  | 'florin-sign'\n  | 'flower-daffodil'\n  | 'flower-tulip'\n  | 'flower'\n  | 'flushed'\n  | 'flute'\n  | 'flux-capacitor'\n  | 'flying-disc'\n  | 'fog'\n  | 'folder-arrow-down'\n  | 'folder-arrow-up'\n  | 'folder-blank'\n  | 'folder-bookmark'\n  | 'folder-closed'\n  | 'folder-cog'\n  | 'folder-download'\n  | 'folder-gear'\n  | 'folder-grid'\n  | 'folder-heart'\n  | 'folder-image'\n  | 'folder-magnifying-glass'\n  | 'folder-medical'\n  | 'folder-minus'\n  | 'folder-music'\n  | 'folder-open'\n  | 'folder-plus'\n  | 'folder-search'\n  | 'folder-times'\n  | 'folder-tree'\n  | 'folder-upload'\n  | 'folder-user'\n  | 'folder-xmark'\n  | 'folder'\n  | 'folders'\n  | 'fondue-pot'\n  | 'font-awesome-flag'\n  | 'font-awesome-logo-full'\n  | 'font-awesome'\n  | 'font-case'\n  | 'font'\n  | 'football-ball'\n  | 'football-helmet'\n  | 'football'\n  | 'fork-knife'\n  | 'fork'\n  | 'forklift'\n  | 'fort'\n  | 'forward-fast'\n  | 'forward-step'\n  | 'forward'\n  | 'fragile'\n  | 'frame'\n  | 'franc-sign'\n  | 'french-fries'\n  | 'frog'\n  | 'frosty-head'\n  | 'frown-open'\n  | 'frown'\n  | 'function'\n  | 'funnel-dollar'\n  | 'futbol-ball'\n  | 'futbol'\n  | 'g'\n  | 'galaxy'\n  | 'gallery-thumbnails'\n  | 'game-board-alt'\n  | 'game-board-simple'\n  | 'game-board'\n  | 'game-console-handheld-crank'\n  | 'game-console-handheld'\n  | 'gamepad-alt'\n  | 'gamepad-modern'\n  | 'gamepad'\n  | 'garage-car'\n  | 'garage-open'\n  | 'garage'\n  | 'garlic'\n  | 'gas-pump-slash'\n  | 'gas-pump'\n  | 'gauge-circle-bolt'\n  | 'gauge-circle-minus'\n  | 'gauge-circle-plus'\n  | 'gauge-high'\n  | 'gauge-low'\n  | 'gauge-max'\n  | 'gauge-med'\n  | 'gauge-min'\n  | 'gauge-simple-high'\n  | 'gauge-simple-low'\n  | 'gauge-simple-max'\n  | 'gauge-simple-med'\n  | 'gauge-simple-min'\n  | 'gauge-simple'\n  | 'gauge'\n  | 'gave-dandy'\n  | 'gavel'\n  | 'gbp'\n  | 'gear-code'\n  | 'gear-complex-code'\n  | 'gear-complex'\n  | 'gear'\n  | 'gears'\n  | 'gem'\n  | 'genderless'\n  | 'ghost'\n  | 'gif'\n  | 'gift-card'\n  | 'gift'\n  | 'gifts'\n  | 'gingerbread-man'\n  | 'glass-champagne'\n  | 'glass-cheers'\n  | 'glass-citrus'\n  | 'glass-empty'\n  | 'glass-half-empty'\n  | 'glass-half-full'\n  | 'glass-half'\n  | 'glass-martini-alt'\n  | 'glass-martini'\n  | 'glass-water-droplet'\n  | 'glass-water'\n  | 'glass-whiskey-rocks'\n  | 'glass-whiskey'\n  | 'glass'\n  | 'glasses-alt'\n  | 'glasses-round'\n  | 'glasses'\n  | 'globe-africa'\n  | 'globe-americas'\n  | 'globe-asia'\n  | 'globe-europe'\n  | 'globe-oceania'\n  | 'globe-snow'\n  | 'globe-stand'\n  | 'globe'\n  | 'glove-boxing'\n  | 'goal-net'\n  | 'golf-ball-tee'\n  | 'golf-ball'\n  | 'golf-club'\n  | 'golf-flag-hole'\n  | 'gopuram'\n  | 'graduation-cap'\n  | 'gramophone'\n  | 'grapes'\n  | 'grate-droplet'\n  | 'grate'\n  | 'greater-than-equal'\n  | 'greater-than'\n  | 'grid-2-plus'\n  | 'grid-2'\n  | 'grid-3'\n  | 'grid-4'\n  | 'grid-5'\n  | 'grid-dividers'\n  | 'grid-horizontal'\n  | 'grid-round-2-plus'\n  | 'grid-round-2'\n  | 'grid-round-4'\n  | 'grid-round-5'\n  | 'grid-round'\n  | 'grid'\n  | 'grill-fire'\n  | 'grill-hot'\n  | 'grill'\n  | 'grimace'\n  | 'grin-alt'\n  | 'grin-beam-sweat'\n  | 'grin-beam'\n  | 'grin-hearts'\n  | 'grin-squint-tears'\n  | 'grin-squint'\n  | 'grin-stars'\n  | 'grin-tears'\n  | 'grin-tongue-squint'\n  | 'grin-tongue-wink'\n  | 'grin-tongue'\n  | 'grin-wink'\n  | 'grin'\n  | 'grip-dots-vertical'\n  | 'grip-dots'\n  | 'grip-horizontal'\n  | 'grip-lines-vertical'\n  | 'grip-lines'\n  | 'grip-vertical'\n  | 'grip'\n  | 'group-arrows-rotate'\n  | 'guarani-sign'\n  | 'guitar-electric'\n  | 'guitar'\n  | 'guitars'\n  | 'gun-slash'\n  | 'gun-squirt'\n  | 'gun'\n  | 'h-square'\n  | 'h'\n  | 'h1'\n  | 'h2'\n  | 'h3'\n  | 'h4'\n  | 'h5'\n  | 'h6'\n  | 'hamburger'\n  | 'hammer-crash'\n  | 'hammer-war'\n  | 'hammer'\n  | 'hamsa'\n  | 'hand-back-fist'\n  | 'hand-back-point-down'\n  | 'hand-back-point-left'\n  | 'hand-back-point-ribbon'\n  | 'hand-back-point-right'\n  | 'hand-back-point-up'\n  | 'hand-dots'\n  | 'hand-fingers-crossed'\n  | 'hand-fist'\n  | 'hand-heart'\n  | 'hand-holding-box'\n  | 'hand-holding-dollar'\n  | 'hand-holding-droplet'\n  | 'hand-holding-hand'\n  | 'hand-holding-heart'\n  | 'hand-holding-magic'\n  | 'hand-holding-medical'\n  | 'hand-holding-seedling'\n  | 'hand-holding-skull'\n  | 'hand-holding-usd'\n  | 'hand-holding-water'\n  | 'hand-holding'\n  | 'hand-horns'\n  | 'hand-lizard'\n  | 'hand-love'\n  | 'hand-middle-finger'\n  | 'hand-paper'\n  | 'hand-peace'\n  | 'hand-point-down'\n  | 'hand-point-left'\n  | 'hand-point-ribbon'\n  | 'hand-point-right'\n  | 'hand-point-up'\n  | 'hand-pointer'\n  | 'hand-receiving'\n  | 'hand-rock'\n  | 'hand-scissors'\n  | 'hand-sparkles'\n  | 'hand-spock'\n  | 'hand-wave'\n  | 'hand'\n  | 'handcuffs'\n  | 'hands-american-sign-language-interpreting'\n  | 'hands-asl-interpreting'\n  | 'hands-bound'\n  | 'hands-bubbles'\n  | 'hands-clapping'\n  | 'hands-heart'\n  | 'hands-helping'\n  | 'hands-holding-child'\n  | 'hands-holding-circle'\n  | 'hands-holding-diamond'\n  | 'hands-holding-dollar'\n  | 'hands-holding-heart'\n  | 'hands-holding'\n  | 'hands-praying'\n  | 'hands-usd'\n  | 'hands-wash'\n  | 'hands'\n  | 'handshake-alt-slash'\n  | 'handshake-alt'\n  | 'handshake-angle'\n  | 'handshake-simple-slash'\n  | 'handshake-simple'\n  | 'handshake-slash'\n  | 'handshake'\n  | 'hanukiah'\n  | 'hard-drive'\n  | 'hard-hat'\n  | 'hard-of-hearing'\n  | 'hashtag-lock'\n  | 'hashtag'\n  | 'hat-beach'\n  | 'hat-chef'\n  | 'hat-cowboy-side'\n  | 'hat-cowboy'\n  | 'hat-hard'\n  | 'hat-santa'\n  | 'hat-winter'\n  | 'hat-witch'\n  | 'hat-wizard'\n  | 'haykal'\n  | 'hdd'\n  | 'head-side-brain'\n  | 'head-side-cough-slash'\n  | 'head-side-cough'\n  | 'head-side-goggles'\n  | 'head-side-headphones'\n  | 'head-side-heart'\n  | 'head-side-mask'\n  | 'head-side-medical'\n  | 'head-side-virus'\n  | 'head-side'\n  | 'head-vr'\n  | 'header'\n  | 'heading'\n  | 'headphones-alt'\n  | 'headphones-simple'\n  | 'headphones'\n  | 'headset'\n  | 'heart-broken'\n  | 'heart-circle-bolt'\n  | 'heart-circle-check'\n  | 'heart-circle-exclamation'\n  | 'heart-circle-minus'\n  | 'heart-circle-plus'\n  | 'heart-circle-xmark'\n  | 'heart-circle'\n  | 'heart-crack'\n  | 'heart-half-alt'\n  | 'heart-half-stroke'\n  | 'heart-half'\n  | 'heart-music-camera-bolt'\n  | 'heart-pulse'\n  | 'heart-rate'\n  | 'heart-square'\n  | 'heart'\n  | 'heartbeat'\n  | 'heat'\n  | 'helicopter-symbol'\n  | 'helicopter'\n  | 'helmet-battle'\n  | 'helmet-safety'\n  | 'helmet-un'\n  | 'hexagon-check'\n  | 'hexagon-divide'\n  | 'hexagon-exclamation'\n  | 'hexagon-image'\n  | 'hexagon-minus'\n  | 'hexagon-plus'\n  | 'hexagon-vertical-nft-slanted'\n  | 'hexagon-vertical-nft'\n  | 'hexagon-xmark'\n  | 'hexagon'\n  | 'high-definition'\n  | 'highlighter-line'\n  | 'highlighter'\n  | 'hiking'\n  | 'hill-avalanche'\n  | 'hill-rockslide'\n  | 'hippo'\n  | 'history'\n  | 'hockey-mask'\n  | 'hockey-puck'\n  | 'hockey-stick-puck'\n  | 'hockey-sticks'\n  | 'holly-berry'\n  | 'home-alt'\n  | 'home-blank'\n  | 'home-heart'\n  | 'home-lg-alt'\n  | 'home-lg'\n  | 'home-user'\n  | 'home'\n  | 'honey-pot'\n  | 'hood-cloak'\n  | 'horizontal-rule'\n  | 'horse-head'\n  | 'horse-saddle'\n  | 'horse'\n  | 'hose-reel'\n  | 'hose'\n  | 'hospital-alt'\n  | 'hospital-symbol'\n  | 'hospital-user'\n  | 'hospital-wide'\n  | 'hospital'\n  | 'hospitals'\n  | 'hot-tub-person'\n  | 'hot-tub'\n  | 'hotdog'\n  | 'hotel'\n  | 'hourglass-1'\n  | 'hourglass-2'\n  | 'hourglass-3'\n  | 'hourglass-clock'\n  | 'hourglass-empty'\n  | 'hourglass-end'\n  | 'hourglass-half'\n  | 'hourglass-start'\n  | 'hourglass'\n  | 'house-blank'\n  | 'house-building'\n  | 'house-chimney-blank'\n  | 'house-chimney-crack'\n  | 'house-chimney-heart'\n  | 'house-chimney-medical'\n  | 'house-chimney-user'\n  | 'house-chimney-window'\n  | 'house-chimney'\n  | 'house-circle-check'\n  | 'house-circle-exclamation'\n  | 'house-circle-xmark'\n  | 'house-crack'\n  | 'house-damage'\n  | 'house-day'\n  | 'house-fire'\n  | 'house-flag'\n  | 'house-flood-water-circle-arrow-right'\n  | 'house-flood-water'\n  | 'house-flood'\n  | 'house-heart'\n  | 'house-laptop'\n  | 'house-leave'\n  | 'house-lock'\n  | 'house-medical-circle-check'\n  | 'house-medical-circle-exclamation'\n  | 'house-medical-circle-xmark'\n  | 'house-medical-flag'\n  | 'house-medical'\n  | 'house-night'\n  | 'house-person-arrive'\n  | 'house-person-depart'\n  | 'house-person-leave'\n  | 'house-person-return'\n  | 'house-return'\n  | 'house-signal'\n  | 'house-tree'\n  | 'house-tsunami'\n  | 'house-turret'\n  | 'house-user'\n  | 'house-water'\n  | 'house-window'\n  | 'house'\n  | 'hryvnia-sign'\n  | 'hryvnia'\n  | 'humidity'\n  | 'hundred-points'\n  | 'hurricane'\n  | 'hyphen'\n  | 'i-cursor'\n  | 'i'\n  | 'ice-cream'\n  | 'ice-skate'\n  | 'icicles'\n  | 'icons-alt'\n  | 'icons'\n  | 'id-badge'\n  | 'id-card-alt'\n  | 'id-card-clip'\n  | 'id-card'\n  | 'igloo'\n  | 'ils'\n  | 'image-landscape'\n  | 'image-polaroid-user'\n  | 'image-polaroid'\n  | 'image-portrait'\n  | 'image-slash'\n  | 'image-user'\n  | 'image'\n  | 'images-user'\n  | 'images'\n  | 'inbox-arrow-down'\n  | 'inbox-arrow-up'\n  | 'inbox-full'\n  | 'inbox-in'\n  | 'inbox-out'\n  | 'inbox'\n  | 'inboxes'\n  | 'indent'\n  | 'indian-rupee-sign'\n  | 'indian-rupee'\n  | 'industry-alt'\n  | 'industry-windows'\n  | 'industry'\n  | 'infinity'\n  | 'info-circle'\n  | 'info-square'\n  | 'info'\n  | 'inhaler'\n  | 'input-numeric'\n  | 'input-pipe'\n  | 'input-text'\n  | 'inr'\n  | 'institution'\n  | 'integral'\n  | 'interrobang'\n  | 'intersection'\n  | 'inventory'\n  | 'island-tree-palm'\n  | 'island-tropical'\n  | 'italic'\n  | 'j'\n  | 'jack-o-lantern'\n  | 'jar-wheat'\n  | 'jar'\n  | 'jedi'\n  | 'jet-fighter-up'\n  | 'jet-fighter'\n  | 'joint'\n  | 'journal-whills'\n  | 'joystick'\n  | 'jpy'\n  | 'jug-bottle'\n  | 'jug-detergent'\n  | 'jug'\n  | 'k'\n  | 'kaaba'\n  | 'kazoo'\n  | 'kerning'\n  | 'key-skeleton-left-right'\n  | 'key-skeleton'\n  | 'key'\n  | 'keyboard-brightness-low'\n  | 'keyboard-brightness'\n  | 'keyboard-down'\n  | 'keyboard-left'\n  | 'keyboard'\n  | 'keynote'\n  | 'khanda'\n  | 'kidneys'\n  | 'kip-sign'\n  | 'kiss-beam'\n  | 'kiss-wink-heart'\n  | 'kiss'\n  | 'kit-medical'\n  | 'kitchen-set'\n  | 'kite'\n  | 'kiwi-bird'\n  | 'kiwi-fruit'\n  | 'knife-kitchen'\n  | 'knife'\n  | 'krw'\n  | 'l'\n  | 'lacrosse-stick-ball'\n  | 'lacrosse-stick'\n  | 'ladder-water'\n  | 'lambda'\n  | 'lamp-desk'\n  | 'lamp-floor'\n  | 'lamp-street'\n  | 'lamp'\n  | 'land-mine-on'\n  | 'landmark-alt'\n  | 'landmark-dome'\n  | 'landmark-flag'\n  | 'landmark'\n  | 'landscape'\n  | 'language'\n  | 'laptop-arrow-down'\n  | 'laptop-binary'\n  | 'laptop-code'\n  | 'laptop-file'\n  | 'laptop-house'\n  | 'laptop-medical'\n  | 'laptop-mobile'\n  | 'laptop-slash'\n  | 'laptop'\n  | 'lari-sign'\n  | 'lasso-sparkles'\n  | 'lasso'\n  | 'laugh-beam'\n  | 'laugh-squint'\n  | 'laugh-wink'\n  | 'laugh'\n  | 'layer-group-minus'\n  | 'layer-group-plus'\n  | 'layer-group'\n  | 'layer-minus'\n  | 'layer-plus'\n  | 'leaf-heart'\n  | 'leaf-maple'\n  | 'leaf-oak'\n  | 'leaf'\n  | 'leafy-green'\n  | 'left-from-line'\n  | 'left-long-to-line'\n  | 'left-long'\n  | 'left-right'\n  | 'left-to-line'\n  | 'left'\n  | 'legal'\n  | 'lemon'\n  | 'less-than-equal'\n  | 'less-than'\n  | 'level-down-alt'\n  | 'level-down'\n  | 'level-up-alt'\n  | 'level-up'\n  | 'life-ring'\n  | 'light-ceiling'\n  | 'light-emergency-on'\n  | 'light-emergency'\n  | 'light-switch-off'\n  | 'light-switch-on'\n  | 'light-switch'\n  | 'lightbulb-cfl-on'\n  | 'lightbulb-cfl'\n  | 'lightbulb-dollar'\n  | 'lightbulb-exclamation-on'\n  | 'lightbulb-exclamation'\n  | 'lightbulb-gear'\n  | 'lightbulb-on'\n  | 'lightbulb-slash'\n  | 'lightbulb'\n  | 'lights-holiday'\n  | 'line-chart'\n  | 'line-columns'\n  | 'line-height'\n  | 'lines-leaning'\n  | 'link-horizontal-slash'\n  | 'link-horizontal'\n  | 'link-simple-slash'\n  | 'link-simple'\n  | 'link-slash'\n  | 'link'\n  | 'lips'\n  | 'lira-sign'\n  | 'list-1-2'\n  | 'list-alt'\n  | 'list-check'\n  | 'list-dots'\n  | 'list-dropdown'\n  | 'list-music'\n  | 'list-numeric'\n  | 'list-ol'\n  | 'list-radio'\n  | 'list-squares'\n  | 'list-timeline'\n  | 'list-tree'\n  | 'list-ul'\n  | 'list'\n  | 'litecoin-sign'\n  | 'loader'\n  | 'lobster'\n  | 'location-arrow'\n  | 'location-check'\n  | 'location-circle'\n  | 'location-crosshairs-slash'\n  | 'location-crosshairs'\n  | 'location-dot-slash'\n  | 'location-dot'\n  | 'location-exclamation'\n  | 'location-minus'\n  | 'location-pen'\n  | 'location-pin-lock'\n  | 'location-pin-slash'\n  | 'location-pin'\n  | 'location-plus'\n  | 'location-question'\n  | 'location-slash'\n  | 'location-smile'\n  | 'location-xmark'\n  | 'location'\n  | 'lock-a'\n  | 'lock-alt'\n  | 'lock-hashtag'\n  | 'lock-keyhole-open'\n  | 'lock-keyhole'\n  | 'lock-open-alt'\n  | 'lock-open'\n  | 'lock'\n  | 'locust'\n  | 'lollipop'\n  | 'lollypop'\n  | 'long-arrow-alt-down'\n  | 'long-arrow-alt-left'\n  | 'long-arrow-alt-right'\n  | 'long-arrow-alt-up'\n  | 'long-arrow-down'\n  | 'long-arrow-left'\n  | 'long-arrow-right'\n  | 'long-arrow-up'\n  | 'loveseat'\n  | 'low-vision'\n  | 'luchador-mask'\n  | 'luchador'\n  | 'luggage-cart'\n  | 'lungs-virus'\n  | 'lungs'\n  | 'm'\n  | 'mace'\n  | 'magic-wand-sparkles'\n  | 'magic'\n  | 'magnet'\n  | 'magnifying-glass-arrow-right'\n  | 'magnifying-glass-chart'\n  | 'magnifying-glass-dollar'\n  | 'magnifying-glass-location'\n  | 'magnifying-glass-minus'\n  | 'magnifying-glass-plus'\n  | 'magnifying-glass'\n  | 'mail-bulk'\n  | 'mail-forward'\n  | 'mail-reply-all'\n  | 'mail-reply'\n  | 'mailbox-flag-up'\n  | 'mailbox'\n  | 'maki-roll'\n  | 'makizushi'\n  | 'male'\n  | 'manat-sign'\n  | 'mandolin'\n  | 'mango'\n  | 'manhole'\n  | 'map-location-dot'\n  | 'map-location'\n  | 'map-marked-alt'\n  | 'map-marked'\n  | 'map-marker-alt-slash'\n  | 'map-marker-alt'\n  | 'map-marker-check'\n  | 'map-marker-edit'\n  | 'map-marker-exclamation'\n  | 'map-marker-minus'\n  | 'map-marker-plus'\n  | 'map-marker-question'\n  | 'map-marker-slash'\n  | 'map-marker-smile'\n  | 'map-marker-times'\n  | 'map-marker-xmark'\n  | 'map-marker'\n  | 'map-pin'\n  | 'map-signs'\n  | 'map'\n  | 'marker'\n  | 'mars-and-venus-burst'\n  | 'mars-and-venus'\n  | 'mars-double'\n  | 'mars-stroke-h'\n  | 'mars-stroke-right'\n  | 'mars-stroke-up'\n  | 'mars-stroke-v'\n  | 'mars-stroke'\n  | 'mars'\n  | 'martini-glass-citrus'\n  | 'martini-glass-empty'\n  | 'martini-glass'\n  | 'mask-face'\n  | 'mask-luchador'\n  | 'mask-snorkel'\n  | 'mask-ventilator'\n  | 'mask'\n  | 'masks-theater'\n  | 'mattress-pillow'\n  | 'maximize'\n  | 'meat'\n  | 'medal'\n  | 'medkit'\n  | 'megaphone'\n  | 'meh-blank'\n  | 'meh-rolling-eyes'\n  | 'meh'\n  | 'melon-slice'\n  | 'melon'\n  | 'memo-circle-check'\n  | 'memo-circle-info'\n  | 'memo-pad'\n  | 'memo'\n  | 'memory'\n  | 'menorah'\n  | 'mercury'\n  | 'merge'\n  | 'message-arrow-down'\n  | 'message-arrow-up-right'\n  | 'message-arrow-up'\n  | 'message-bot'\n  | 'message-captions'\n  | 'message-check'\n  | 'message-code'\n  | 'message-dollar'\n  | 'message-dots'\n  | 'message-edit'\n  | 'message-exclamation'\n  | 'message-heart'\n  | 'message-image'\n  | 'message-lines'\n  | 'message-medical'\n  | 'message-middle-top'\n  | 'message-middle'\n  | 'message-minus'\n  | 'message-music'\n  | 'message-pen'\n  | 'message-plus'\n  | 'message-question'\n  | 'message-quote'\n  | 'message-slash'\n  | 'message-smile'\n  | 'message-sms'\n  | 'message-text'\n  | 'message-times'\n  | 'message-xmark'\n  | 'message'\n  | 'messages-dollar'\n  | 'messages-question'\n  | 'messages'\n  | 'messaging'\n  | 'meteor'\n  | 'meter-bolt'\n  | 'meter-droplet'\n  | 'meter-fire'\n  | 'meter'\n  | 'microchip-ai'\n  | 'microchip'\n  | 'microphone-alt-slash'\n  | 'microphone-alt'\n  | 'microphone-circle-alt'\n  | 'microphone-circle'\n  | 'microphone-lines-slash'\n  | 'microphone-lines'\n  | 'microphone-slash'\n  | 'microphone-stand'\n  | 'microphone'\n  | 'microscope'\n  | 'microwave'\n  | 'mill-sign'\n  | 'mind-share'\n  | 'minimize'\n  | 'minus-circle'\n  | 'minus-hexagon'\n  | 'minus-large'\n  | 'minus-octagon'\n  | 'minus-square'\n  | 'minus'\n  | 'mistletoe'\n  | 'mitten'\n  | 'mobile-alt'\n  | 'mobile-android-alt'\n  | 'mobile-android'\n  | 'mobile-button'\n  | 'mobile-iphone'\n  | 'mobile-notch'\n  | 'mobile-phone'\n  | 'mobile-retro'\n  | 'mobile-screen-button'\n  | 'mobile-screen'\n  | 'mobile-signal-out'\n  | 'mobile-signal'\n  | 'mobile'\n  | 'money-bill-1-wave'\n  | 'money-bill-1'\n  | 'money-bill-alt'\n  | 'money-bill-simple-wave'\n  | 'money-bill-simple'\n  | 'money-bill-transfer'\n  | 'money-bill-trend-up'\n  | 'money-bill-wave-alt'\n  | 'money-bill-wave'\n  | 'money-bill-wheat'\n  | 'money-bill'\n  | 'money-bills-alt'\n  | 'money-bills-simple'\n  | 'money-bills'\n  | 'money-check-alt'\n  | 'money-check-dollar-pen'\n  | 'money-check-dollar'\n  | 'money-check-edit-alt'\n  | 'money-check-edit'\n  | 'money-check-pen'\n  | 'money-check'\n  | 'money-from-bracket'\n  | 'money-simple-from-bracket'\n  | 'monitor-heart-rate'\n  | 'monitor-waveform'\n  | 'monkey'\n  | 'monument'\n  | 'moon-cloud'\n  | 'moon-over-sun'\n  | 'moon-stars'\n  | 'moon'\n  | 'moped'\n  | 'mortar-board'\n  | 'mortar-pestle'\n  | 'mosque'\n  | 'mosquito-net'\n  | 'mosquito'\n  | 'motorcycle'\n  | 'mound'\n  | 'mountain-city'\n  | 'mountain-sun'\n  | 'mountain'\n  | 'mountains'\n  | 'mouse-alt'\n  | 'mouse-field'\n  | 'mouse-pointer'\n  | 'mouse'\n  | 'mp3-player'\n  | 'mug-hot'\n  | 'mug-marshmallows'\n  | 'mug-saucer'\n  | 'mug-tea-saucer'\n  | 'mug-tea'\n  | 'mug'\n  | 'multiply'\n  | 'museum'\n  | 'mushroom'\n  | 'music-alt-slash'\n  | 'music-alt'\n  | 'music-note-slash'\n  | 'music-note'\n  | 'music-slash'\n  | 'music'\n  | 'mustache'\n  | 'n'\n  | 'naira-sign'\n  | 'narwhal'\n  | 'navicon'\n  | 'nesting-dolls'\n  | 'network-wired'\n  | 'neuter'\n  | 'newspaper'\n  | 'nfc-lock'\n  | 'nfc-magnifying-glass'\n  | 'nfc-pen'\n  | 'nfc-signal'\n  | 'nfc-slash'\n  | 'nfc-symbol'\n  | 'nfc-trash'\n  | 'nfc'\n  | 'nigiri'\n  | 'nose'\n  | 'not-equal'\n  | 'notdef'\n  | 'note-medical'\n  | 'note-sticky'\n  | 'note'\n  | 'notebook'\n  | 'notes-medical'\n  | 'notes'\n  | 'o'\n  | 'object-exclude'\n  | 'object-group'\n  | 'object-intersect'\n  | 'object-subtract'\n  | 'object-ungroup'\n  | 'object-union'\n  | 'objects-align-bottom'\n  | 'objects-align-center-horizontal'\n  | 'objects-align-center-vertical'\n  | 'objects-align-left'\n  | 'objects-align-right'\n  | 'objects-align-top'\n  | 'objects-column'\n  | 'octagon-check'\n  | 'octagon-divide'\n  | 'octagon-exclamation'\n  | 'octagon-minus'\n  | 'octagon-plus'\n  | 'octagon-xmark'\n  | 'octagon'\n  | 'oil-can-drip'\n  | 'oil-can'\n  | 'oil-temp'\n  | 'oil-temperature'\n  | 'oil-well'\n  | 'olive-branch'\n  | 'olive'\n  | 'om'\n  | 'omega'\n  | 'onion'\n  | 'option'\n  | 'ornament'\n  | 'otter'\n  | 'outdent'\n  | 'outlet'\n  | 'oven'\n  | 'overline'\n  | 'p'\n  | 'page-break'\n  | 'page-caret-down'\n  | 'page-caret-up'\n  | 'page'\n  | 'pager'\n  | 'paint-brush-alt'\n  | 'paint-brush-fine'\n  | 'paint-brush'\n  | 'paint-roller'\n  | 'paintbrush-alt'\n  | 'paintbrush-fine'\n  | 'paintbrush-pencil'\n  | 'paintbrush'\n  | 'palette-boxes'\n  | 'palette'\n  | 'pallet-alt'\n  | 'pallet-box'\n  | 'pallet-boxes'\n  | 'pallet'\n  | 'pan-food'\n  | 'pan-frying'\n  | 'pancakes'\n  | 'panel-ews'\n  | 'panel-fire'\n  | 'panorama'\n  | 'paper-plane-alt'\n  | 'paper-plane-top'\n  | 'paper-plane'\n  | 'paperclip-vertical'\n  | 'paperclip'\n  | 'parachute-box'\n  | 'paragraph-left'\n  | 'paragraph-rtl'\n  | 'paragraph'\n  | 'parentheses'\n  | 'parenthesis'\n  | 'parking-circle-slash'\n  | 'parking-circle'\n  | 'parking-slash'\n  | 'parking'\n  | 'party-back'\n  | 'party-bell'\n  | 'party-horn'\n  | 'passport'\n  | 'pastafarianism'\n  | 'paste'\n  | 'pause-circle'\n  | 'pause'\n  | 'paw-alt'\n  | 'paw-claws'\n  | 'paw-simple'\n  | 'paw'\n  | 'peace'\n  | 'peach'\n  | 'peanut'\n  | 'peanuts'\n  | 'peapod'\n  | 'pear'\n  | 'pedestal'\n  | 'pegasus'\n  | 'pen-alt-slash'\n  | 'pen-alt'\n  | 'pen-circle'\n  | 'pen-clip-slash'\n  | 'pen-clip'\n  | 'pen-fancy-slash'\n  | 'pen-fancy'\n  | 'pen-field'\n  | 'pen-line'\n  | 'pen-nib-slash'\n  | 'pen-nib'\n  | 'pen-paintbrush'\n  | 'pen-ruler'\n  | 'pen-slash'\n  | 'pen-square'\n  | 'pen-swirl'\n  | 'pen-to-square'\n  | 'pen'\n  | 'pencil-alt'\n  | 'pencil-mechanical'\n  | 'pencil-paintbrush'\n  | 'pencil-ruler'\n  | 'pencil-slash'\n  | 'pencil-square'\n  | 'pencil'\n  | 'pennant'\n  | 'people-arrows-left-right'\n  | 'people-arrows'\n  | 'people-carry-box'\n  | 'people-carry'\n  | 'people-dress-simple'\n  | 'people-dress'\n  | 'people-group'\n  | 'people-line'\n  | 'people-pants-simple'\n  | 'people-pants'\n  | 'people-pulling'\n  | 'people-robbery'\n  | 'people-roof'\n  | 'people-simple'\n  | 'people'\n  | 'pepper-hot'\n  | 'pepper'\n  | 'percent'\n  | 'percentage'\n  | 'period'\n  | 'person-arrow-down-to-line'\n  | 'person-arrow-up-from-line'\n  | 'person-biking-mountain'\n  | 'person-biking'\n  | 'person-booth'\n  | 'person-breastfeeding'\n  | 'person-burst'\n  | 'person-cane'\n  | 'person-carry-box'\n  | 'person-carry'\n  | 'person-chalkboard'\n  | 'person-circle-check'\n  | 'person-circle-exclamation'\n  | 'person-circle-minus'\n  | 'person-circle-plus'\n  | 'person-circle-question'\n  | 'person-circle-xmark'\n  | 'person-digging'\n  | 'person-dolly-empty'\n  | 'person-dolly'\n  | 'person-dots-from-line'\n  | 'person-dress-burst'\n  | 'person-dress-simple'\n  | 'person-dress'\n  | 'person-drowning'\n  | 'person-falling-burst'\n  | 'person-falling'\n  | 'person-from-portal'\n  | 'person-half-dress'\n  | 'person-harassing'\n  | 'person-hiking'\n  | 'person-military-pointing'\n  | 'person-military-rifle'\n  | 'person-military-to-person'\n  | 'person-pinball'\n  | 'person-praying'\n  | 'person-pregnant'\n  | 'person-rays'\n  | 'person-rifle'\n  | 'person-running-fast'\n  | 'person-running'\n  | 'person-seat-reclined'\n  | 'person-seat'\n  | 'person-shelter'\n  | 'person-sign'\n  | 'person-simple'\n  | 'person-skating'\n  | 'person-ski-jumping'\n  | 'person-ski-lift'\n  | 'person-skiing-nordic'\n  | 'person-skiing'\n  | 'person-sledding'\n  | 'person-snowboarding'\n  | 'person-snowmobiling'\n  | 'person-swimming'\n  | 'person-through-window'\n  | 'person-to-door'\n  | 'person-to-portal'\n  | 'person-walking-arrow-loop-left'\n  | 'person-walking-arrow-right'\n  | 'person-walking-dashed-line-arrow-right'\n  | 'person-walking-luggage'\n  | 'person-walking-with-cane'\n  | 'person-walking'\n  | 'person'\n  | 'peseta-sign'\n  | 'peso-sign'\n  | 'phone-alt'\n  | 'phone-arrow-down-left'\n  | 'phone-arrow-down'\n  | 'phone-arrow-right'\n  | 'phone-arrow-up-right'\n  | 'phone-arrow-up'\n  | 'phone-circle-alt'\n  | 'phone-circle-down'\n  | 'phone-circle'\n  | 'phone-flip'\n  | 'phone-hangup'\n  | 'phone-incoming'\n  | 'phone-intercom'\n  | 'phone-laptop'\n  | 'phone-missed'\n  | 'phone-office'\n  | 'phone-outgoing'\n  | 'phone-plus'\n  | 'phone-rotary'\n  | 'phone-slash'\n  | 'phone-square-alt'\n  | 'phone-square-down'\n  | 'phone-square'\n  | 'phone-volume'\n  | 'phone-xmark'\n  | 'phone'\n  | 'photo-film-music'\n  | 'photo-film'\n  | 'photo-video'\n  | 'pi'\n  | 'piano-keyboard'\n  | 'piano'\n  | 'pickaxe'\n  | 'pickleball'\n  | 'pie-chart'\n  | 'pie'\n  | 'pig'\n  | 'piggy-bank'\n  | 'pills'\n  | 'pinata'\n  | 'pinball'\n  | 'pineapple'\n  | 'ping-pong-paddle-ball'\n  | 'pipe-circle-check'\n  | 'pipe-collar'\n  | 'pipe-section'\n  | 'pipe-smoking'\n  | 'pipe-valve'\n  | 'pipe'\n  | 'pizza-slice'\n  | 'pizza'\n  | 'place-of-worship'\n  | 'plane-alt'\n  | 'plane-arrival'\n  | 'plane-circle-check'\n  | 'plane-circle-exclamation'\n  | 'plane-circle-xmark'\n  | 'plane-departure'\n  | 'plane-engines'\n  | 'plane-lock'\n  | 'plane-prop'\n  | 'plane-slash'\n  | 'plane-tail'\n  | 'plane-up-slash'\n  | 'plane-up'\n  | 'plane'\n  | 'planet-moon'\n  | 'planet-ringed'\n  | 'plant-wilt'\n  | 'plate-utensils'\n  | 'plate-wheat'\n  | 'play-circle'\n  | 'play-pause'\n  | 'play'\n  | 'plug-circle-bolt'\n  | 'plug-circle-check'\n  | 'plug-circle-exclamation'\n  | 'plug-circle-minus'\n  | 'plug-circle-plus'\n  | 'plug-circle-xmark'\n  | 'plug'\n  | 'plus-circle'\n  | 'plus-hexagon'\n  | 'plus-large'\n  | 'plus-minus'\n  | 'plus-octagon'\n  | 'plus-square'\n  | 'plus'\n  | 'podcast'\n  | 'podium-star'\n  | 'podium'\n  | 'police-box'\n  | 'poll-h'\n  | 'poll-people'\n  | 'poll'\n  | 'pompebled'\n  | 'poo-bolt'\n  | 'poo-storm'\n  | 'poo'\n  | 'pool-8-ball'\n  | 'poop'\n  | 'popcorn'\n  | 'popsicle'\n  | 'portal-enter'\n  | 'portal-exit'\n  | 'portrait'\n  | 'pot-food'\n  | 'potato'\n  | 'pound-sign'\n  | 'power-off'\n  | 'pray'\n  | 'praying-hands'\n  | 'prescription-bottle-alt'\n  | 'prescription-bottle-medical'\n  | 'prescription-bottle-pill'\n  | 'prescription-bottle'\n  | 'prescription'\n  | 'presentation-screen'\n  | 'presentation'\n  | 'pretzel'\n  | 'print-magnifying-glass'\n  | 'print-search'\n  | 'print-slash'\n  | 'print'\n  | 'pro'\n  | 'procedures'\n  | 'project-diagram'\n  | 'projector'\n  | 'pump-medical'\n  | 'pump-soap'\n  | 'pump'\n  | 'pumpkin'\n  | 'puzzle-piece-alt'\n  | 'puzzle-piece-simple'\n  | 'puzzle-piece'\n  | 'puzzle'\n  | 'q'\n  | 'qrcode'\n  | 'question-circle'\n  | 'question-square'\n  | 'question'\n  | 'quidditch-broom-ball'\n  | 'quidditch'\n  | 'quote-left-alt'\n  | 'quote-left'\n  | 'quote-right-alt'\n  | 'quote-right'\n  | 'quotes'\n  | 'quran'\n  | 'r'\n  | 'rabbit-fast'\n  | 'rabbit-running'\n  | 'rabbit'\n  | 'racquet'\n  | 'radar'\n  | 'radiation-alt'\n  | 'radiation'\n  | 'radio-alt'\n  | 'radio-tuner'\n  | 'radio'\n  | 'rainbow'\n  | 'raindrops'\n  | 'ram'\n  | 'ramp-loading'\n  | 'random'\n  | 'ranking-star'\n  | 'raygun'\n  | 'receipt'\n  | 'record-vinyl'\n  | 'rectangle-ad'\n  | 'rectangle-barcode'\n  | 'rectangle-code'\n  | 'rectangle-hd'\n  | 'rectangle-history-circle-plus'\n  | 'rectangle-history-circle-user'\n  | 'rectangle-history'\n  | 'rectangle-landscape'\n  | 'rectangle-list'\n  | 'rectangle-portrait'\n  | 'rectangle-pro'\n  | 'rectangle-sd'\n  | 'rectangle-terminal'\n  | 'rectangle-times'\n  | 'rectangle-vertical-history'\n  | 'rectangle-vertical'\n  | 'rectangle-wide'\n  | 'rectangle-xmark'\n  | 'rectangle'\n  | 'rectangles-mixed'\n  | 'recycle'\n  | 'redo-alt'\n  | 'redo'\n  | 'reel'\n  | 'refresh'\n  | 'refrigerator'\n  | 'registered'\n  | 'remove-format'\n  | 'remove'\n  | 'reorder'\n  | 'repeat-1-alt'\n  | 'repeat-1'\n  | 'repeat-alt'\n  | 'repeat'\n  | 'reply-all'\n  | 'reply-clock'\n  | 'reply-time'\n  | 'reply'\n  | 'republican'\n  | 'restroom-simple'\n  | 'restroom'\n  | 'retweet-alt'\n  | 'retweet'\n  | 'rhombus'\n  | 'ribbon'\n  | 'right-from-bracket'\n  | 'right-from-line'\n  | 'right-left-large'\n  | 'right-left'\n  | 'right-long-to-line'\n  | 'right-long'\n  | 'right-to-bracket'\n  | 'right-to-line'\n  | 'right'\n  | 'ring-diamond'\n  | 'ring'\n  | 'rings-wedding'\n  | 'rmb'\n  | 'road-barrier'\n  | 'road-bridge'\n  | 'road-circle-check'\n  | 'road-circle-exclamation'\n  | 'road-circle-xmark'\n  | 'road-lock'\n  | 'road-spikes'\n  | 'road'\n  | 'robot-astromech'\n  | 'robot'\n  | 'rocket-launch'\n  | 'rocket'\n  | 'rod-asclepius'\n  | 'rod-snake'\n  | 'roller-coaster'\n  | 'rotate-back'\n  | 'rotate-backward'\n  | 'rotate-exclamation'\n  | 'rotate-forward'\n  | 'rotate-left'\n  | 'rotate-right'\n  | 'rotate'\n  | 'rouble'\n  | 'route-highway'\n  | 'route-interstate'\n  | 'route'\n  | 'router'\n  | 'rows'\n  | 'rss-square'\n  | 'rss'\n  | 'rub'\n  | 'ruble-sign'\n  | 'ruble'\n  | 'rug'\n  | 'rugby-ball'\n  | 'ruler-combined'\n  | 'ruler-horizontal'\n  | 'ruler-triangle'\n  | 'ruler-vertical'\n  | 'ruler'\n  | 'running'\n  | 'rupee-sign'\n  | 'rupee'\n  | 'rupiah-sign'\n  | 'rv'\n  | 's'\n  | 'sack-dollar'\n  | 'sack-xmark'\n  | 'sack'\n  | 'sad-cry'\n  | 'sad-tear'\n  | 'sailboat'\n  | 'salad'\n  | 'salt-shaker'\n  | 'sandwich'\n  | 'satellite-dish'\n  | 'satellite'\n  | 'sausage'\n  | 'save-circle-arrow-right'\n  | 'save-circle-xmark'\n  | 'save-times'\n  | 'save'\n  | 'sax-hot'\n  | 'saxophone-fire'\n  | 'saxophone'\n  | 'scale-balanced'\n  | 'scale-unbalanced-flip'\n  | 'scale-unbalanced'\n  | 'scalpel-line-dashed'\n  | 'scalpel-path'\n  | 'scalpel'\n  | 'scanner-gun'\n  | 'scanner-image'\n  | 'scanner-keyboard'\n  | 'scanner-touchscreen'\n  | 'scanner'\n  | 'scarecrow'\n  | 'scarf'\n  | 'school-circle-check'\n  | 'school-circle-exclamation'\n  | 'school-circle-xmark'\n  | 'school-flag'\n  | 'school-lock'\n  | 'school'\n  | 'scissors'\n  | 'screen-users'\n  | 'screencast'\n  | 'screenshot'\n  | 'screwdriver-wrench'\n  | 'screwdriver'\n  | 'scribble'\n  | 'scroll-old'\n  | 'scroll-ribbon'\n  | 'scroll-torah'\n  | 'scroll'\n  | 'scrubber'\n  | 'scythe'\n  | 'sd-card'\n  | 'sd-cards'\n  | 'seal-exclamation'\n  | 'seal-question'\n  | 'seal'\n  | 'search-dollar'\n  | 'search-location'\n  | 'search-minus'\n  | 'search-plus'\n  | 'search'\n  | 'seat-airline'\n  | 'section'\n  | 'seedling'\n  | 'semicolon'\n  | 'send-back'\n  | 'send-backward'\n  | 'send'\n  | 'sensor-alert'\n  | 'sensor-cloud'\n  | 'sensor-fire'\n  | 'sensor-on'\n  | 'sensor-smoke'\n  | 'sensor-triangle-exclamation'\n  | 'sensor'\n  | 'server'\n  | 'shapes'\n  | 'share-all'\n  | 'share-alt-square'\n  | 'share-alt'\n  | 'share-from-square'\n  | 'share-nodes'\n  | 'share-square'\n  | 'share'\n  | 'sheep'\n  | 'sheet-plastic'\n  | 'shekel-sign'\n  | 'shekel'\n  | 'shelves-empty'\n  | 'shelves'\n  | 'sheqel-sign'\n  | 'sheqel'\n  | 'shield-alt'\n  | 'shield-blank'\n  | 'shield-cat'\n  | 'shield-check'\n  | 'shield-cross'\n  | 'shield-dog'\n  | 'shield-exclamation'\n  | 'shield-halved'\n  | 'shield-heart'\n  | 'shield-keyhole'\n  | 'shield-minus'\n  | 'shield-plus'\n  | 'shield-quartered'\n  | 'shield-slash'\n  | 'shield-times'\n  | 'shield-virus'\n  | 'shield-xmark'\n  | 'shield'\n  | 'ship'\n  | 'shipping-fast'\n  | 'shipping-timed'\n  | 'shirt-long-sleeve'\n  | 'shirt-running'\n  | 'shirt-tank-top'\n  | 'shirt'\n  | 'shish-kebab'\n  | 'shoe-prints'\n  | 'shop-lock'\n  | 'shop-slash'\n  | 'shop'\n  | 'shopping-bag'\n  | 'shopping-basket-alt'\n  | 'shopping-basket'\n  | 'shopping-cart'\n  | 'shortcake'\n  | 'shovel-snow'\n  | 'shovel'\n  | 'shower-alt'\n  | 'shower-down'\n  | 'shower'\n  | 'shredder'\n  | 'shrimp'\n  | 'shuffle'\n  | 'shutters'\n  | 'shuttle-space'\n  | 'shuttle-van'\n  | 'shuttlecock'\n  | 'sickle'\n  | 'sidebar-flip'\n  | 'sidebar'\n  | 'sigma'\n  | 'sign-hanging'\n  | 'sign-in-alt'\n  | 'sign-in'\n  | 'sign-language'\n  | 'sign-out-alt'\n  | 'sign-out'\n  | 'sign'\n  | 'signal-1'\n  | 'signal-2'\n  | 'signal-3'\n  | 'signal-4'\n  | 'signal-5'\n  | 'signal-alt-1'\n  | 'signal-alt-2'\n  | 'signal-alt-3'\n  | 'signal-alt-4'\n  | 'signal-alt-slash'\n  | 'signal-alt'\n  | 'signal-bars-fair'\n  | 'signal-bars-good'\n  | 'signal-bars-slash'\n  | 'signal-bars-strong'\n  | 'signal-bars-weak'\n  | 'signal-bars'\n  | 'signal-fair'\n  | 'signal-good'\n  | 'signal-perfect'\n  | 'signal-slash'\n  | 'signal-stream-slash'\n  | 'signal-stream'\n  | 'signal-strong'\n  | 'signal-weak'\n  | 'signal'\n  | 'signature-lock'\n  | 'signature-slash'\n  | 'signature'\n  | 'signing'\n  | 'signs-post'\n  | 'sim-card'\n  | 'sim-cards'\n  | 'sink'\n  | 'siren-on'\n  | 'siren'\n  | 'sitemap'\n  | 'skating'\n  | 'skeleton-ribs'\n  | 'skeleton'\n  | 'ski-boot-ski'\n  | 'ski-boot'\n  | 'ski-jump'\n  | 'ski-lift'\n  | 'skiing-nordic'\n  | 'skiing'\n  | 'skull-cow'\n  | 'skull-crossbones'\n  | 'skull'\n  | 'slash-back'\n  | 'slash-forward'\n  | 'slash'\n  | 'sledding'\n  | 'sleigh'\n  | 'slider'\n  | 'sliders-h-square'\n  | 'sliders-h'\n  | 'sliders-simple'\n  | 'sliders-up'\n  | 'sliders-v-square'\n  | 'sliders-v'\n  | 'sliders'\n  | 'slot-machine'\n  | 'smile-beam'\n  | 'smile-plus'\n  | 'smile-wink'\n  | 'smile'\n  | 'smog'\n  | 'smoke'\n  | 'smoking-ban'\n  | 'smoking'\n  | 'sms'\n  | 'snake'\n  | 'snooze'\n  | 'snow-blowing'\n  | 'snowboarding'\n  | 'snowflake-droplets'\n  | 'snowflake'\n  | 'snowflakes'\n  | 'snowman-head'\n  | 'snowman'\n  | 'snowmobile'\n  | 'snowplow'\n  | 'soap'\n  | 'soccer-ball'\n  | 'socks'\n  | 'soft-serve'\n  | 'solar-panel'\n  | 'solar-system'\n  | 'sort-alpha-asc'\n  | 'sort-alpha-desc'\n  | 'sort-alpha-down-alt'\n  | 'sort-alpha-down'\n  | 'sort-alpha-up-alt'\n  | 'sort-alpha-up'\n  | 'sort-alt'\n  | 'sort-amount-asc'\n  | 'sort-amount-desc'\n  | 'sort-amount-down-alt'\n  | 'sort-amount-down'\n  | 'sort-amount-up-alt'\n  | 'sort-amount-up'\n  | 'sort-asc'\n  | 'sort-circle-down'\n  | 'sort-circle-up'\n  | 'sort-circle'\n  | 'sort-desc'\n  | 'sort-down'\n  | 'sort-numeric-asc'\n  | 'sort-numeric-desc'\n  | 'sort-numeric-down-alt'\n  | 'sort-numeric-down'\n  | 'sort-numeric-up-alt'\n  | 'sort-numeric-up'\n  | 'sort-shapes-down-alt'\n  | 'sort-shapes-down'\n  | 'sort-shapes-up-alt'\n  | 'sort-shapes-up'\n  | 'sort-size-down-alt'\n  | 'sort-size-down'\n  | 'sort-size-up-alt'\n  | 'sort-size-up'\n  | 'sort-up-down'\n  | 'sort-up'\n  | 'sort'\n  | 'soup'\n  | 'spa'\n  | 'space-shuttle'\n  | 'space-station-moon-alt'\n  | 'space-station-moon-construction'\n  | 'space-station-moon'\n  | 'spade'\n  | 'spaghetti-monster-flying'\n  | 'sparkle'\n  | 'sparkles'\n  | 'speaker'\n  | 'speakers'\n  | 'spell-check'\n  | 'spider-black-widow'\n  | 'spider-web'\n  | 'spider'\n  | 'spinner-third'\n  | 'spinner'\n  | 'split'\n  | 'splotch'\n  | 'spoon'\n  | 'sportsball'\n  | 'spray-can-sparkles'\n  | 'spray-can'\n  | 'sprinkler-ceiling'\n  | 'sprinkler'\n  | 'sprout'\n  | 'square-0'\n  | 'square-1'\n  | 'square-2'\n  | 'square-3'\n  | 'square-4'\n  | 'square-5'\n  | 'square-6'\n  | 'square-7'\n  | 'square-8'\n  | 'square-9'\n  | 'square-a-lock'\n  | 'square-a'\n  | 'square-ampersand'\n  | 'square-arrow-down-left'\n  | 'square-arrow-down-right'\n  | 'square-arrow-down'\n  | 'square-arrow-left'\n  | 'square-arrow-right'\n  | 'square-arrow-up-left'\n  | 'square-arrow-up-right'\n  | 'square-arrow-up'\n  | 'square-b'\n  | 'square-bolt'\n  | 'square-c'\n  | 'square-caret-down'\n  | 'square-caret-left'\n  | 'square-caret-right'\n  | 'square-caret-up'\n  | 'square-check'\n  | 'square-chevron-down'\n  | 'square-chevron-left'\n  | 'square-chevron-right'\n  | 'square-chevron-up'\n  | 'square-code'\n  | 'square-d'\n  | 'square-dashed-circle-plus'\n  | 'square-dashed'\n  | 'square-divide'\n  | 'square-dollar'\n  | 'square-down-left'\n  | 'square-down-right'\n  | 'square-down'\n  | 'square-e'\n  | 'square-ellipsis-vertical'\n  | 'square-ellipsis'\n  | 'square-envelope'\n  | 'square-exclamation'\n  | 'square-f'\n  | 'square-fragile'\n  | 'square-full'\n  | 'square-g'\n  | 'square-h'\n  | 'square-heart'\n  | 'square-i'\n  | 'square-info'\n  | 'square-j'\n  | 'square-k'\n  | 'square-kanban'\n  | 'square-l'\n  | 'square-left'\n  | 'square-list'\n  | 'square-m'\n  | 'square-minus'\n  | 'square-n'\n  | 'square-nfi'\n  | 'square-o'\n  | 'square-p'\n  | 'square-parking-slash'\n  | 'square-parking'\n  | 'square-pen'\n  | 'square-person-confined'\n  | 'square-phone-flip'\n  | 'square-phone-hangup'\n  | 'square-phone'\n  | 'square-plus'\n  | 'square-poll-horizontal'\n  | 'square-poll-vertical'\n  | 'square-q'\n  | 'square-quarters'\n  | 'square-question'\n  | 'square-quote'\n  | 'square-r'\n  | 'square-right'\n  | 'square-ring'\n  | 'square-root-alt'\n  | 'square-root-variable'\n  | 'square-root'\n  | 'square-rss'\n  | 'square-s'\n  | 'square-share-nodes'\n  | 'square-sliders-vertical'\n  | 'square-sliders'\n  | 'square-small'\n  | 'square-star'\n  | 'square-t'\n  | 'square-terminal'\n  | 'square-this-way-up'\n  | 'square-u'\n  | 'square-up-left'\n  | 'square-up-right'\n  | 'square-up'\n  | 'square-user'\n  | 'square-v'\n  | 'square-virus'\n  | 'square-w'\n  | 'square-wine-glass-crack'\n  | 'square-x'\n  | 'square-xmark'\n  | 'square-y'\n  | 'square-z'\n  | 'square'\n  | 'squid'\n  | 'squirrel'\n  | 'staff-aesculapius'\n  | 'staff-snake'\n  | 'staff'\n  | 'stairs'\n  | 'stamp'\n  | 'standard-definition'\n  | 'stapler'\n  | 'star-and-crescent'\n  | 'star-christmas'\n  | 'star-circle'\n  | 'star-exclamation'\n  | 'star-half-alt'\n  | 'star-half-stroke'\n  | 'star-half'\n  | 'star-of-david'\n  | 'star-of-life'\n  | 'star-sharp-half-alt'\n  | 'star-sharp-half-stroke'\n  | 'star-sharp-half'\n  | 'star-sharp'\n  | 'star-shooting'\n  | 'star'\n  | 'starfighter-alt-advanced'\n  | 'starfighter-alt'\n  | 'starfighter-twin-ion-engine-advanced'\n  | 'starfighter-twin-ion-engine'\n  | 'starfighter'\n  | 'stars'\n  | 'starship-freighter'\n  | 'starship'\n  | 'steak'\n  | 'steering-wheel'\n  | 'step-backward'\n  | 'step-forward'\n  | 'sterling-sign'\n  | 'stethoscope'\n  | 'sticky-note'\n  | 'stocking'\n  | 'stomach'\n  | 'stop-circle'\n  | 'stop'\n  | 'stopwatch-20'\n  | 'stopwatch'\n  | 'store-alt-slash'\n  | 'store-alt'\n  | 'store-lock'\n  | 'store-slash'\n  | 'store'\n  | 'strawberry'\n  | 'stream'\n  | 'street-view'\n  | 'stretcher'\n  | 'strikethrough'\n  | 'stroopwafel'\n  | 'subscript'\n  | 'subtract'\n  | 'subway-tunnel'\n  | 'subway'\n  | 'suitcase-medical'\n  | 'suitcase-rolling'\n  | 'suitcase'\n  | 'sun-alt'\n  | 'sun-bright'\n  | 'sun-cloud'\n  | 'sun-dust'\n  | 'sun-haze'\n  | 'sun-plant-wilt'\n  | 'sun'\n  | 'sunglasses'\n  | 'sunrise'\n  | 'sunset'\n  | 'superscript'\n  | 'surprise'\n  | 'sushi-roll'\n  | 'sushi'\n  | 'swatchbook'\n  | 'swimmer'\n  | 'swimming-pool'\n  | 'sword-laser-alt'\n  | 'sword-laser'\n  | 'sword'\n  | 'swords-laser'\n  | 'swords'\n  | 'symbols'\n  | 'synagogue'\n  | 'sync-alt'\n  | 'sync'\n  | 'syringe'\n  | 't-shirt'\n  | 't'\n  | 'table-cells-large'\n  | 'table-cells'\n  | 'table-columns'\n  | 'table-layout'\n  | 'table-list'\n  | 'table-picnic'\n  | 'table-pivot'\n  | 'table-rows'\n  | 'table-tennis-paddle-ball'\n  | 'table-tennis'\n  | 'table-tree'\n  | 'table'\n  | 'tablet-alt'\n  | 'tablet-android-alt'\n  | 'tablet-android'\n  | 'tablet-button'\n  | 'tablet-rugged'\n  | 'tablet-screen-button'\n  | 'tablet-screen'\n  | 'tablet'\n  | 'tablets'\n  | 'tachograph-digital'\n  | 'tachometer-alt-average'\n  | 'tachometer-alt-fast'\n  | 'tachometer-alt-fastest'\n  | 'tachometer-alt-slow'\n  | 'tachometer-alt-slowest'\n  | 'tachometer-alt'\n  | 'tachometer-average'\n  | 'tachometer-fast'\n  | 'tachometer-fastest'\n  | 'tachometer-slow'\n  | 'tachometer-slowest'\n  | 'tachometer'\n  | 'taco'\n  | 'tag'\n  | 'tags'\n  | 'tally-1'\n  | 'tally-2'\n  | 'tally-3'\n  | 'tally-4'\n  | 'tally-5'\n  | 'tally'\n  | 'tamale'\n  | 'tanakh'\n  | 'tank-water'\n  | 'tape'\n  | 'tarp-droplet'\n  | 'tarp'\n  | 'tasks-alt'\n  | 'tasks'\n  | 'taxi-bus'\n  | 'taxi'\n  | 'teddy-bear'\n  | 'teeth-open'\n  | 'teeth'\n  | 'telescope'\n  | 'teletype-answer'\n  | 'teletype'\n  | 'television'\n  | 'temperature-0'\n  | 'temperature-1'\n  | 'temperature-2'\n  | 'temperature-3'\n  | 'temperature-4'\n  | 'temperature-arrow-down'\n  | 'temperature-arrow-up'\n  | 'temperature-down'\n  | 'temperature-empty'\n  | 'temperature-frigid'\n  | 'temperature-full'\n  | 'temperature-half'\n  | 'temperature-high'\n  | 'temperature-hot'\n  | 'temperature-list'\n  | 'temperature-low'\n  | 'temperature-quarter'\n  | 'temperature-snow'\n  | 'temperature-sun'\n  | 'temperature-three-quarters'\n  | 'temperature-up'\n  | 'tenge-sign'\n  | 'tenge'\n  | 'tennis-ball'\n  | 'tent-arrow-down-to-line'\n  | 'tent-arrow-left-right'\n  | 'tent-arrow-turn-left'\n  | 'tent-arrows-down'\n  | 'tent'\n  | 'tents'\n  | 'terminal'\n  | 'text-height'\n  | 'text-size'\n  | 'text-slash'\n  | 'text-width'\n  | 'text'\n  | 'th-large'\n  | 'th-list'\n  | 'th'\n  | 'theater-masks'\n  | 'thermometer-0'\n  | 'thermometer-1'\n  | 'thermometer-2'\n  | 'thermometer-3'\n  | 'thermometer-4'\n  | 'thermometer-empty'\n  | 'thermometer-full'\n  | 'thermometer-half'\n  | 'thermometer-quarter'\n  | 'thermometer-three-quarters'\n  | 'thermometer'\n  | 'theta'\n  | 'thought-bubble'\n  | 'thumb-tack'\n  | 'thumbs-down'\n  | 'thumbs-up'\n  | 'thumbtack'\n  | 'thunderstorm-moon'\n  | 'thunderstorm-sun'\n  | 'thunderstorm'\n  | 'tick'\n  | 'ticket-airline'\n  | 'ticket-alt'\n  | 'ticket-simple'\n  | 'ticket'\n  | 'tickets-airline'\n  | 'tilde'\n  | 'timeline-arrow'\n  | 'timeline'\n  | 'timer'\n  | 'times-circle'\n  | 'times-hexagon'\n  | 'times-octagon'\n  | 'times-rectangle'\n  | 'times-square'\n  | 'times-to-slot'\n  | 'times'\n  | 'tint-slash'\n  | 'tint'\n  | 'tire-flat'\n  | 'tire-pressure-warning'\n  | 'tire-rugged'\n  | 'tire'\n  | 'tired'\n  | 'toggle-large-off'\n  | 'toggle-large-on'\n  | 'toggle-off'\n  | 'toggle-on'\n  | 'toilet-paper-alt'\n  | 'toilet-paper-blank-under'\n  | 'toilet-paper-blank'\n  | 'toilet-paper-check'\n  | 'toilet-paper-reverse-alt'\n  | 'toilet-paper-reverse-slash'\n  | 'toilet-paper-reverse'\n  | 'toilet-paper-slash'\n  | 'toilet-paper-under-slash'\n  | 'toilet-paper-under'\n  | 'toilet-paper-xmark'\n  | 'toilet-paper'\n  | 'toilet-portable'\n  | 'toilet'\n  | 'toilets-portable'\n  | 'tomato'\n  | 'tombstone-alt'\n  | 'tombstone-blank'\n  | 'tombstone'\n  | 'toolbox'\n  | 'tools'\n  | 'tooth'\n  | 'toothbrush'\n  | 'torah'\n  | 'torii-gate'\n  | 'tornado'\n  | 'tower-broadcast'\n  | 'tower-cell'\n  | 'tower-control'\n  | 'tower-observation'\n  | 'tractor'\n  | 'trademark'\n  | 'traffic-cone'\n  | 'traffic-light-go'\n  | 'traffic-light-slow'\n  | 'traffic-light-stop'\n  | 'traffic-light'\n  | 'trailer'\n  | 'train-subway-tunnel'\n  | 'train-subway'\n  | 'train-track'\n  | 'train-tram'\n  | 'train-tunnel'\n  | 'train'\n  | 'tram'\n  | 'transformer-bolt'\n  | 'transgender-alt'\n  | 'transgender'\n  | 'transporter-1'\n  | 'transporter-2'\n  | 'transporter-3'\n  | 'transporter-4'\n  | 'transporter-5'\n  | 'transporter-6'\n  | 'transporter-7'\n  | 'transporter-empty'\n  | 'transporter'\n  | 'trash-alt-slash'\n  | 'trash-alt'\n  | 'trash-arrow-turn-left'\n  | 'trash-arrow-up'\n  | 'trash-can-arrow-turn-left'\n  | 'trash-can-arrow-up'\n  | 'trash-can-check'\n  | 'trash-can-clock'\n  | 'trash-can-list'\n  | 'trash-can-plus'\n  | 'trash-can-slash'\n  | 'trash-can-undo'\n  | 'trash-can-xmark'\n  | 'trash-can'\n  | 'trash-check'\n  | 'trash-circle'\n  | 'trash-clock'\n  | 'trash-list'\n  | 'trash-plus'\n  | 'trash-restore-alt'\n  | 'trash-restore'\n  | 'trash-slash'\n  | 'trash-undo-alt'\n  | 'trash-undo'\n  | 'trash-xmark'\n  | 'trash'\n  | 'treasure-chest'\n  | 'tree-alt'\n  | 'tree-christmas'\n  | 'tree-city'\n  | 'tree-deciduous'\n  | 'tree-decorated'\n  | 'tree-large'\n  | 'tree-palm'\n  | 'tree'\n  | 'trees'\n  | 'trian-balbot'\n  | 'triangle-circle-square'\n  | 'triangle-exclamation'\n  | 'triangle-instrument'\n  | 'triangle-music'\n  | 'triangle-person-digging'\n  | 'triangle'\n  | 'tricycle-adult'\n  | 'tricycle'\n  | 'trillium'\n  | 'trophy-alt'\n  | 'trophy-star'\n  | 'trophy'\n  | 'trowel-bricks'\n  | 'trowel'\n  | 'truck-arrow-right'\n  | 'truck-bolt'\n  | 'truck-clock'\n  | 'truck-container-empty'\n  | 'truck-container'\n  | 'truck-couch'\n  | 'truck-droplet'\n  | 'truck-fast'\n  | 'truck-field-un'\n  | 'truck-field'\n  | 'truck-flatbed'\n  | 'truck-front'\n  | 'truck-loading'\n  | 'truck-medical'\n  | 'truck-monster'\n  | 'truck-moving'\n  | 'truck-pickup'\n  | 'truck-plane'\n  | 'truck-plow'\n  | 'truck-ramp-box'\n  | 'truck-ramp-couch'\n  | 'truck-ramp'\n  | 'truck-tow'\n  | 'truck'\n  | 'trumpet'\n  | 'try'\n  | 'tshirt'\n  | 'tty-answer'\n  | 'tty'\n  | 'tugrik-sign'\n  | 'turkey'\n  | 'turkish-lira-sign'\n  | 'turkish-lira'\n  | 'turn-down-left'\n  | 'turn-down-right'\n  | 'turn-down'\n  | 'turn-up'\n  | 'turntable'\n  | 'turtle'\n  | 'tv-alt'\n  | 'tv-music'\n  | 'tv-retro'\n  | 'tv'\n  | 'typewriter'\n  | 'u'\n  | 'ufo-beam'\n  | 'ufo'\n  | 'umbrella-alt'\n  | 'umbrella-beach'\n  | 'umbrella-simple'\n  | 'umbrella'\n  | 'underline'\n  | 'undo-alt'\n  | 'undo'\n  | 'unicorn'\n  | 'uniform-martial-arts'\n  | 'union'\n  | 'universal-access'\n  | 'university'\n  | 'unlink'\n  | 'unlock-alt'\n  | 'unlock-keyhole'\n  | 'unlock'\n  | 'unsorted'\n  | 'up-down-left-right'\n  | 'up-down'\n  | 'up-from-bracket'\n  | 'up-from-dotted-line'\n  | 'up-from-line'\n  | 'up-left'\n  | 'up-long'\n  | 'up-right-and-down-left-from-center'\n  | 'up-right-from-square'\n  | 'up-right'\n  | 'up-to-dotted-line'\n  | 'up-to-line'\n  | 'up'\n  | 'upload'\n  | 'usb-drive'\n  | 'usd-circle'\n  | 'usd-square'\n  | 'usd'\n  | 'user-alien'\n  | 'user-alt-slash'\n  | 'user-alt'\n  | 'user-astronaut'\n  | 'user-bounty-hunter'\n  | 'user-chart'\n  | 'user-check'\n  | 'user-chef'\n  | 'user-circle'\n  | 'user-clock'\n  | 'user-cog'\n  | 'user-construction'\n  | 'user-cowboy'\n  | 'user-crown'\n  | 'user-doctor-hair-long'\n  | 'user-doctor-hair'\n  | 'user-doctor-message'\n  | 'user-doctor'\n  | 'user-edit'\n  | 'user-friends'\n  | 'user-gear'\n  | 'user-graduate'\n  | 'user-group-crown'\n  | 'user-group-simple'\n  | 'user-group'\n  | 'user-hair-buns'\n  | 'user-hair-long'\n  | 'user-hair-mullet'\n  | 'user-hair'\n  | 'user-hard-hat'\n  | 'user-headset'\n  | 'user-helmet-safety'\n  | 'user-injured'\n  | 'user-large-slash'\n  | 'user-large'\n  | 'user-lock'\n  | 'user-magnifying-glass'\n  | 'user-md-chat'\n  | 'user-md'\n  | 'user-minus'\n  | 'user-music'\n  | 'user-ninja'\n  | 'user-nurse-hair-long'\n  | 'user-nurse-hair'\n  | 'user-nurse'\n  | 'user-pen'\n  | 'user-pilot-tie'\n  | 'user-pilot'\n  | 'user-plus'\n  | 'user-police-tie'\n  | 'user-police'\n  | 'user-robot-xmarks'\n  | 'user-robot'\n  | 'user-secret'\n  | 'user-shakespeare'\n  | 'user-shield'\n  | 'user-slash'\n  | 'user-tag'\n  | 'user-tie-hair-long'\n  | 'user-tie-hair'\n  | 'user-tie'\n  | 'user-times'\n  | 'user-unlock'\n  | 'user-visor'\n  | 'user-vneck-hair-long'\n  | 'user-vneck-hair'\n  | 'user-vneck'\n  | 'user-xmark'\n  | 'user'\n  | 'users-between-lines'\n  | 'users-class'\n  | 'users-cog'\n  | 'users-crown'\n  | 'users-gear'\n  | 'users-line'\n  | 'users-medical'\n  | 'users-rays'\n  | 'users-rectangle'\n  | 'users-slash'\n  | 'users-viewfinder'\n  | 'users'\n  | 'utensil-fork'\n  | 'utensil-knife'\n  | 'utensil-spoon'\n  | 'utensils-alt'\n  | 'utensils-slash'\n  | 'utensils'\n  | 'utility-pole-double'\n  | 'utility-pole'\n  | 'v'\n  | 'vacuum-robot'\n  | 'vacuum'\n  | 'value-absolute'\n  | 'van-shuttle'\n  | 'vault'\n  | 'vcard'\n  | 'vector-circle'\n  | 'vector-polygon'\n  | 'vector-square'\n  | 'vent-damper'\n  | 'venus-double'\n  | 'venus-mars'\n  | 'venus'\n  | 'vest-patches'\n  | 'vest'\n  | 'vhs'\n  | 'vial-circle-check'\n  | 'vial-virus'\n  | 'vial'\n  | 'vials'\n  | 'video-arrow-down-left'\n  | 'video-arrow-up-right'\n  | 'video-camera'\n  | 'video-circle'\n  | 'video-handheld'\n  | 'video-plus'\n  | 'video-slash'\n  | 'video'\n  | 'vihara'\n  | 'violin'\n  | 'virus-covid-slash'\n  | 'virus-covid'\n  | 'virus-slash'\n  | 'virus'\n  | 'viruses'\n  | 'voicemail'\n  | 'volcano'\n  | 'volleyball-ball'\n  | 'volleyball'\n  | 'volume-control-phone'\n  | 'volume-down'\n  | 'volume-high'\n  | 'volume-low'\n  | 'volume-medium'\n  | 'volume-mute'\n  | 'volume-off'\n  | 'volume-slash'\n  | 'volume-times'\n  | 'volume-up'\n  | 'volume-xmark'\n  | 'volume'\n  | 'vote-nay'\n  | 'vote-yea'\n  | 'vr-cardboard'\n  | 'w'\n  | 'waffle'\n  | 'wagon-covered'\n  | 'walker'\n  | 'walkie-talkie'\n  | 'walking'\n  | 'wall-brick'\n  | 'wallet'\n  | 'wand-magic-sparkles'\n  | 'wand-magic'\n  | 'wand-sparkles'\n  | 'wand'\n  | 'warehouse-alt'\n  | 'warehouse-full'\n  | 'warehouse'\n  | 'warning'\n  | 'washer'\n  | 'washing-machine'\n  | 'watch-apple'\n  | 'watch-calculator'\n  | 'watch-fitness'\n  | 'watch-smart'\n  | 'watch'\n  | 'water-arrow-down'\n  | 'water-arrow-up'\n  | 'water-ladder'\n  | 'water-lower'\n  | 'water-rise'\n  | 'water'\n  | 'watermelon-slice'\n  | 'wave-pulse'\n  | 'wave-sine'\n  | 'wave-square'\n  | 'wave-triangle'\n  | 'waveform-circle'\n  | 'waveform-lines'\n  | 'waveform-path'\n  | 'waveform'\n  | 'webcam-slash'\n  | 'webcam'\n  | 'webhook'\n  | 'weight-hanging'\n  | 'weight-scale'\n  | 'weight'\n  | 'whale'\n  | 'wheat-alt'\n  | 'wheat-awn-circle-exclamation'\n  | 'wheat-awn-slash'\n  | 'wheat-awn'\n  | 'wheat-slash'\n  | 'wheat'\n  | 'wheelchair-alt'\n  | 'wheelchair-move'\n  | 'wheelchair'\n  | 'whiskey-glass-ice'\n  | 'whiskey-glass'\n  | 'whistle'\n  | 'wifi-1'\n  | 'wifi-2'\n  | 'wifi-3'\n  | 'wifi-exclamation'\n  | 'wifi-fair'\n  | 'wifi-slash'\n  | 'wifi-strong'\n  | 'wifi-weak'\n  | 'wifi'\n  | 'wind-circle-exclamation'\n  | 'wind-turbine'\n  | 'wind-warning'\n  | 'wind'\n  | 'window-alt'\n  | 'window-close'\n  | 'window-flip'\n  | 'window-frame-open'\n  | 'window-frame'\n  | 'window-maximize'\n  | 'window-minimize'\n  | 'window-restore'\n  | 'window'\n  | 'windsock'\n  | 'wine-bottle'\n  | 'wine-glass-alt'\n  | 'wine-glass-crack'\n  | 'wine-glass-empty'\n  | 'wine-glass'\n  | 'won-sign'\n  | 'won'\n  | 'worm'\n  | 'wreath-laurel'\n  | 'wreath'\n  | 'wrench-simple'\n  | 'wrench'\n  | 'x-ray'\n  | 'x'\n  | 'xmark-circle'\n  | 'xmark-hexagon'\n  | 'xmark-large'\n  | 'xmark-octagon'\n  | 'xmark-square'\n  | 'xmark-to-slot'\n  | 'xmark'\n  | 'xmarks-lines'\n  | 'y'\n  | 'yen-sign'\n  | 'yen'\n  | 'yin-yang'\n  | 'z'\n  | 'zap'\n  | 'zzz';\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}