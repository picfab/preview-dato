{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport cn from 'classnames';\nimport React from 'react';\nimport { useCallback } from 'react';\nimport s from './styles.module.css.json';\nexport var TextareaInput = function (_a) {\n  var _b;\n  var className = _a.className,\n    _c = _a.disabled,\n    disabled = _c === void 0 ? false : _c,\n    error = _a.error,\n    id = _a.id,\n    inputRef = _a.inputRef,\n    maxLength = _a.maxLength,\n    name = _a.name,\n    labelText = _a.labelText,\n    onBlur = _a.onBlur,\n    onChange = _a.onChange,\n    placeholder = _a.placeholder,\n    _d = _a.required,\n    required = _d === void 0 ? false : _d,\n    value = _a.value,\n    monospaced = _a.monospaced,\n    otherProps = __rest(_a, [\"className\", \"disabled\", \"error\", \"id\", \"inputRef\", \"maxLength\", \"name\", \"labelText\", \"onBlur\", \"onChange\", \"placeholder\", \"required\", \"value\", \"monospaced\"]);\n  var handleChange = useCallback(function (e) {\n    if (onChange) {\n      onChange(e.target.value, e);\n    }\n  }, [onChange]);\n  var classNames = cn(s.TextareaInput, className, (_b = {}, _b[s['TextareaInput--disabled']] = disabled, _b[s['TextareaInput--error']] = error, _b[s['TextareaInput--monospaced']] = monospaced, _b));\n  return React.createElement(\"textarea\", __assign({\n    className: classNames,\n    \"aria-label\": labelText,\n    id: id,\n    name: name,\n    required: required,\n    placeholder: placeholder,\n    maxLength: maxLength,\n    disabled: disabled,\n    onBlur: onBlur,\n    onChange: handleChange,\n    value: value,\n    ref: inputRef\n  }, otherProps));\n};","map":{"version":3,"names":["cn","React","useCallback","s","TextareaInput","_a","className","_c","disabled","error","id","inputRef","maxLength","name","labelText","onBlur","onChange","placeholder","_d","required","value","monospaced","otherProps","__rest","handleChange","e","target","classNames","_b","createElement","__assign","ref"],"sources":["/Users/fabienpicard/Projects/astro-website/node_modules/datocms-react-ui/src/TextareaInput/index.tsx"],"sourcesContent":["import cn from 'classnames';\nimport React from 'react';\nimport { type ChangeEvent, type RefObject, useCallback } from 'react';\nimport s from './styles.module.css.json';\n\nexport type TextareaInputChangeEventHandler = (\n  newValue: string,\n  event: React.ChangeEvent<HTMLTextAreaElement>,\n) => void;\n\nexport type TextareaInputProps = {\n  name?: string;\n  labelText?: string;\n  id?: string;\n  className?: string;\n  monospaced?: boolean;\n  onChange?: TextareaInputChangeEventHandler;\n  inputRef?: RefObject<HTMLTextAreaElement>;\n  error?: boolean;\n} & Omit<JSX.IntrinsicElements['textarea'], 'onChange'>;\n\nexport const TextareaInput = ({\n  className,\n  disabled = false,\n  error,\n  id,\n  inputRef,\n  maxLength,\n  name,\n  labelText,\n  onBlur,\n  onChange,\n  placeholder,\n  required = false,\n  value,\n  monospaced,\n  ...otherProps\n}: TextareaInputProps): JSX.Element => {\n  const handleChange = useCallback(\n    (e: ChangeEvent<HTMLTextAreaElement>) => {\n      if (onChange) {\n        onChange(e.target.value, e);\n      }\n    },\n    [onChange],\n  );\n\n  const classNames = cn(s.TextareaInput, className, {\n    [s['TextareaInput--disabled']]: disabled,\n    [s['TextareaInput--error']]: error,\n    [s['TextareaInput--monospaced']]: monospaced,\n  });\n\n  return (\n    <textarea\n      className={classNames}\n      aria-label={labelText}\n      id={id}\n      name={name}\n      required={required}\n      placeholder={placeholder}\n      maxLength={maxLength}\n      disabled={disabled}\n      onBlur={onBlur}\n      onChange={handleChange}\n      value={value}\n      ref={inputRef}\n      {...otherProps}\n    />\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,EAAE,MAAM,YAAY;AAC3B,OAAOC,KAAK,MAAM,OAAO;AACzB,SAA2CC,WAAW,QAAQ,OAAO;AACrE,OAAOC,CAAC,MAAM,0BAA0B;AAkBxC,OAAO,IAAMC,aAAa,GAAG,SAAAA,CAACC,EAgBT;;EAfnB,IAAAC,SAAS,GAAAD,EAAA,CAAAC,SAAA;IACTC,EAAA,GAAAF,EAAA,CAAAG,QAAgB;IAAhBA,QAAQ,GAAAD,EAAA,cAAG,KAAK,GAAAA,EAAA;IAChBE,KAAK,GAAAJ,EAAA,CAAAI,KAAA;IACLC,EAAE,GAAAL,EAAA,CAAAK,EAAA;IACFC,QAAQ,GAAAN,EAAA,CAAAM,QAAA;IACRC,SAAS,GAAAP,EAAA,CAAAO,SAAA;IACTC,IAAI,GAAAR,EAAA,CAAAQ,IAAA;IACJC,SAAS,GAAAT,EAAA,CAAAS,SAAA;IACTC,MAAM,GAAAV,EAAA,CAAAU,MAAA;IACNC,QAAQ,GAAAX,EAAA,CAAAW,QAAA;IACRC,WAAW,GAAAZ,EAAA,CAAAY,WAAA;IACXC,EAAA,GAAAb,EAAA,CAAAc,QAAgB;IAAhBA,QAAQ,GAAAD,EAAA,cAAG,KAAK,GAAAA,EAAA;IAChBE,KAAK,GAAAf,EAAA,CAAAe,KAAA;IACLC,UAAU,GAAAhB,EAAA,CAAAgB,UAAA;IACPC,UAAU,GAAAC,MAAA,CAAAlB,EAAA,EAfe,8JAgB7B,CADc;EAEb,IAAMmB,YAAY,GAAGtB,WAAW,CAC9B,UAACuB,CAAmC;IAClC,IAAIT,QAAQ,EAAE;MACZA,QAAQ,CAACS,CAAC,CAACC,MAAM,CAACN,KAAK,EAAEK,CAAC,CAAC;;EAE/B,CAAC,EACD,CAACT,QAAQ,CAAC,CACX;EAED,IAAMW,UAAU,GAAG3B,EAAE,CAACG,CAAC,CAACC,aAAa,EAAEE,SAAS,GAAAsB,EAAA,OAC9CA,EAAA,CAACzB,CAAC,CAAC,yBAAyB,CAAC,IAAGK,QAAQ,EACxCoB,EAAA,CAACzB,CAAC,CAAC,sBAAsB,CAAC,IAAGM,KAAK,EAClCmB,EAAA,CAACzB,CAAC,CAAC,2BAA2B,CAAC,IAAGkB,UAAU,E,IAC5C;EAEF,OACEpB,KAAA,CAAA4B,aAAA,aAAAC,QAAA;IACExB,SAAS,EAAEqB,UAAU;IAAA,cACTb,SAAS;IACrBJ,EAAE,EAAEA,EAAE;IACNG,IAAI,EAAEA,IAAI;IACVM,QAAQ,EAAEA,QAAQ;IAClBF,WAAW,EAAEA,WAAW;IACxBL,SAAS,EAAEA,SAAS;IACpBJ,QAAQ,EAAEA,QAAQ;IAClBO,MAAM,EAAEA,MAAM;IACdC,QAAQ,EAAEQ,YAAY;IACtBJ,KAAK,EAAEA,KAAK;IACZW,GAAG,EAAEpB;EAAQ,GACTW,UAAU,EACd;AAEN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}