{"ast":null,"code":"import classNames from 'classnames';\nimport React, { createContext, useContext, useEffect } from 'react';\nimport { generateStyleFromCtx } from '../generateStyleFromCtx';\nimport s from './styles.module.css.json';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport var CtxContext = createContext(null);\nexport function useCtx() {\n  var ctx = useContext(CtxContext);\n  if (!ctx) {\n    throw new Error('useCtx requires <Canvas />!');\n  }\n  return ctx;\n}\n/**\n * @example Color palette CSS variables\n *\n * Within the `Canvas` component, a color palette is made available as a set of\n * CSS variables, allowing you to conform to the theme of the current\n * environment:\n *\n * ```js\n * <Canvas ctx={ctx}>\n *   <Section title=\"Text colors\">\n *     <table>\n *       <tbody>\n *         <tr>\n *           <td>\n *             <code>--base-body-color</code>\n *           </td>\n *           <td width=\"30%\">\n *             <div\n *               style={{\n *                 width: '30px',\n *                 height: '30px',\n *                 background: 'var(--base-body-color)',\n *               }}\n *             />\n *           </td>\n *         </tr>\n *         <tr>\n *           <td>\n *             <code>--light-body-color</code>\n *           </td>\n *           <td width=\"30%\">\n *             <div\n *               style={{\n *                 width: '30px',\n *                 height: '30px',\n *                 background: 'var(--light-body-color)',\n *               }}\n *             />\n *           </td>\n *         </tr>\n *         <tr>\n *           <td>\n *             <code>--placeholder-body-color</code>\n *           </td>\n *           <td width=\"30%\">\n *             <div\n *               style={{\n *                 width: '30px',\n *                 height: '30px',\n *                 background: 'var(--placeholder-body-color)',\n *               }}\n *             />\n *           </td>\n *         </tr>\n *       </tbody>\n *     </table>\n *   </Section>\n *   <Section title=\"UI colors\">\n *     <table>\n *       <tbody>\n *         <tr>\n *           <td>\n *             <code>--light-bg-color</code>\n *           </td>\n *           <td width=\"30%\">\n *             <div\n *               style={{\n *                 width: '30px',\n *                 height: '30px',\n *                 background: 'var(--light-bg-color)',\n *               }}\n *             />\n *           </td>\n *         </tr>\n *         <tr>\n *           <td>\n *             <code>--lighter-bg-color</code>\n *           </td>\n *           <td width=\"30%\">\n *             <div\n *               style={{\n *                 width: '30px',\n *                 height: '30px',\n *                 background: 'var(--lighter-bg-color)',\n *               }}\n *             />\n *           </td>\n *         </tr>\n *         <tr>\n *           <td>\n *             <code>--disabled-bg-color</code>\n *           </td>\n *           <td width=\"30%\">\n *             <div\n *               style={{\n *                 width: '30px',\n *                 height: '30px',\n *                 background: 'var(--disabled-bg-color)',\n *               }}\n *             />\n *           </td>\n *         </tr>\n *         <tr>\n *           <td>\n *             <code>--border-color</code>\n *           </td>\n *           <td width=\"30%\">\n *             <div\n *               style={{\n *                 width: '30px',\n *                 height: '30px',\n *                 background: 'var(--border-color)',\n *               }}\n *             />\n *           </td>\n *         </tr>\n *         <tr>\n *           <td>\n *             <code>--darker-border-color</code>\n *           </td>\n *           <td width=\"30%\">\n *             <div\n *               style={{\n *                 width: '30px',\n *                 height: '30px',\n *                 background: 'var(--darker-border-color)',\n *               }}\n *             />\n *           </td>\n *         </tr>\n *         <tr>\n *           <td>\n *             <code>--alert-color</code>\n *           </td>\n *           <td width=\"30%\">\n *             <div\n *               style={{\n *                 width: '30px',\n *                 height: '30px',\n *                 background: 'var(--alert-color)',\n *               }}\n *             />\n *           </td>\n *         </tr>\n *         <tr>\n *           <td>\n *             <code>--warning-color</code>\n *           </td>\n *           <td width=\"30%\">\n *             <div\n *               style={{\n *                 width: '30px',\n *                 height: '30px',\n *                 background: 'var(--warning-color)',\n *               }}\n *             />\n *           </td>\n *         </tr>\n *         <tr>\n *           <td>\n *             <code>--notice-color</code>\n *           </td>\n *           <td width=\"30%\">\n *             <div\n *               style={{\n *                 width: '30px',\n *                 height: '30px',\n *                 background: 'var(--notice-color)',\n *               }}\n *             />\n *           </td>\n *         </tr>\n *         <tr>\n *           <td>\n *             <code>--warning-bg-color</code>\n *           </td>\n *           <td width=\"30%\">\n *             <div\n *               style={{\n *                 width: '30px',\n *                 height: '30px',\n *                 background: 'var(--warning-bg-color)',\n *               }}\n *             />\n *           </td>\n *         </tr>\n *         <tr>\n *           <td>\n *             <code>--add-color</code>\n *           </td>\n *           <td width=\"30%\">\n *             <div\n *               style={{\n *                 width: '30px',\n *                 height: '30px',\n *                 background: 'var(--add-color)',\n *               }}\n *             />\n *           </td>\n *         </tr>\n *         <tr>\n *           <td>\n *             <code>--remove-color</code>\n *           </td>\n *           <td width=\"30%\">\n *             <div\n *               style={{\n *                 width: '30px',\n *                 height: '30px',\n *                 background: 'var(--remove-color)',\n *               }}\n *             />\n *           </td>\n *         </tr>\n *       </tbody>\n *     </table>\n *   </Section>\n *   <Section title=\"Project-specific colors\">\n *     <table>\n *       <tbody>\n *         <tr>\n *           <td>\n *             <code>--accent-color</code>\n *           </td>\n *           <td width=\"30%\">\n *             <div\n *               style={{\n *                 width: '30px',\n *                 height: '30px',\n *                 background: 'var(--accent-color)',\n *               }}\n *             />\n *           </td>\n *         </tr>\n *         <tr>\n *           <td>\n *             <code>--primary-color</code>\n *           </td>\n *           <td width=\"30%\">\n *             <div\n *               style={{\n *                 width: '30px',\n *                 height: '30px',\n *                 background: 'var(--primary-color)',\n *               }}\n *             />\n *           </td>\n *         </tr>\n *         <tr>\n *           <td>\n *             <code>--light-color</code>\n *           </td>\n *           <td width=\"30%\">\n *             <div\n *               style={{\n *                 width: '30px',\n *                 height: '30px',\n *                 background: 'var(--light-color)',\n *               }}\n *             />\n *           </td>\n *         </tr>\n *         <tr>\n *           <td>\n *             <code>--dark-color</code>\n *           </td>\n *           <td width=\"30%\">\n *             <div\n *               style={{\n *                 width: '30px',\n *                 height: '30px',\n *                 background: 'var(--dark-color)',\n *               }}\n *             />\n *           </td>\n *         </tr>\n *       </tbody>\n *     </table>\n *   </Section>\n * </Canvas>;\n * ```\n *\n * @example Typography CSS variables\n *\n * Typography is a foundational element in UI design. Good typography\n * establishes a strong, cohesive visual hierarchy and presents content clearly\n * and efficiently to users. Within the `Canvas` component, a set of CSS\n * variables is available allowing your plugin to conform to the overall\n * look&feel of DatoCMS:\n *\n * ```js\n * <Canvas ctx={ctx}>\n *   <table>\n *     <tbody>\n *       <tr>\n *         <td>\n *           <code>--font-size-xxs</code>\n *         </td>\n *         <td>\n *           <div style={{ fontSize: 'var(--font-size-xxs)' }}>\n *             Size XXS\n *           </div>\n *         </td>\n *       </tr>\n *       <tr>\n *         <td>\n *           <code>--font-size-xs</code>\n *         </td>\n *         <td>\n *           <div style={{ fontSize: 'var(--font-size-xs)' }}>Size XS</div>\n *         </td>\n *       </tr>\n *       <tr>\n *         <td>\n *           <code>--font-size-s</code>\n *         </td>\n *         <td>\n *           <div style={{ fontSize: 'var(--font-size-s)' }}>Size S</div>\n *         </td>\n *       </tr>\n *       <tr>\n *         <td>\n *           <code>--font-size-m</code>\n *         </td>\n *         <td>\n *           <div style={{ fontSize: 'var(--font-size-m)' }}>Size M</div>\n *         </td>\n *       </tr>\n *       <tr>\n *         <td>\n *           <code>--font-size-l</code>\n *         </td>\n *         <td>\n *           <div\n *             style={{\n *               fontSize: 'var(--font-size-l)',\n *               fontWeight: 'var(--font-weight-bold)',\n *             }}\n *           >\n *             Size L\n *           </div>\n *         </td>\n *       </tr>\n *       <tr>\n *         <td>\n *           <code>--font-size-xl</code>\n *         </td>\n *         <td>\n *           <div\n *             style={{\n *               fontSize: 'var(--font-size-xl)',\n *               fontWeight: 'var(--font-weight-bold)',\n *             }}\n *           >\n *             Size XL\n *           </div>\n *         </td>\n *       </tr>\n *       <tr>\n *         <td>\n *           <code>--font-size-xxl</code>\n *         </td>\n *         <td>\n *           <div\n *             style={{\n *               fontSize: 'var(--font-size-xxl)',\n *               fontWeight: 'var(--font-weight-bold)',\n *             }}\n *           >\n *             Size XXL\n *           </div>\n *         </td>\n *       </tr>\n *       <tr>\n *         <td>\n *           <code>--font-size-xxxl</code>\n *         </td>\n *         <td>\n *           <div\n *             style={{\n *               fontSize: 'var(--font-size-xxxl)',\n *               fontWeight: 'var(--font-weight-bold)',\n *             }}\n *           >\n *             Size XXXL\n *           </div>\n *         </td>\n *       </tr>\n *     </tbody>\n *   </table>\n * </Canvas>;\n * ```\n *\n * @example Spacing CSS variables\n *\n * The following CSS variables are available as well, to mimick the spacing\n * between elements used by the main DatoCMS application. Negative spacing\n * variables are available too (`--negative-spacing-<SIZE>`).\n *\n * ```js\n * <Canvas ctx={ctx}>\n *   <table>\n *     <tbody>\n *       <tr>\n *         <td>\n *           <code>--spacing-s</code>\n *         </td>\n *         <td>\n *           <div\n *             style={{\n *               background: 'var(--accent-color)',\n *               width: 'var(--spacing-s)',\n *               height: 'var(--spacing-s)',\n *             }}\n *           />\n *         </td>\n *       </tr>\n *       <tr>\n *         <td>\n *           <code>--spacing-m</code>\n *         </td>\n *         <td>\n *           <div\n *             style={{\n *               background: 'var(--accent-color)',\n *               width: 'var(--spacing-m)',\n *               height: 'var(--spacing-m)',\n *             }}\n *           />\n *         </td>\n *       </tr>\n *       <tr>\n *         <td>\n *           <code>--spacing-l</code>\n *         </td>\n *         <td>\n *           <div\n *             style={{\n *               background: 'var(--accent-color)',\n *               width: 'var(--spacing-l)',\n *               height: 'var(--spacing-l)',\n *             }}\n *           />\n *         </td>\n *       </tr>\n *       <tr>\n *         <td>\n *           <code>--spacing-xl</code>\n *         </td>\n *         <td>\n *           <div\n *             style={{\n *               background: 'var(--accent-color)',\n *               width: 'var(--spacing-xl)',\n *               height: 'var(--spacing-xl)',\n *             }}\n *           />\n *         </td>\n *       </tr>\n *       <tr>\n *         <td>\n *           <code>--spacing-xxl</code>\n *         </td>\n *         <td>\n *           <div\n *             style={{\n *               background: 'var(--accent-color)',\n *               width: 'var(--spacing-xxl)',\n *               height: 'var(--spacing-xxl)',\n *             }}\n *           />\n *         </td>\n *       </tr>\n *       <tr>\n *         <td>\n *           <code>--spacing-xxxl</code>\n *         </td>\n *         <td>\n *           <div\n *             style={{\n *               background: 'var(--accent-color)',\n *               width: 'var(--spacing-xxxl)',\n *               height: 'var(--spacing-xxxl)',\n *             }}\n *           />\n *         </td>\n *       </tr>\n *     </tbody>\n *   </table>\n * </Canvas>;\n * ```\n */\nexport function Canvas(_a) {\n  var ctx = _a.ctx,\n    children = _a.children,\n    noAutoResizer = _a.noAutoResizer;\n  var mode = ctx.mode;\n  useEffect(function () {\n    if (!['renderPage', 'renderItemFormSidebar'].includes(mode) && !noAutoResizer) {\n      var ctxWithAutoResizer_1 = ctx;\n      ctxWithAutoResizer_1.startAutoResizer();\n      return function () {\n        ctxWithAutoResizer_1.stopAutoResizer();\n      };\n    }\n    return undefined;\n  }, [mode, noAutoResizer]);\n  return React.createElement(CtxContext.Provider, {\n    value: ctx\n  }, React.createElement(\"div\", {\n    className: classNames(s.themeVariables, s.canvas),\n    style: generateStyleFromCtx(ctx)\n  }, children));\n}","map":{"version":3,"names":["classNames","React","createContext","useContext","useEffect","generateStyleFromCtx","s","CtxContext","useCtx","ctx","Error","Canvas","_a","children","noAutoResizer","mode","includes","ctxWithAutoResizer_1","startAutoResizer","stopAutoResizer","undefined","createElement","Provider","value","className","themeVariables","canvas","style"],"sources":["/Users/fabienpicard/Projects/astro-website/node_modules/datocms-react-ui/src/Canvas/index.tsx"],"sourcesContent":["import classNames from 'classnames';\nimport type {\n  RenderMethods,\n  RenderProperties,\n  SizingUtilities,\n} from 'datocms-plugin-sdk';\nimport React, {\n  createContext,\n  type ReactNode,\n  useContext,\n  useEffect,\n} from 'react';\nimport { generateStyleFromCtx } from '../generateStyleFromCtx';\nimport s from './styles.module.css.json';\n\ntype BaseRenderPropertiesAndMethods = RenderProperties & RenderMethods;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const CtxContext = createContext<BaseRenderPropertiesAndMethods | null>(\n  null,\n);\n\nexport function useCtx<T extends BaseRenderPropertiesAndMethods>(): T {\n  const ctx = useContext(CtxContext);\n\n  if (!ctx) {\n    throw new Error('useCtx requires <Canvas />!');\n  }\n\n  return ctx as T;\n}\n\nexport type CanvasProps = {\n  ctx: BaseRenderPropertiesAndMethods;\n  noAutoResizer?: boolean;\n  children: ReactNode;\n};\n\n/**\n * @example Color palette CSS variables\n *\n * Within the `Canvas` component, a color palette is made available as a set of\n * CSS variables, allowing you to conform to the theme of the current\n * environment:\n *\n * ```js\n * <Canvas ctx={ctx}>\n *   <Section title=\"Text colors\">\n *     <table>\n *       <tbody>\n *         <tr>\n *           <td>\n *             <code>--base-body-color</code>\n *           </td>\n *           <td width=\"30%\">\n *             <div\n *               style={{\n *                 width: '30px',\n *                 height: '30px',\n *                 background: 'var(--base-body-color)',\n *               }}\n *             />\n *           </td>\n *         </tr>\n *         <tr>\n *           <td>\n *             <code>--light-body-color</code>\n *           </td>\n *           <td width=\"30%\">\n *             <div\n *               style={{\n *                 width: '30px',\n *                 height: '30px',\n *                 background: 'var(--light-body-color)',\n *               }}\n *             />\n *           </td>\n *         </tr>\n *         <tr>\n *           <td>\n *             <code>--placeholder-body-color</code>\n *           </td>\n *           <td width=\"30%\">\n *             <div\n *               style={{\n *                 width: '30px',\n *                 height: '30px',\n *                 background: 'var(--placeholder-body-color)',\n *               }}\n *             />\n *           </td>\n *         </tr>\n *       </tbody>\n *     </table>\n *   </Section>\n *   <Section title=\"UI colors\">\n *     <table>\n *       <tbody>\n *         <tr>\n *           <td>\n *             <code>--light-bg-color</code>\n *           </td>\n *           <td width=\"30%\">\n *             <div\n *               style={{\n *                 width: '30px',\n *                 height: '30px',\n *                 background: 'var(--light-bg-color)',\n *               }}\n *             />\n *           </td>\n *         </tr>\n *         <tr>\n *           <td>\n *             <code>--lighter-bg-color</code>\n *           </td>\n *           <td width=\"30%\">\n *             <div\n *               style={{\n *                 width: '30px',\n *                 height: '30px',\n *                 background: 'var(--lighter-bg-color)',\n *               }}\n *             />\n *           </td>\n *         </tr>\n *         <tr>\n *           <td>\n *             <code>--disabled-bg-color</code>\n *           </td>\n *           <td width=\"30%\">\n *             <div\n *               style={{\n *                 width: '30px',\n *                 height: '30px',\n *                 background: 'var(--disabled-bg-color)',\n *               }}\n *             />\n *           </td>\n *         </tr>\n *         <tr>\n *           <td>\n *             <code>--border-color</code>\n *           </td>\n *           <td width=\"30%\">\n *             <div\n *               style={{\n *                 width: '30px',\n *                 height: '30px',\n *                 background: 'var(--border-color)',\n *               }}\n *             />\n *           </td>\n *         </tr>\n *         <tr>\n *           <td>\n *             <code>--darker-border-color</code>\n *           </td>\n *           <td width=\"30%\">\n *             <div\n *               style={{\n *                 width: '30px',\n *                 height: '30px',\n *                 background: 'var(--darker-border-color)',\n *               }}\n *             />\n *           </td>\n *         </tr>\n *         <tr>\n *           <td>\n *             <code>--alert-color</code>\n *           </td>\n *           <td width=\"30%\">\n *             <div\n *               style={{\n *                 width: '30px',\n *                 height: '30px',\n *                 background: 'var(--alert-color)',\n *               }}\n *             />\n *           </td>\n *         </tr>\n *         <tr>\n *           <td>\n *             <code>--warning-color</code>\n *           </td>\n *           <td width=\"30%\">\n *             <div\n *               style={{\n *                 width: '30px',\n *                 height: '30px',\n *                 background: 'var(--warning-color)',\n *               }}\n *             />\n *           </td>\n *         </tr>\n *         <tr>\n *           <td>\n *             <code>--notice-color</code>\n *           </td>\n *           <td width=\"30%\">\n *             <div\n *               style={{\n *                 width: '30px',\n *                 height: '30px',\n *                 background: 'var(--notice-color)',\n *               }}\n *             />\n *           </td>\n *         </tr>\n *         <tr>\n *           <td>\n *             <code>--warning-bg-color</code>\n *           </td>\n *           <td width=\"30%\">\n *             <div\n *               style={{\n *                 width: '30px',\n *                 height: '30px',\n *                 background: 'var(--warning-bg-color)',\n *               }}\n *             />\n *           </td>\n *         </tr>\n *         <tr>\n *           <td>\n *             <code>--add-color</code>\n *           </td>\n *           <td width=\"30%\">\n *             <div\n *               style={{\n *                 width: '30px',\n *                 height: '30px',\n *                 background: 'var(--add-color)',\n *               }}\n *             />\n *           </td>\n *         </tr>\n *         <tr>\n *           <td>\n *             <code>--remove-color</code>\n *           </td>\n *           <td width=\"30%\">\n *             <div\n *               style={{\n *                 width: '30px',\n *                 height: '30px',\n *                 background: 'var(--remove-color)',\n *               }}\n *             />\n *           </td>\n *         </tr>\n *       </tbody>\n *     </table>\n *   </Section>\n *   <Section title=\"Project-specific colors\">\n *     <table>\n *       <tbody>\n *         <tr>\n *           <td>\n *             <code>--accent-color</code>\n *           </td>\n *           <td width=\"30%\">\n *             <div\n *               style={{\n *                 width: '30px',\n *                 height: '30px',\n *                 background: 'var(--accent-color)',\n *               }}\n *             />\n *           </td>\n *         </tr>\n *         <tr>\n *           <td>\n *             <code>--primary-color</code>\n *           </td>\n *           <td width=\"30%\">\n *             <div\n *               style={{\n *                 width: '30px',\n *                 height: '30px',\n *                 background: 'var(--primary-color)',\n *               }}\n *             />\n *           </td>\n *         </tr>\n *         <tr>\n *           <td>\n *             <code>--light-color</code>\n *           </td>\n *           <td width=\"30%\">\n *             <div\n *               style={{\n *                 width: '30px',\n *                 height: '30px',\n *                 background: 'var(--light-color)',\n *               }}\n *             />\n *           </td>\n *         </tr>\n *         <tr>\n *           <td>\n *             <code>--dark-color</code>\n *           </td>\n *           <td width=\"30%\">\n *             <div\n *               style={{\n *                 width: '30px',\n *                 height: '30px',\n *                 background: 'var(--dark-color)',\n *               }}\n *             />\n *           </td>\n *         </tr>\n *       </tbody>\n *     </table>\n *   </Section>\n * </Canvas>;\n * ```\n *\n * @example Typography CSS variables\n *\n * Typography is a foundational element in UI design. Good typography\n * establishes a strong, cohesive visual hierarchy and presents content clearly\n * and efficiently to users. Within the `Canvas` component, a set of CSS\n * variables is available allowing your plugin to conform to the overall\n * look&feel of DatoCMS:\n *\n * ```js\n * <Canvas ctx={ctx}>\n *   <table>\n *     <tbody>\n *       <tr>\n *         <td>\n *           <code>--font-size-xxs</code>\n *         </td>\n *         <td>\n *           <div style={{ fontSize: 'var(--font-size-xxs)' }}>\n *             Size XXS\n *           </div>\n *         </td>\n *       </tr>\n *       <tr>\n *         <td>\n *           <code>--font-size-xs</code>\n *         </td>\n *         <td>\n *           <div style={{ fontSize: 'var(--font-size-xs)' }}>Size XS</div>\n *         </td>\n *       </tr>\n *       <tr>\n *         <td>\n *           <code>--font-size-s</code>\n *         </td>\n *         <td>\n *           <div style={{ fontSize: 'var(--font-size-s)' }}>Size S</div>\n *         </td>\n *       </tr>\n *       <tr>\n *         <td>\n *           <code>--font-size-m</code>\n *         </td>\n *         <td>\n *           <div style={{ fontSize: 'var(--font-size-m)' }}>Size M</div>\n *         </td>\n *       </tr>\n *       <tr>\n *         <td>\n *           <code>--font-size-l</code>\n *         </td>\n *         <td>\n *           <div\n *             style={{\n *               fontSize: 'var(--font-size-l)',\n *               fontWeight: 'var(--font-weight-bold)',\n *             }}\n *           >\n *             Size L\n *           </div>\n *         </td>\n *       </tr>\n *       <tr>\n *         <td>\n *           <code>--font-size-xl</code>\n *         </td>\n *         <td>\n *           <div\n *             style={{\n *               fontSize: 'var(--font-size-xl)',\n *               fontWeight: 'var(--font-weight-bold)',\n *             }}\n *           >\n *             Size XL\n *           </div>\n *         </td>\n *       </tr>\n *       <tr>\n *         <td>\n *           <code>--font-size-xxl</code>\n *         </td>\n *         <td>\n *           <div\n *             style={{\n *               fontSize: 'var(--font-size-xxl)',\n *               fontWeight: 'var(--font-weight-bold)',\n *             }}\n *           >\n *             Size XXL\n *           </div>\n *         </td>\n *       </tr>\n *       <tr>\n *         <td>\n *           <code>--font-size-xxxl</code>\n *         </td>\n *         <td>\n *           <div\n *             style={{\n *               fontSize: 'var(--font-size-xxxl)',\n *               fontWeight: 'var(--font-weight-bold)',\n *             }}\n *           >\n *             Size XXXL\n *           </div>\n *         </td>\n *       </tr>\n *     </tbody>\n *   </table>\n * </Canvas>;\n * ```\n *\n * @example Spacing CSS variables\n *\n * The following CSS variables are available as well, to mimick the spacing\n * between elements used by the main DatoCMS application. Negative spacing\n * variables are available too (`--negative-spacing-<SIZE>`).\n *\n * ```js\n * <Canvas ctx={ctx}>\n *   <table>\n *     <tbody>\n *       <tr>\n *         <td>\n *           <code>--spacing-s</code>\n *         </td>\n *         <td>\n *           <div\n *             style={{\n *               background: 'var(--accent-color)',\n *               width: 'var(--spacing-s)',\n *               height: 'var(--spacing-s)',\n *             }}\n *           />\n *         </td>\n *       </tr>\n *       <tr>\n *         <td>\n *           <code>--spacing-m</code>\n *         </td>\n *         <td>\n *           <div\n *             style={{\n *               background: 'var(--accent-color)',\n *               width: 'var(--spacing-m)',\n *               height: 'var(--spacing-m)',\n *             }}\n *           />\n *         </td>\n *       </tr>\n *       <tr>\n *         <td>\n *           <code>--spacing-l</code>\n *         </td>\n *         <td>\n *           <div\n *             style={{\n *               background: 'var(--accent-color)',\n *               width: 'var(--spacing-l)',\n *               height: 'var(--spacing-l)',\n *             }}\n *           />\n *         </td>\n *       </tr>\n *       <tr>\n *         <td>\n *           <code>--spacing-xl</code>\n *         </td>\n *         <td>\n *           <div\n *             style={{\n *               background: 'var(--accent-color)',\n *               width: 'var(--spacing-xl)',\n *               height: 'var(--spacing-xl)',\n *             }}\n *           />\n *         </td>\n *       </tr>\n *       <tr>\n *         <td>\n *           <code>--spacing-xxl</code>\n *         </td>\n *         <td>\n *           <div\n *             style={{\n *               background: 'var(--accent-color)',\n *               width: 'var(--spacing-xxl)',\n *               height: 'var(--spacing-xxl)',\n *             }}\n *           />\n *         </td>\n *       </tr>\n *       <tr>\n *         <td>\n *           <code>--spacing-xxxl</code>\n *         </td>\n *         <td>\n *           <div\n *             style={{\n *               background: 'var(--accent-color)',\n *               width: 'var(--spacing-xxxl)',\n *               height: 'var(--spacing-xxxl)',\n *             }}\n *           />\n *         </td>\n *       </tr>\n *     </tbody>\n *   </table>\n * </Canvas>;\n * ```\n */\n\nexport function Canvas({\n  ctx,\n  children,\n  noAutoResizer,\n}: CanvasProps): JSX.Element {\n  const { mode } = ctx as unknown as { mode: string };\n\n  useEffect(() => {\n    if (\n      !['renderPage', 'renderItemFormSidebar'].includes(mode) &&\n      !noAutoResizer\n    ) {\n      const ctxWithAutoResizer = ctx as unknown as SizingUtilities;\n      ctxWithAutoResizer.startAutoResizer();\n\n      return () => {\n        ctxWithAutoResizer.stopAutoResizer();\n      };\n    }\n\n    return undefined;\n  }, [mode, noAutoResizer]);\n\n  return (\n    <CtxContext.Provider value={ctx}>\n      <div\n        className={classNames(s.themeVariables, s.canvas)}\n        style={generateStyleFromCtx(ctx)}\n      >\n        {children}\n      </div>\n    </CtxContext.Provider>\n  );\n}\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,YAAY;AAMnC,OAAOC,KAAK,IACVC,aAAa,EAEbC,UAAU,EACVC,SAAS,QACJ,OAAO;AACd,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,OAAOC,CAAC,MAAM,0BAA0B;AAIxC;AACA,OAAO,IAAMC,UAAU,GAAGL,aAAa,CACrC,IAAI,CACL;AAED,OAAM,SAAUM,MAAMA,CAAA;EACpB,IAAMC,GAAG,GAAGN,UAAU,CAACI,UAAU,CAAC;EAElC,IAAI,CAACE,GAAG,EAAE;IACR,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;;EAGhD,OAAOD,GAAQ;AACjeA,OAAM,SAAUE,MAAMA,CAACC,EAIT;MAHZH,GAAG,GAAAG,EAAA,CAAAH,GAAA;IACHI,QAAQ,GAAAD,EAAA,CAAAC,QAAA;IACRC,aAAa,GAAAF,EAAA,CAAAE,aAAA;EAEL,IAAAC,IAAI,GAAKN,GAAkC,CAAAM,IAAvC;EAEZX,SAAS,CAAC;IACR,IACE,CAAC,CAAC,YAAY,EAAE,uBAAuB,CAAC,CAACY,QAAQ,CAACD,IAAI,CAAC,IACvD,CAACD,aAAa,EACd;MACA,IAAMG,oBAAkB,GAAGR,GAAiC;MAC5DQ,oBAAkB,CAACC,gBAAgB,EAAE;MAErC,OAAO;QACLD,oBAAkB,CAACE,eAAe,EAAE;MACtC,CAAC;;IAGH,OAAOC,SAAS;EAClB,CAAC,EAAE,CAACL,IAAI,EAAED,aAAa,CAAC,CAAC;EAEzB,OACEb,KAAA,CAAAoB,aAAA,CAACd,UAAU,CAACe,QAAQ;IAACC,KAAK,EAAEd;EAAG,GAC7BR,KAAA,CAAAoB,aAAA;IACEG,SAAS,EAAExB,UAAU,CAACM,CAAC,CAACmB,cAAc,EAAEnB,CAAC,CAACoB,MAAM,CAAC;IACjDC,KAAK,EAAEtB,oBAAoB,CAACI,GAAG;EAAC,GAE/BI,QAAQ,CACL,CACc;AAE1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}