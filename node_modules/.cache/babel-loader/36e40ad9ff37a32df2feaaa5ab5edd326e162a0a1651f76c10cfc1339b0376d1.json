{"ast":null,"code":"import cn from 'classnames';\nimport React from 'react';\nimport s from './styles.module.css.json';\n/**\n * @example Basic usage\n *\n * ```jsx\n * <Canvas ctx={ctx}>\n *   <Section title=\"Section title\">\n *     Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n *     eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\n *     ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n *     aliquip ex ea commodo consequat.\n *   </Section>\n * </Canvas>;\n * ```\n *\n * @example Highlighted\n *\n * ```jsx\n * <Canvas ctx={ctx}>\n *   <Section title=\"Section title\" highlighted>\n *     Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n *     eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\n *     ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n *     aliquip ex ea commodo consequat.\n *   </Section>\n * </Canvas>;\n * ```\n *\n * @example Collapsible\n *\n * ```jsx\n * <Canvas ctx={ctx}>\n *   <StateManager initial={true}>\n *     {(isOpen, setOpen) => (\n *       <Section\n *         title=\"Section title\"\n *         collapsible={{ isOpen, onToggle: () => setOpen((v) => !v) }}\n *       >\n *         Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n *         eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n *         enim ad minim veniam, quis nostrud exercitation ullamco laboris\n *         nisi ut aliquip ex ea commodo consequat.\n *       </Section>\n *     )}\n *   </StateManager>\n * </Canvas>;\n * ```\n */\nexport function Section(_a) {\n  var _b, _c;\n  var title = _a.title,\n    children = _a.children,\n    highlighted = _a.highlighted,\n    collapsible = _a.collapsible,\n    headerClassName = _a.headerClassName,\n    titleClassName = _a.titleClassName,\n    headerStyle = _a.headerStyle,\n    titleStyle = _a.titleStyle;\n  return React.createElement(\"div\", {\n    className: cn(s.Section, (_b = {}, _b[s['Section--highlighted']] = highlighted, _b))\n  }, React.createElement(\"div\", {\n    className: cn(s.Section__header, headerClassName),\n    style: headerStyle\n  }, React.createElement(\"div\", {\n    className: cn(s.Section__title, titleClassName),\n    style: titleStyle\n  }, collapsible && React.createElement(\"button\", {\n    type: \"button\",\n    className: cn(s.Section__arrow, (_c = {}, _c[s['Section__arrow--is-open']] = collapsible.isOpen, _c)),\n    onClick: collapsible.onToggle\n  }), React.createElement(\"div\", {\n    className: s.Section__title__content\n  }, title))), (!collapsible || collapsible.isOpen) && children);\n}","map":{"version":3,"names":["cn","React","s","Section","_a","title","children","highlighted","collapsible","headerClassName","titleClassName","headerStyle","titleStyle","createElement","className","_b","Section__header","style","Section__title","type","Section__arrow","_c","isOpen","onClick","onToggle","Section__title__content"],"sources":["/Users/fabienpicard/Projects/astro-website/node_modules/datocms-react-ui/src/Section/index.tsx"],"sourcesContent":["import cn from 'classnames';\nimport React, { type CSSProperties, type ReactNode } from 'react';\nimport s from './styles.module.css.json';\n\ntype SectionProps = {\n  title: ReactNode;\n  children?: ReactNode;\n  highlighted?: boolean;\n  collapsible?: { isOpen: boolean; onToggle: () => void };\n  headerClassName?: string;\n  titleClassName?: string;\n  headerStyle?: CSSProperties;\n  titleStyle?: CSSProperties;\n};\n\n/**\n * @example Basic usage\n *\n * ```jsx\n * <Canvas ctx={ctx}>\n *   <Section title=\"Section title\">\n *     Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n *     eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\n *     ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n *     aliquip ex ea commodo consequat.\n *   </Section>\n * </Canvas>;\n * ```\n *\n * @example Highlighted\n *\n * ```jsx\n * <Canvas ctx={ctx}>\n *   <Section title=\"Section title\" highlighted>\n *     Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n *     eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\n *     ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n *     aliquip ex ea commodo consequat.\n *   </Section>\n * </Canvas>;\n * ```\n *\n * @example Collapsible\n *\n * ```jsx\n * <Canvas ctx={ctx}>\n *   <StateManager initial={true}>\n *     {(isOpen, setOpen) => (\n *       <Section\n *         title=\"Section title\"\n *         collapsible={{ isOpen, onToggle: () => setOpen((v) => !v) }}\n *       >\n *         Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n *         eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n *         enim ad minim veniam, quis nostrud exercitation ullamco laboris\n *         nisi ut aliquip ex ea commodo consequat.\n *       </Section>\n *     )}\n *   </StateManager>\n * </Canvas>;\n * ```\n */\nexport function Section({\n  title,\n  children,\n  highlighted,\n  collapsible,\n  headerClassName,\n  titleClassName,\n  headerStyle,\n  titleStyle,\n}: SectionProps): JSX.Element {\n  return (\n    <div\n      className={cn(s.Section, { [s['Section--highlighted']]: highlighted })}\n    >\n      <div\n        className={cn(s.Section__header, headerClassName)}\n        style={headerStyle}\n      >\n        <div\n          className={cn(\n            s.Section__title,\n\n            titleClassName,\n          )}\n          style={titleStyle}\n        >\n          {collapsible && (\n            <button\n              type=\"button\"\n              className={cn(s.Section__arrow, {\n                [s['Section__arrow--is-open']]: collapsible.isOpen,\n              })}\n              onClick={collapsible.onToggle}\n            />\n          )}\n          <div className={s.Section__title__content}>{title}</div>\n        </div>\n      </div>\n      {(!collapsible || collapsible.isOpen) && children}\n    </div>\n  );\n}\n"],"mappings":"AAAA,OAAOA,EAAE,MAAM,YAAY;AAC3B,OAAOC,KAA6C,MAAM,OAAO;AACjE,OAAOC,CAAC,MAAM,0BAA0B;AAaxC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA,OAAM,SAAUC,OAAOA,CAACC,EAST;;MARbC,KAAK,GAAAD,EAAA,CAAAC,KAAA;IACLC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;IACRC,WAAW,GAAAH,EAAA,CAAAG,WAAA;IACXC,WAAW,GAAAJ,EAAA,CAAAI,WAAA;IACXC,eAAe,GAAAL,EAAA,CAAAK,eAAA;IACfC,cAAc,GAAAN,EAAA,CAAAM,cAAA;IACdC,WAAW,GAAAP,EAAA,CAAAO,WAAA;IACXC,UAAU,GAAAR,EAAA,CAAAQ,UAAA;EAEV,OACEX,KAAA,CAAAY,aAAA;IACEC,SAAS,EAAEd,EAAE,CAACE,CAAC,CAACC,OAAO,GAAAY,EAAA,OAAIA,EAAA,CAACb,CAAC,CAAC,sBAAsB,CAAC,IAAGK,WAAW,EAAAQ,EAAA;EAAG,GAEtEd,KAAA,CAAAY,aAAA;IACEC,SAAS,EAAEd,EAAE,CAACE,CAAC,CAACc,eAAe,EAAEP,eAAe,CAAC;IACjDQ,KAAK,EAAEN;EAAW,GAElBV,KAAA,CAAAY,aAAA;IACEC,SAAS,EAAEd,EAAE,CACXE,CAAC,CAACgB,cAAc,EAEhBR,cAAc,CACf;IACDO,KAAK,EAAEL;EAAU,GAEhBJ,WAAW,IACVP,KAAA,CAAAY,aAAA;IACEM,IAAI,EAAC,QAAQ;IACbL,SAAS,EAAEd,EAAE,CAACE,CAAC,CAACkB,cAAc,GAAAC,EAAA,OAC5BA,EAAA,CAACnB,CAAC,CAAC,yBAAyB,CAAC,IAAGM,WAAW,CAACc,MAAM,E,IAClD;IACFC,OAAO,EAAEf,WAAW,CAACgB;EAAQ,EAEhC,EACDvB,KAAA,CAAAY,aAAA;IAAKC,SAAS,EAAEZ,CAAC,CAACuB;EAAuB,GAAGpB,KAAK,CAAO,CACpD,CACF,EACL,CAAC,CAACG,WAAW,IAAIA,WAAW,CAACc,MAAM,KAAKhB,QAAQ,CAC7C;AAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}