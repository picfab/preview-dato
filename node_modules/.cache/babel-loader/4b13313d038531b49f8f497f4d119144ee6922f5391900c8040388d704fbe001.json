{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport cn from 'classnames';\nimport React from 'react';\nimport s from './styles.module.css.json';\nexport function SwitchInput(_a) {\n  var _b;\n  var className = _a.className,\n    value = _a.value,\n    disabled = _a.disabled,\n    onClick = _a.onClick,\n    onChange = _a.onChange,\n    onKeyDown = _a.onKeyDown,\n    restProps = __rest(_a, [\"className\", \"value\", \"disabled\", \"onClick\", \"onChange\", \"onKeyDown\"]);\n  function triggerChange(newValue, event) {\n    if (!disabled && onChange) {\n      onChange(newValue, event);\n    }\n  }\n  function onInternalKeyDown(e) {\n    if (e.key === 'ArrowLeft') {\n      triggerChange(false, e);\n    } else if (e.key === 'ArrowRight') {\n      triggerChange(true, e);\n    }\n    onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(e);\n  }\n  function onInternalClick(e) {\n    triggerChange(!value, e);\n    onClick === null || onClick === void 0 ? void 0 : onClick(e);\n  }\n  var switchClassName = cn(s.switchInput, className, (_b = {}, _b[s.switchInput__checked] = value, _b[s.switchInput__disabled] = disabled, _b));\n  return React.createElement(\"button\", __assign({}, restProps, {\n    type: \"button\",\n    role: \"switch\",\n    \"aria-checked\": value,\n    disabled: disabled,\n    className: switchClassName,\n    onKeyDown: onInternalKeyDown,\n    onClick: onInternalClick\n  }), React.createElement(\"span\", {\n    className: s.switchInput__inner\n  }));\n}","map":{"version":3,"names":["cn","React","s","SwitchInput","_a","className","value","disabled","onClick","onChange","onKeyDown","restProps","__rest","triggerChange","newValue","event","onInternalKeyDown","e","key","onInternalClick","switchClassName","switchInput","_b","switchInput__checked","switchInput__disabled","createElement","__assign","type","role","switchInput__inner"],"sources":["/Users/fabienpicard/Projects/astro-website/node_modules/datocms-react-ui/src/SwitchInput/index.tsx"],"sourcesContent":["import cn from 'classnames';\nimport React from 'react';\nimport s from './styles.module.css.json';\n\nexport type SwitchInputChangeEventHandler = (\n  newValue: boolean,\n  event:\n    | React.MouseEvent<HTMLButtonElement>\n    | React.KeyboardEvent<HTMLButtonElement>,\n) => void;\n\nexport interface SwitchInputProps\n  extends Omit<React.HTMLAttributes<HTMLButtonElement>, 'onChange'> {\n  name: string;\n  disabled?: boolean;\n  onChange?: SwitchInputChangeEventHandler;\n  onKeyDown?: React.KeyboardEventHandler<HTMLButtonElement>;\n  value: boolean;\n}\n\nexport function SwitchInput({\n  className,\n  value,\n  disabled,\n  onClick,\n  onChange,\n  onKeyDown,\n  ...restProps\n}: SwitchInputProps): JSX.Element {\n  function triggerChange(\n    newValue: boolean,\n    event:\n      | React.MouseEvent<HTMLButtonElement>\n      | React.KeyboardEvent<HTMLButtonElement>,\n  ) {\n    if (!disabled && onChange) {\n      onChange(newValue, event);\n    }\n  }\n\n  function onInternalKeyDown(e: React.KeyboardEvent<HTMLButtonElement>) {\n    if (e.key === 'ArrowLeft') {\n      triggerChange(false, e);\n    } else if (e.key === 'ArrowRight') {\n      triggerChange(true, e);\n    }\n    onKeyDown?.(e);\n  }\n\n  function onInternalClick(e: React.MouseEvent<HTMLButtonElement>) {\n    triggerChange(!value, e);\n    onClick?.(e);\n  }\n\n  const switchClassName = cn(s.switchInput, className, {\n    [s.switchInput__checked]: value,\n    [s.switchInput__disabled]: disabled,\n  });\n\n  return (\n    <button\n      {...restProps}\n      type=\"button\"\n      role=\"switch\"\n      aria-checked={value}\n      disabled={disabled}\n      className={switchClassName}\n      onKeyDown={onInternalKeyDown}\n      onClick={onInternalClick}\n    >\n      <span className={s.switchInput__inner} />\n    </button>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,EAAE,MAAM,YAAY;AAC3B,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,CAAC,MAAM,0BAA0B;AAkBxC,OAAM,SAAUC,WAAWA,CAACC,EAQT;;EAPjB,IAAAC,SAAS,GAAAD,EAAA,CAAAC,SAAA;IACTC,KAAK,GAAAF,EAAA,CAAAE,KAAA;IACLC,QAAQ,GAAAH,EAAA,CAAAG,QAAA;IACRC,OAAO,GAAAJ,EAAA,CAAAI,OAAA;IACPC,QAAQ,GAAAL,EAAA,CAAAK,QAAA;IACRC,SAAS,GAAAN,EAAA,CAAAM,SAAA;IACNC,SAAS,GAAAC,MAAA,CAAAR,EAAA,EAPc,sEAQ3B,CADa;EAEZ,SAASS,aAAaA,CACpBC,QAAiB,EACjBC,KAE0C;IAE1C,IAAI,CAACR,QAAQ,IAAIE,QAAQ,EAAE;MACzBA,QAAQ,CAACK,QAAQ,EAAEC,KAAK,CAAC;;EAE7B;EAEA,SAASC,iBAAiBA,CAACC,CAAyC;IAClE,IAAIA,CAAC,CAACC,GAAG,KAAK,WAAW,EAAE;MACzBL,aAAa,CAAC,KAAK,EAAEI,CAAC,CAAC;KACxB,MAAM,IAAIA,CAAC,CAACC,GAAG,KAAK,YAAY,EAAE;MACjCL,aAAa,CAAC,IAAI,EAAEI,CAAC,CAAC;;IAExBP,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAGO,CAAC,CAAC;EAChB;EAEA,SAASE,eAAeA,CAACF,CAAsC;IAC7DJ,aAAa,CAAC,CAACP,KAAK,EAAEW,CAAC,CAAC;IACxBT,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAGS,CAAC,CAAC;EACd;EAEA,IAAMG,eAAe,GAAGpB,EAAE,CAACE,CAAC,CAACmB,WAAW,EAAEhB,SAAS,GAAAiB,EAAA,OACjDA,EAAA,CAACpB,CAAC,CAACqB,oBAAoB,IAAGjB,KAAK,EAC/BgB,EAAA,CAACpB,CAAC,CAACsB,qBAAqB,IAAGjB,QAAQ,E,IACnC;EAEF,OACEN,KAAA,CAAAwB,aAAA,WAAAC,QAAA,KACMf,SAAS;IACbgB,IAAI,EAAC,QAAQ;IACbC,IAAI,EAAC,QAAQ;IAAA,gBACCtB,KAAK;IACnBC,QAAQ,EAAEA,QAAQ;IAClBF,SAAS,EAAEe,eAAe;IAC1BV,SAAS,EAAEM,iBAAiB;IAC5BR,OAAO,EAAEW;EAAe,IAExBlB,KAAA,CAAAwB,aAAA;IAAMpB,SAAS,EAAEH,CAAC,CAAC2B;EAAkB,EAAI,CAClC;AAEb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}